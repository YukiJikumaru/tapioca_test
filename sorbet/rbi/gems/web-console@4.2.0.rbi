# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `web-console` gem.
# Please instead update this file by running `bin/tapioca gem web-console`.

module ActionDispatch::ContentSecurityPolicy::Request
  # source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#54
  def content_security_policy; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#58
  def content_security_policy=(policy); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#86
  def content_security_policy_nonce; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#78
  def content_security_policy_nonce_directives; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#82
  def content_security_policy_nonce_directives=(generator); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#70
  def content_security_policy_nonce_generator; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#74
  def content_security_policy_nonce_generator=(generator); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#62
  def content_security_policy_report_only; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#66
  def content_security_policy_report_only=(value); end

  private

  # source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#97
  def generate_content_security_policy_nonce; end
end

# source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#51
ActionDispatch::ContentSecurityPolicy::Request::NONCE = T.let(T.unsafe(nil), String)

# source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#52
ActionDispatch::ContentSecurityPolicy::Request::NONCE_DIRECTIVES = T.let(T.unsafe(nil), String)

# source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#50
ActionDispatch::ContentSecurityPolicy::Request::NONCE_GENERATOR = T.let(T.unsafe(nil), String)

# source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#48
ActionDispatch::ContentSecurityPolicy::Request::POLICY = T.let(T.unsafe(nil), String)

# source://actionpack/6.1.7/lib/action_dispatch/http/content_security_policy.rb#49
ActionDispatch::ContentSecurityPolicy::Request::POLICY_REPORT_ONLY = T.let(T.unsafe(nil), String)

module ActionDispatch::Flash::RequestMethods
  # source://actionpack/6.1.7/lib/action_dispatch/middleware/flash.rb#61
  def commit_flash; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/flash.rb#47
  def flash; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/flash.rb#53
  def flash=(flash); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/flash.rb#57
  def flash_hash; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/flash.rb#76
  def reset_session; end
end

module ActionDispatch::Http::Cache::Request
  # source://actionpack/6.1.7/lib/action_dispatch/http/cache.rb#28
  def etag_matches?(etag); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/cache.rb#38
  def fresh?(response); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/cache.rb#10
  def if_modified_since; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/cache.rb#16
  def if_none_match; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/cache.rb#20
  def if_none_match_etags; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/cache.rb#24
  def not_modified?(modified_at); end
end

# source://actionpack/6.1.7/lib/action_dispatch/http/cache.rb#7
ActionDispatch::Http::Cache::Request::HTTP_IF_MODIFIED_SINCE = T.let(T.unsafe(nil), String)

# source://actionpack/6.1.7/lib/action_dispatch/http/cache.rb#8
ActionDispatch::Http::Cache::Request::HTTP_IF_NONE_MATCH = T.let(T.unsafe(nil), String)

module ActionDispatch::Http::FilterParameters
  # source://actionpack/6.1.7/lib/action_dispatch/http/filter_parameters.rb#34
  def initialize; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/filter_parameters.rb#49
  def filtered_env; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/filter_parameters.rb#42
  def filtered_parameters; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/filter_parameters.rb#54
  def filtered_path; end

  private

  # source://actionpack/6.1.7/lib/action_dispatch/http/filter_parameters.rb#65
  def env_filter; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/filter_parameters.rb#78
  def filtered_query_string; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/filter_parameters.rb#59
  def parameter_filter; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/filter_parameters.rb#72
  def parameter_filter_for(filters); end
end

# source://actionpack/6.1.7/lib/action_dispatch/http/filter_parameters.rb#30
ActionDispatch::Http::FilterParameters::ENV_MATCH = T.let(T.unsafe(nil), Array)

# source://actionpack/6.1.7/lib/action_dispatch/http/filter_parameters.rb#76
ActionDispatch::Http::FilterParameters::KV_RE = T.let(T.unsafe(nil), String)

# source://actionpack/6.1.7/lib/action_dispatch/http/filter_parameters.rb#32
ActionDispatch::Http::FilterParameters::NULL_ENV_FILTER = T.let(T.unsafe(nil), ActiveSupport::ParameterFilter)

# source://actionpack/6.1.7/lib/action_dispatch/http/filter_parameters.rb#31
ActionDispatch::Http::FilterParameters::NULL_PARAM_FILTER = T.let(T.unsafe(nil), ActiveSupport::ParameterFilter)

# source://actionpack/6.1.7/lib/action_dispatch/http/filter_parameters.rb#77
ActionDispatch::Http::FilterParameters::PAIR_RE = T.let(T.unsafe(nil), Regexp)

module ActionDispatch::Http::MimeNegotiation
  extend ::ActiveSupport::Concern

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#44
  def accepts; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#22
  def content_mime_type; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#35
  def content_type; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#65
  def format(view_path = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#117
  def format=(extension); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#69
  def formats; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#136
  def formats=(extensions); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#39
  def has_content_type?; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#144
  def negotiate_mime(order); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#156
  def should_apply_vary_header?; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#102
  def variant; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#92
  def variant=(variant); end

  private

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#180
  def format_from_path_extension; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#165
  def params_readable?; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#176
  def use_accept_header; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#171
  def valid_accept_header; end
end

# source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#163
ActionDispatch::Http::MimeNegotiation::BROWSER_LIKE_ACCEPTS = T.let(T.unsafe(nil), Regexp)

class ActionDispatch::Http::MimeNegotiation::InvalidType < ::Mime::Type::InvalidMimeType; end

# source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#12
ActionDispatch::Http::MimeNegotiation::RESCUABLE_MIME_FORMAT_ERRORS = T.let(T.unsafe(nil), Array)

module ActionDispatch::Http::Parameters
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionDispatch::Http::Parameters::ClassMethods

  # source://actionpack/6.1.7/lib/action_dispatch/http/parameters.rb#50
  def parameters; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/parameters.rb#50
  def params; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/parameters.rb#82
  def path_parameters; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/parameters.rb#65
  def path_parameters=(parameters); end

  private

  # source://actionpack/6.1.7/lib/action_dispatch/http/parameters.rb#100
  def log_parse_error_once; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/parameters.rb#112
  def params_parsers; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/parameters.rb#87
  def parse_formatted_parameters(parsers); end
end

module ActionDispatch::Http::Parameters::ClassMethods
  # source://actionpack/6.1.7/lib/action_dispatch/http/parameters.rb#44
  def parameter_parsers=(parsers); end
end

# source://actionpack/6.1.7/lib/action_dispatch/http/parameters.rb#10
ActionDispatch::Http::Parameters::DEFAULT_PARSERS = T.let(T.unsafe(nil), Hash)

# source://actionpack/6.1.7/lib/action_dispatch/http/parameters.rb#8
ActionDispatch::Http::Parameters::PARAMETERS_KEY = T.let(T.unsafe(nil), String)

class ActionDispatch::Http::Parameters::ParseError < ::StandardError
  # source://actionpack/6.1.7/lib/action_dispatch/http/parameters.rb#20
  def initialize; end
end

module ActionDispatch::Http::URL
  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#186
  def initialize; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#329
  def domain(tld_length = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#233
  def host; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#249
  def host_with_port; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#300
  def optional_port; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#260
  def port; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#312
  def port_string; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#207
  def protocol; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#221
  def raw_host_with_port; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#12
  def secure_protocol; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#12
  def secure_protocol=(val); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#323
  def server_port; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#274
  def standard_port; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#288
  def standard_port?; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#345
  def subdomain(tld_length = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#337
  def subdomains(tld_length = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#13
  def tld_length; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#13
  def tld_length=(val); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#196
  def url; end

  class << self
    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#22
    def extract_domain(host, tld_length); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#46
    def extract_subdomain(host, tld_length); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#32
    def extract_subdomains(host, tld_length); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#58
    def full_url_for(options); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#70
    def path_for(options); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#12
    def secure_protocol; end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#12
    def secure_protocol=(val); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#13
    def tld_length; end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#13
    def tld_length=(val); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#50
    def url_for(options); end

    private

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#89
    def add_anchor(path, anchor); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#82
    def add_params(path, params); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#104
    def add_trailing_slash(path); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#112
    def build_host_url(host, port, protocol, options, path); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#95
    def extract_domain_from(host, tld_length); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#99
    def extract_subdomains_from(host, tld_length); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#136
    def named_host?(host); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#153
    def normalize_host(_host, options); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#173
    def normalize_port(port, protocol); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#140
    def normalize_protocol(protocol); end
  end
end

# source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#9
ActionDispatch::Http::URL::HOST_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#8
ActionDispatch::Http::URL::IP_HOST_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://actionpack/6.1.7/lib/action_dispatch/http/url.rb#10
ActionDispatch::Http::URL::PROTOCOL_REGEXP = T.let(T.unsafe(nil), Regexp)

module ActionDispatch::PermissionsPolicy::Request
  # source://actionpack/6.1.7/lib/action_dispatch/http/permissions_policy.rb#57
  def permissions_policy; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/permissions_policy.rb#61
  def permissions_policy=(policy); end
end

# source://actionpack/6.1.7/lib/action_dispatch/http/permissions_policy.rb#55
ActionDispatch::PermissionsPolicy::Request::POLICY = T.let(T.unsafe(nil), String)

class ActionDispatch::RemoteIp::GetIp
  # source://actionpack/6.1.7/lib/action_dispatch/middleware/remote_ip.rb#88
  def initialize(req, check_ip, proxies); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/remote_ip.rb#112
  def calculate_ip; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/remote_ip.rb#155
  def to_s; end

  private

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/remote_ip.rb#174
  def filter_proxies(ips); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/remote_ip.rb#160
  def ips_from(header); end
end

class ActionDispatch::Request
  include ::ActionDispatch::Flash::RequestMethods
  include ::Rack::Request::Helpers
  include ::ActionDispatch::Http::Cache::Request
  include ::ActionDispatch::Http::MimeNegotiation
  include ::ActionDispatch::Http::Parameters
  include ::ActionDispatch::Http::FilterParameters
  include ::ActionDispatch::Http::URL
  include ::ActionDispatch::ContentSecurityPolicy::Request
  include ::ActionDispatch::PermissionsPolicy::Request
  include ::Rack::Request::Env
  extend ::ActionDispatch::Http::Parameters::ClassMethods

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#63
  def initialize(env); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#381
  def GET; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#397
  def POST; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def accept; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def accept_charset; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def accept_encoding; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def accept_language; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def auth_type; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#48
  def authenticated_encrypted_cookie_salt; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#413
  def authorization; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#337
  def body; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#358
  def body_stream; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def cache_control; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def client_ip; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#19
  def commit_cookie_jar!; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/flash.rb#61
  def commit_flash; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#273
  def content_length; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#82
  def controller_class; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#88
  def controller_class_for(name); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#174
  def controller_instance; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#178
  def controller_instance=(controller); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#11
  def cookie_jar; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#28
  def cookie_jar=(jar); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#76
  def cookies_digest; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#80
  def cookies_rotations; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#72
  def cookies_same_site_protection; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#68
  def cookies_serializer; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#56
  def encrypted_cookie_cipher; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#40
  def encrypted_cookie_salt; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#44
  def encrypted_signed_cookie_salt; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#160
  def engine_script_name(_routes); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#164
  def engine_script_name=(name); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#354
  def form_data?; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def from; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#252
  def fullpath; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def gateway_interface; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#24
  def have_cookie_jar?; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#213
  def headers; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#182
  def http_auth_salt; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#18
  def ignore_accept_header; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#18
  def ignore_accept_header=(val); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#441
  def inspect; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#286
  def ip; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#109
  def key?(key); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#32
  def key_generator; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#421
  def local?; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#430
  def logger; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#268
  def media_type; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#201
  def method; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#206
  def method_symbol; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def negotiate; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def origin; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#241
  def original_fullpath; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def original_script_name; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#260
  def original_url; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def path_translated; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def pragma; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#381
  def query_parameters; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#326
  def raw_post; end

  # source://rack/2.2.4/lib/rack/request.rb#157
  def raw_request_method; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def remote_addr; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def remote_host; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def remote_ident; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#292
  def remote_ip; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#296
  def remote_ip=(remote_ip); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def remote_user; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#309
  def request_id; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#313
  def request_id=(id); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#148
  def request_method; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#168
  def request_method=(request_method); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#194
  def request_method_symbol; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#397
  def request_parameters; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#425
  def request_parameters=(params); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/flash.rb#76
  def reset_session; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#152
  def routes; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#156
  def routes=(routes); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#64
  def secret_key_base; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#228
  def send_early_hints(links); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def server_addr; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def server_name; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def server_protocol; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#320
  def server_software; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#372
  def session=(session); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#376
  def session_options=(options); end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#186
  def show_exceptions?; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#60
  def signed_cookie_digest; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#36
  def signed_cookie_salt; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#437
  def ssl?; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#52
  def use_authenticated_cookie_encryption; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#84
  def use_cookies_with_metadata; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#309
  def uuid; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def version; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def x_csrf_token; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def x_forwarded_for; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def x_forwarded_host; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#53
  def x_request_id; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#280
  def xhr?; end

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#280
  def xml_http_request?; end

  private

  # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#446
  def check_method(name); end

  class << self
    # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#59
    def empty; end

    # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#18
    def ignore_accept_header; end

    # source://actionpack/6.1.7/lib/action_dispatch/http/mime_negotiation.rb#18
    def ignore_accept_header=(val); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/parameters.rb#28
    def parameter_parsers; end
  end
end

# source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#301
ActionDispatch::Request::ACTION_DISPATCH_REQUEST_ID = T.let(T.unsafe(nil), String)

# source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#34
ActionDispatch::Request::ENV_METHODS = T.let(T.unsafe(nil), Array)

# source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#131
ActionDispatch::Request::HTTP_METHODS = T.let(T.unsafe(nil), Array)

# source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#133
ActionDispatch::Request::HTTP_METHOD_LOOKUP = T.let(T.unsafe(nil), Hash)

# source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#32
ActionDispatch::Request::LOCALHOST = T.let(T.unsafe(nil), Regexp)

class ActionDispatch::Request::PASS_NOT_FOUND
  class << self
    # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#77
    def action(_); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#79
    def action_encoding_template(action); end

    # source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#78
    def call(_); end
  end
end

# source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#123
ActionDispatch::Request::RFC2518 = T.let(T.unsafe(nil), Array)

# source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#122
ActionDispatch::Request::RFC2616 = T.let(T.unsafe(nil), Array)

# source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#124
ActionDispatch::Request::RFC3253 = T.let(T.unsafe(nil), Array)

# source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#125
ActionDispatch::Request::RFC3648 = T.let(T.unsafe(nil), Array)

# source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#126
ActionDispatch::Request::RFC3744 = T.let(T.unsafe(nil), Array)

# source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#128
ActionDispatch::Request::RFC4791 = T.let(T.unsafe(nil), Array)

# source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#127
ActionDispatch::Request::RFC5323 = T.let(T.unsafe(nil), Array)

# source://actionpack/6.1.7/lib/action_dispatch/http/request.rb#129
ActionDispatch::Request::RFC5789 = T.let(T.unsafe(nil), Array)

class ActionDispatch::Request::Session
  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#63
  def initialize(by, req); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#91
  def [](key); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#131
  def []=(key, value); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#137
  def clear; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#165
  def delete(key); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#79
  def destroy; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#104
  def dig(*keys); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#220
  def each(&block); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#210
  def empty?; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#201
  def exists?; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#184
  def fetch(key, default = T.unsafe(nil), &block); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#111
  def has_key?(key); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#71
  def id; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#111
  def include?(key); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#193
  def inspect; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#111
  def key?(key); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#119
  def keys; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#206
  def loaded?; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#215
  def merge!(other); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#75
  def options; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#143
  def to_h; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#143
  def to_hash; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#159
  def update(hash); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#125
  def values; end

  private

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#233
  def load!; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#225
  def load_for_read!; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#229
  def load_for_write!; end

  class << self
    # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#16
    def create(store, req, default_options); end

    # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#26
    def find(req); end

    # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#30
    def set(req, session); end
  end
end

# source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#9
ActionDispatch::Request::Session::ENV_SESSION_KEY = T.let(T.unsafe(nil), String)

# source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#10
ActionDispatch::Request::Session::ENV_SESSION_OPTIONS_KEY = T.let(T.unsafe(nil), String)

class ActionDispatch::Request::Session::Options
  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#43
  def initialize(by, default_options); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#48
  def [](key); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#58
  def []=(k, v); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#52
  def id(req); end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#59
  def to_hash; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#60
  def values_at(*args); end

  class << self
    # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#39
    def find(req); end

    # source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#35
    def set(req, options); end
  end
end

# source://actionpack/6.1.7/lib/action_dispatch/request/session.rb#13
ActionDispatch::Request::Session::Unspecified = T.let(T.unsafe(nil), Object)

class ActionDispatch::Request::Utils
  # source://actionpack/6.1.7/lib/action_dispatch/request/utils.rb#8
  def perform_deep_munge; end

  # source://actionpack/6.1.7/lib/action_dispatch/request/utils.rb#8
  def perform_deep_munge=(val); end

  class << self
    # source://actionpack/6.1.7/lib/action_dispatch/request/utils.rb#29
    def check_param_encoding(params); end

    # source://actionpack/6.1.7/lib/action_dispatch/request/utils.rb#10
    def each_param_value(params, &block); end

    # source://actionpack/6.1.7/lib/action_dispatch/request/utils.rb#21
    def normalize_encode_params(params); end

    # source://actionpack/6.1.7/lib/action_dispatch/request/utils.rb#8
    def perform_deep_munge; end

    # source://actionpack/6.1.7/lib/action_dispatch/request/utils.rb#8
    def perform_deep_munge=(val); end

    # source://actionpack/6.1.7/lib/action_dispatch/request/utils.rb#44
    def set_binary_encoding(request, params, controller, action); end
  end
end

class ActionDispatch::Request::Utils::CustomParamEncoder
  class << self
    # source://actionpack/6.1.7/lib/action_dispatch/request/utils.rb#94
    def action_encoding_template(request, controller, action); end

    # source://actionpack/6.1.7/lib/action_dispatch/request/utils.rb#82
    def encode(request, params, controller, action); end
  end
end

class ActionDispatch::Request::Utils::NoNilParamEncoder < ::ActionDispatch::Request::Utils::ParamEncoder
  class << self
    # source://actionpack/6.1.7/lib/action_dispatch/request/utils.rb#74
    def handle_array(params); end
  end
end

class ActionDispatch::Request::Utils::ParamEncoder
  class << self
    # source://actionpack/6.1.7/lib/action_dispatch/request/utils.rb#67
    def handle_array(params); end

    # source://actionpack/6.1.7/lib/action_dispatch/request/utils.rb#50
    def normalize_encode_params(params); end
  end
end

class ActionView::Base
  include ::ActionView::Context
  include ::ERB::Util
  include ::ActiveSupport::Benchmarkable
  include ::ActionView::Helpers::ActiveModelHelper
  include ::ActionView::Helpers::AtomFeedHelper
  include ::ActionView::Helpers::CacheHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::ControllerHelper
  include ::ActionView::Helpers::CspHelper
  include ::ActionView::Helpers::CsrfHelper
  include ::ActionView::Helpers::DateHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  include ::ActionView::Helpers::FormHelper
  include ::ActionView::Helpers::TranslationHelper
  include ::ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::JavaScriptHelper
  include ::ActionView::Helpers::NumberHelper
  include ::ActionView::Helpers::RenderingHelper
  include ::ActionView::Helpers
  extend ::ActionView::Helpers::UrlHelper::ClassMethods
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/6.1.7/lib/action_view/base.rb#230
  def initialize(lookup_context, assigns, controller); end

  # source://actionview/6.1.7/lib/action_view/base.rb#168
  def _routes; end

  # source://actionview/6.1.7/lib/action_view/base.rb#168
  def _routes=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/base.rb#168
  def _routes?; end

  # source://actionview/6.1.7/lib/action_view/base.rb#243
  def _run(method, template, locals, buffer, add_to_stack: T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/base.rb#166
  def annotate_rendered_view_with_filenames; end

  # source://actionview/6.1.7/lib/action_view/base.rb#166
  def annotate_rendered_view_with_filenames=(val); end

  # source://actionview/6.1.7/lib/action_view/base.rb#210
  def assign(new_assigns); end

  # source://activesupport/6.1.7/lib/active_support/core_ext/module/attr_internal.rb#33
  def assigns; end

  # source://activesupport/6.1.7/lib/active_support/core_ext/module/attr_internal.rb#33
  def assigns=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/base.rb#163
  def automatically_disable_submit_tag; end

  # source://actionview/6.1.7/lib/action_view/base.rb#163
  def automatically_disable_submit_tag=(val); end

  # source://actionview/6.1.7/lib/action_view/base.rb#252
  def compiled_method_container; end

  # source://activesupport/6.1.7/lib/active_support/core_ext/module/attr_internal.rb#33
  def config; end

  # source://activesupport/6.1.7/lib/active_support/core_ext/module/attr_internal.rb#33
  def config=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/helpers/translation_helper.rb#15
  def debug_missing_translation; end

  # source://actionview/6.1.7/lib/action_view/helpers/translation_helper.rb#15
  def debug_missing_translation=(val); end

  # source://actionview/6.1.7/lib/action_view/base.rb#157
  def default_formats; end

  # source://actionview/6.1.7/lib/action_view/base.rb#157
  def default_formats=(val); end

  # source://actionview/6.1.7/lib/action_view/base.rb#145
  def field_error_proc; end

  # source://actionview/6.1.7/lib/action_view/base.rb#145
  def field_error_proc=(val); end

  # source://actionview/6.1.7/lib/action_view/base.rb#208
  def formats(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/base.rb#208
  def formats=(arg); end

  # source://actionview/6.1.7/lib/action_view/base.rb#260
  def in_rendering_context(options); end

  # source://actionview/6.1.7/lib/action_view/base.rb#208
  def locale(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/base.rb#208
  def locale=(arg); end

  # source://actionview/6.1.7/lib/action_view/base.rb#169
  def logger; end

  # source://actionview/6.1.7/lib/action_view/base.rb#169
  def logger=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/base.rb#169
  def logger?; end

  # source://actionview/6.1.7/lib/action_view/base.rb#205
  def lookup_context; end

  # source://actionview/6.1.7/lib/action_view/base.rb#154
  def prefix_partial_path_with_controller_namespace; end

  # source://actionview/6.1.7/lib/action_view/base.rb#154
  def prefix_partial_path_with_controller_namespace=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/base.rb#154
  def prefix_partial_path_with_controller_namespace?; end

  # source://actionview/6.1.7/lib/action_view/base.rb#160
  def raise_on_missing_translations; end

  # source://actionview/6.1.7/lib/action_view/base.rb#160
  def raise_on_missing_translations=(val); end

  # source://actionview/6.1.7/lib/action_view/base.rb#149
  def streaming_completion_on_exception; end

  # source://actionview/6.1.7/lib/action_view/base.rb#149
  def streaming_completion_on_exception=(val); end

  # source://actionview/6.1.7/lib/action_view/base.rb#208
  def view_paths(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/base.rb#208
  def view_paths=(arg); end

  # source://actionview/6.1.7/lib/action_view/base.rb#205
  def view_renderer; end

  class << self
    # source://actionview/6.1.7/lib/action_view/base.rb#168
    def _routes; end

    # source://actionview/6.1.7/lib/action_view/base.rb#168
    def _routes=(value); end

    # source://actionview/6.1.7/lib/action_view/base.rb#168
    def _routes?; end

    # source://actionview/6.1.7/lib/action_view/base.rb#166
    def annotate_rendered_view_with_filenames; end

    # source://actionview/6.1.7/lib/action_view/base.rb#166
    def annotate_rendered_view_with_filenames=(val); end

    # source://actionview/6.1.7/lib/action_view/base.rb#163
    def automatically_disable_submit_tag; end

    # source://actionview/6.1.7/lib/action_view/base.rb#163
    def automatically_disable_submit_tag=(val); end

    # source://actionview/6.1.7/lib/action_view/base.rb#174
    def cache_template_loading; end

    # source://actionview/6.1.7/lib/action_view/base.rb#178
    def cache_template_loading=(value); end

    # source://actionview/6.1.7/lib/action_view/base.rb#200
    def changed?(other); end

    # source://actionview/6.1.7/lib/action_view/helpers/translation_helper.rb#15
    def debug_missing_translation; end

    # source://actionview/6.1.7/lib/action_view/helpers/translation_helper.rb#15
    def debug_missing_translation=(val); end

    # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2603
    def default_form_builder; end

    # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2603
    def default_form_builder=(val); end

    # source://actionview/6.1.7/lib/action_view/base.rb#157
    def default_formats; end

    # source://actionview/6.1.7/lib/action_view/base.rb#157
    def default_formats=(val); end

    # source://actionview/6.1.7/lib/action_view/base.rb#216
    def empty; end

    # source://actionview/6.1.7/lib/action_view/base.rb#172
    def erb_trim_mode=(arg); end

    # source://actionview/6.1.7/lib/action_view/base.rb#145
    def field_error_proc; end

    # source://actionview/6.1.7/lib/action_view/base.rb#145
    def field_error_proc=(val); end

    # source://actionview/6.1.7/lib/action_view/base.rb#169
    def logger; end

    # source://actionview/6.1.7/lib/action_view/base.rb#169
    def logger=(value); end

    # source://actionview/6.1.7/lib/action_view/base.rb#169
    def logger?; end

    # source://actionview/6.1.7/lib/action_view/base.rb#154
    def prefix_partial_path_with_controller_namespace; end

    # source://actionview/6.1.7/lib/action_view/base.rb#154
    def prefix_partial_path_with_controller_namespace=(value); end

    # source://actionview/6.1.7/lib/action_view/base.rb#154
    def prefix_partial_path_with_controller_namespace?; end

    # source://actionview/6.1.7/lib/action_view/base.rb#160
    def raise_on_missing_translations; end

    # source://actionview/6.1.7/lib/action_view/base.rb#160
    def raise_on_missing_translations=(val); end

    # source://actionview/6.1.7/lib/action_view/base.rb#149
    def streaming_completion_on_exception; end

    # source://actionview/6.1.7/lib/action_view/base.rb#149
    def streaming_completion_on_exception=(val); end

    # source://actionview/6.1.7/lib/action_view/base.rb#224
    def with_context(context, assigns = T.unsafe(nil), controller = T.unsafe(nil)); end

    # source://actionview/6.1.7/lib/action_view/base.rb#186
    def with_empty_template_cache; end

    # source://actionview/6.1.7/lib/action_view/base.rb#220
    def with_view_paths(view_paths, assigns = T.unsafe(nil), controller = T.unsafe(nil)); end

    # source://actionview/6.1.7/lib/action_view/base.rb#182
    def xss_safe?; end
  end
end

module ActionView::Context
  # source://actionview/6.1.7/lib/action_view/context.rb#27
  def _layout_for(name = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/context.rb#18
  def _prepare_context; end

  # source://actionview/6.1.7/lib/action_view/context.rb#15
  def output_buffer; end

  # source://actionview/6.1.7/lib/action_view/context.rb#15
  def output_buffer=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/context.rb#15
  def view_flow; end

  # source://actionview/6.1.7/lib/action_view/context.rb#15
  def view_flow=(_arg0); end
end

module ActionView::Helpers
  include ::ActiveSupport::Benchmarkable
  include ::ActionView::Helpers::ActiveModelHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::AtomFeedHelper
  include ::ActionView::Helpers::CacheHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::ControllerHelper
  include ::ActionView::Helpers::CspHelper
  include ::ActionView::Helpers::CsrfHelper
  include ::ActionView::Helpers::DateHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::JavaScriptHelper
  include ::ActionView::Helpers::NumberHelper
  include ::ActionView::Helpers::RenderingHelper
  extend ::ActiveSupport::Autoload
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionView::Helpers::FormHelper
  include ::ActionView::Helpers::TranslationHelper

  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods
  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  class << self
    # source://actionview/6.1.7/lib/action_view/helpers.rb#34
    def eager_load!; end
  end
end

module ActionView::Helpers::ActiveModelHelper; end

module ActionView::Helpers::ActiveModelInstanceTag
  # source://actionview/6.1.7/lib/action_view/helpers/active_model_helper.rb#20
  def content_tag(type, options, *_arg2); end

  # source://actionview/6.1.7/lib/action_view/helpers/active_model_helper.rb#36
  def error_message; end

  # source://actionview/6.1.7/lib/action_view/helpers/active_model_helper.rb#28
  def error_wrapping(html_tag); end

  # source://actionview/6.1.7/lib/action_view/helpers/active_model_helper.rb#13
  def object; end

  # source://actionview/6.1.7/lib/action_view/helpers/active_model_helper.rb#24
  def tag(type, options, *_arg2); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/active_model_helper.rb#41
  def object_has_errors?; end

  # source://actionview/6.1.7/lib/action_view/helpers/active_model_helper.rb#45
  def select_markup_helper?(type); end

  # source://actionview/6.1.7/lib/action_view/helpers/active_model_helper.rb#49
  def tag_generate_errors?(options); end
end

module ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::AssetUrlHelper
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::TagHelper

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#458
  def audio_tag(*sources); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#212
  def auto_discovery_link_tag(type = T.unsafe(nil), url_options = T.unsafe(nil), tag_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#253
  def favicon_link_tag(source = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#370
  def image_tag(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#88
  def javascript_include_tag(*sources); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#296
  def preload_link_tag(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#26
  def preload_links_header; end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#26
  def preload_links_header=(val); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#151
  def stylesheet_link_tag(*sources); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#431
  def video_tag(*sources); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#499
  def check_for_image_tag_errors(options); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#490
  def extract_dimensions(size); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#463
  def multiple_sources_tag_builder(type, sources); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#480
  def resolve_image_source(source, skip_pipeline); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#505
  def resolve_link_as(extname, mime_type); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#517
  def send_preload_links_header(preload_links); end

  class << self
    # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#26
    def preload_links_header; end

    # source://actionview/6.1.7/lib/action_view/helpers/asset_tag_helper.rb#26
    def preload_links_header=(val); end
  end
end

module ActionView::Helpers::AssetUrlHelper
  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#186
  def asset_path(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#230
  def asset_url(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#429
  def audio_path(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#441
  def audio_url(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#242
  def compute_asset_extname(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#276
  def compute_asset_host(source = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#265
  def compute_asset_path(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#454
  def font_path(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#466
  def font_url(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#377
  def image_path(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#389
  def image_url(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#320
  def javascript_path(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#332
  def javascript_url(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#186
  def path_to_asset(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#429
  def path_to_audio(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#454
  def path_to_font(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#377
  def path_to_image(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#320
  def path_to_javascript(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#347
  def path_to_stylesheet(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#403
  def path_to_video(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#265
  def public_compute_asset_path(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#347
  def stylesheet_path(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#359
  def stylesheet_url(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#230
  def url_to_asset(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#441
  def url_to_audio(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#466
  def url_to_font(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#389
  def url_to_image(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#332
  def url_to_javascript(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#359
  def url_to_stylesheet(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#415
  def url_to_video(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#403
  def video_path(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#415
  def video_url(source, options = T.unsafe(nil)); end
end

# source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#235
ActionView::Helpers::AssetUrlHelper::ASSET_EXTENSIONS = T.let(T.unsafe(nil), Hash)

# source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#253
ActionView::Helpers::AssetUrlHelper::ASSET_PUBLIC_DIRECTORIES = T.let(T.unsafe(nil), Hash)

# source://actionview/6.1.7/lib/action_view/helpers/asset_url_helper.rb#121
ActionView::Helpers::AssetUrlHelper::URI_REGEXP = T.let(T.unsafe(nil), Regexp)

module ActionView::Helpers::AtomFeedHelper
  # source://actionview/6.1.7/lib/action_view/helpers/atom_feed_helper.rb#99
  def atom_feed(options = T.unsafe(nil), &block); end
end

class ActionView::Helpers::AtomFeedHelper::AtomBuilder
  # source://actionview/6.1.7/lib/action_view/helpers/atom_feed_helper.rb#133
  def initialize(xml); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/atom_feed_helper.rb#141
  def method_missing(method, *arguments, &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/atom_feed_helper.rb#156
  def xhtml_block?(method, arguments); end
end

# source://actionview/6.1.7/lib/action_view/helpers/atom_feed_helper.rb#131
ActionView::Helpers::AtomFeedHelper::AtomBuilder::XHTML_TAG_NAMES = T.let(T.unsafe(nil), Set)

class ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder < ::ActionView::Helpers::AtomFeedHelper::AtomBuilder
  # source://actionview/6.1.7/lib/action_view/helpers/atom_feed_helper.rb#165
  def initialize(xml, view, feed_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/atom_feed_helper.rb#183
  def entry(record, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/atom_feed_helper.rb#170
  def updated(date_or_time = T.unsafe(nil)); end
end

module ActionView::Helpers::CacheHelper
  # source://actionview/6.1.7/lib/action_view/helpers/cache_helper.rb#166
  def cache(name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/cache_helper.rb#208
  def cache_fragment_name(name = T.unsafe(nil), skip_digest: T.unsafe(nil), digest_path: T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/cache_helper.rb#183
  def cache_if(condition, name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/cache_helper.rb#199
  def cache_unless(condition, name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/cache_helper.rb#216
  def digest_path_from_template(template); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/cache_helper.rb#238
  def fragment_for(name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/cache_helper.rb#227
  def fragment_name_with_digest(name, digest_path); end

  # source://actionview/6.1.7/lib/action_view/helpers/cache_helper.rb#248
  def read_fragment_for(name, options); end

  # source://actionview/6.1.7/lib/action_view/helpers/cache_helper.rb#252
  def write_fragment_for(name, options); end
end

module ActionView::Helpers::CaptureHelper
  # source://actionview/6.1.7/lib/action_view/helpers/capture_helper.rb#43
  def capture(*args); end

  # source://actionview/6.1.7/lib/action_view/helpers/capture_helper.rb#155
  def content_for(name, content = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/capture_helper.rb#195
  def content_for?(name); end

  # source://actionview/6.1.7/lib/action_view/helpers/capture_helper.rb#175
  def provide(name, content = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/capture_helper.rb#201
  def with_output_buffer(buf = T.unsafe(nil)); end
end

module ActionView::Helpers::ControllerHelper
  # source://actionview/6.1.7/lib/action_view/helpers/controller_helper.rb#16
  def action_name(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/helpers/controller_helper.rb#18
  def assign_controller(controller); end

  def controller; end
  def controller=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/helpers/controller_helper.rb#16
  def controller_name(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/helpers/controller_helper.rb#16
  def controller_path(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/helpers/controller_helper.rb#16
  def cookies(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/helpers/controller_helper.rb#16
  def flash(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/helpers/controller_helper.rb#16
  def headers(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/helpers/controller_helper.rb#26
  def logger; end

  # source://actionview/6.1.7/lib/action_view/helpers/controller_helper.rb#16
  def params(*_arg0, &_arg1); end

  def request; end
  def request=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/helpers/controller_helper.rb#16
  def request_forgery_protection_token(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/helpers/controller_helper.rb#30
  def respond_to?(method_name, include_private = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/controller_helper.rb#16
  def response(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/helpers/controller_helper.rb#16
  def session(*_arg0, &_arg1); end
end

# source://actionview/6.1.7/lib/action_view/helpers/controller_helper.rb#12
ActionView::Helpers::ControllerHelper::CONTROLLER_DELEGATES = T.let(T.unsafe(nil), Array)

module ActionView::Helpers::CspHelper
  # source://actionview/6.1.7/lib/action_view/helpers/csp_helper.rb#17
  def csp_meta_tag(**options); end
end

module ActionView::Helpers::CsrfHelper
  # source://actionview/6.1.7/lib/action_view/helpers/csrf_helper.rb#22
  def csrf_meta_tag; end

  # source://actionview/6.1.7/lib/action_view/helpers/csrf_helper.rb#22
  def csrf_meta_tags; end
end

module ActionView::Helpers::DateHelper
  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#286
  def date_select(object_name, method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#358
  def datetime_select(object_name, method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#95
  def distance_of_time_in_words(from_time, to_time = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#176
  def distance_of_time_in_words_to_now(from_time, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#446
  def select_date(date = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#407
  def select_datetime(datetime = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#589
  def select_day(date, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#562
  def select_hour(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#533
  def select_minute(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#634
  def select_month(date, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#509
  def select_second(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#486
  def select_time(datetime = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#663
  def select_year(date, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#176
  def time_ago_in_words(from_time, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#323
  def time_select(object_name, method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#682
  def time_tag(date_or_time, *args, &block); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#691
  def normalize_distance_of_time_argument_to_time(value); end
end

# source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#26
ActionView::Helpers::DateHelper::MINUTES_IN_QUARTER_YEAR = T.let(T.unsafe(nil), Integer)

# source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#27
ActionView::Helpers::DateHelper::MINUTES_IN_THREE_QUARTERS_YEAR = T.let(T.unsafe(nil), Integer)

# source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#25
ActionView::Helpers::DateHelper::MINUTES_IN_YEAR = T.let(T.unsafe(nil), Integer)

class ActionView::Helpers::DateTimeSelector
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#719
  def initialize(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#748
  def select_date; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#727
  def select_datetime; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#810
  def select_day; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#798
  def select_hour; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#790
  def select_minute; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#818
  def select_month; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#782
  def select_second; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#766
  def select_time; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#832
  def select_year; end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#1099
  def build_hidden(type, value); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#991
  def build_options(selected, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#970
  def build_options_and_select(type, selected, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#1047
  def build_select(type, select_options_as_html); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#1137
  def build_selects_from_types(order); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#1026
  def build_year_options(selected, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#1066
  def css_class_attribute(type, html_options_class, options); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#952
  def date_order; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#860
  def day; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#860
  def hour; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#1128
  def input_id_from_type(type); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#1114
  def input_name_from_type(type); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#860
  def min; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#860
  def month; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#923
  def month_name(number); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#880
  def month_names; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#1081
  def prompt_option_tag(type, options); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#860
  def sec; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#1148
  def separator(type); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#872
  def set_day_if_discarded; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#956
  def translated_date_order; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#897
  def translated_month_names; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#860
  def year; end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#944
  def year_name(number); end
end

# source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#710
ActionView::Helpers::DateTimeSelector::AMPM_TRANSLATION = T.let(T.unsafe(nil), Hash)

# source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#705
ActionView::Helpers::DateTimeSelector::DEFAULT_PREFIX = T.let(T.unsafe(nil), String)

# source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#706
ActionView::Helpers::DateTimeSelector::POSITION = T.let(T.unsafe(nil), Hash)

module ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper

  # source://actionview/6.1.7/lib/action_view/helpers/debug_helper.rb#26
  def debug(object); end
end

class ActionView::Helpers::FormBuilder
  include ::ActionView::ModelNaming

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1668
  def initialize(object_name, object, template, options); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2500
  def button(value = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2335
  def check_box(method, options = T.unsafe(nil), checked_value = T.unsafe(nil), unchecked_value = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#870
  def collection_check_boxes(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#882
  def collection_radio_buttons(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#834
  def collection_select(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def color_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def date_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#1171
  def date_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def datetime_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def datetime_local_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#1195
  def datetime_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def email_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2511
  def emitted_hidden_id?; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1633
  def field_helpers; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1633
  def field_helpers=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1633
  def field_helpers?; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2199
  def fields(scope = T.unsafe(nil), model: T.unsafe(nil), **options, &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2162
  def fields_for(record_name, record_object = T.unsafe(nil), fields_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2417
  def file_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#846
  def grouped_collection_select(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2379
  def hidden_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1645
  def index; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2274
  def label(method, text = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def month_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1645
  def multipart; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1648
  def multipart=(multipart); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1645
  def multipart?; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def number_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1643
  def object; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1643
  def object=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1643
  def object_name; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1643
  def object_name=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1643
  def options; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1643
  def options=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def password_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def phone_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2357
  def radio_button(method, tag_value, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def range_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def search_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#822
  def select(method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2449
  def submit(value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def telephone_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def text_area(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def text_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def time_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/date_helper.rb#1183
  def time_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#858
  def time_zone_select(method, priority_zones = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1664
  def to_model; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1660
  def to_partial_path; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def url_field(method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1911
  def week_field(method, options = T.unsafe(nil)); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2594
  def convert_to_legacy_options(options); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2576
  def fields_for_nested_model(name, object, fields_options, block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2549
  def fields_for_with_nested_attributes(association_name, association, options, block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2545
  def nested_attributes_association?(association_name); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2589
  def nested_child_index(name); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2516
  def objectify_options(options); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#2522
  def submit_default_value; end

  class << self
    # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1656
    def _to_partial_path; end

    # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1633
    def field_helpers; end

    # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1633
    def field_helpers=(value); end

    # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1633
    def field_helpers?; end
  end
end

module ActionView::Helpers::FormHelper
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper

  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods
  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1305
  def check_box(object_name, method, options = T.unsafe(nil), checked_value = T.unsafe(nil), unchecked_value = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1335
  def color_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1399
  def date_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1457
  def datetime_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1457
  def datetime_local_field(object_name, method, options = T.unsafe(nil)); end

  def default_form_builder; end
  def default_form_builder=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1511
  def email_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1052
  def fields(scope = T.unsafe(nil), model: T.unsafe(nil), **options, &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1002
  def fields_for(record_name, record_object = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1217
  def file_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#428
  def form_for(record, options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#737
  def form_with(model: T.unsafe(nil), scope: T.unsafe(nil), url: T.unsafe(nil), format: T.unsafe(nil), **options, &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#479
  def form_with_generates_ids; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#479
  def form_with_generates_ids=(val); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#477
  def form_with_generates_remote_forms; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#477
  def form_with_generates_remote_forms=(val); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1185
  def hidden_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1122
  def label(object_name, method, content_or_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1476
  def month_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1519
  def number_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1167
  def password_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1367
  def phone_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1327
  def radio_button(object_name, method, tag_value, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1527
  def range_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1358
  def search_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1367
  def telephone_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1245
  def text_area(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1146
  def text_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1428
  def time_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1502
  def url_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1493
  def week_field(object_name, method, options = T.unsafe(nil)); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#457
  def apply_form_for_options!(record, object, options); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1575
  def default_form_builder_class; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1532
  def html_options_for_form_with(url_for_options = T.unsafe(nil), model = T.unsafe(nil), html: T.unsafe(nil), local: T.unsafe(nil), skip_enforcing_utf8: T.unsafe(nil), **options); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#1561
  def instantiate_builder(record_name, record_object, options); end

  class << self
    # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#479
    def form_with_generates_ids; end

    # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#479
    def form_with_generates_ids=(val); end

    # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#477
    def form_with_generates_remote_forms; end

    # source://actionview/6.1.7/lib/action_view/helpers/form_helper.rb#477
    def form_with_generates_remote_forms=(val); end
  end
end

module ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::TextHelper
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#756
  def collection_check_boxes(object, method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#672
  def collection_radio_buttons(object, method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#202
  def collection_select(object, method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#262
  def grouped_collection_select(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#530
  def grouped_options_for_select(grouped_options, selected_key = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#460
  def option_groups_from_collection_for_select(collection, group_method, group_label_method, option_key_method, option_value_method, selected_key = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#356
  def options_for_select(container, selected = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#399
  def options_from_collection_for_select(collection, value_method, text_method, selected = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#163
  def select(object, method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#575
  def time_zone_options_for_select(selected = T.unsafe(nil), priority_zones = T.unsafe(nil), model = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#296
  def time_zone_select(object, method, priority_zones = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#783
  def extract_selected_and_disabled(selected); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#794
  def extract_values_from_collection(collection, value_method, selected); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#761
  def option_html_attributes(element); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#769
  def option_text_and_value(option); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#779
  def option_value_selected?(value, selected); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#808
  def prompt_text(prompt); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_options_helper.rb#804
  def value_for_collection(item, value); end
end

module ActionView::Helpers::FormTagHelper
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper

  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods
  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#510
  def button_tag(content_or_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#382
  def check_box_tag(name, value = T.unsafe(nil), checked = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#606
  def color_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#670
  def date_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#692
  def datetime_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#692
  def datetime_local_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#26
  def default_enforce_utf8; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#26
  def default_enforce_utf8=(val); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#758
  def email_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#23
  def embed_authenticity_token_in_remote_forms; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#23
  def embed_authenticity_token_in_remote_forms=(val); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#582
  def field_set_tag(legend = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#282
  def file_field_tag(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#72
  def form_tag(url_for_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#243
  def hidden_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#556
  def image_submit_tag(source, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#216
  def label_tag(name = T.unsafe(nil), content_or_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#705
  def month_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#803
  def number_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#315
  def password_field_tag(name = T.unsafe(nil), value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#648
  def phone_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#407
  def radio_button_tag(name, value, checked = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#816
  def range_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#627
  def search_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#136
  def select_tag(name, option_tags = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#452
  def submit_tag(value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#648
  def telephone_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#348
  def text_area_tag(name, content = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#198
  def text_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#681
  def time_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#737
  def url_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#822
  def utf8_enforcer_tag; end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#716
  def week_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#914
  def convert_direct_upload_option_to_url(options); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#853
  def extra_tags_for_form(html_options); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#883
  def form_tag_html(html_options); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#888
  def form_tag_with_body(html_options, content); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#830
  def html_options_for_form(url_for_options, options); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#895
  def sanitize_to_id(name); end

  # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#899
  def set_default_disable_with(value, tag_options); end

  class << self
    # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#26
    def default_enforce_utf8; end

    # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#26
    def default_enforce_utf8=(val); end

    # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#23
    def embed_authenticity_token_in_remote_forms; end

    # source://actionview/6.1.7/lib/action_view/helpers/form_tag_helper.rb#23
    def embed_authenticity_token_in_remote_forms=(val); end
  end
end

module ActionView::Helpers::JavaScriptHelper
  # source://actionview/6.1.7/lib/action_view/helpers/javascript_helper.rb#29
  def escape_javascript(javascript); end

  # source://actionview/6.1.7/lib/action_view/helpers/javascript_helper.rb#29
  def j(javascript); end

  # source://actionview/6.1.7/lib/action_view/helpers/javascript_helper.rb#92
  def javascript_cdata_section(content); end

  # source://actionview/6.1.7/lib/action_view/helpers/javascript_helper.rb#76
  def javascript_tag(content_or_options_with_block = T.unsafe(nil), html_options = T.unsafe(nil), &block); end
end

# source://actionview/6.1.7/lib/action_view/helpers/javascript_helper.rb#8
ActionView::Helpers::JavaScriptHelper::JS_ESCAPE_MAP = T.let(T.unsafe(nil), Hash)

module ActionView::Helpers::NumberHelper
  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#127
  def number_to_currency(number, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#403
  def number_to_human(number, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#297
  def number_to_human_size(number, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#167
  def number_to_percentage(number, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#62
  def number_to_phone(number, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#206
  def number_with_delimiter(number, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#251
  def number_with_precision(number, options = T.unsafe(nil)); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#408
  def delegate_number_helper_method(method, number, options); end

  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#427
  def escape_units(units); end

  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#417
  def escape_unsafe_options(options); end

  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#450
  def parse_float(number, raise_error); end

  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#446
  def valid_float?(number); end

  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#433
  def wrap_with_output_safety_handling(number, raise_on_invalid, &block); end
end

class ActionView::Helpers::NumberHelper::InvalidNumberError < ::StandardError
  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#21
  def initialize(number); end

  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#20
  def number; end

  # source://actionview/6.1.7/lib/action_view/helpers/number_helper.rb#20
  def number=(_arg0); end
end

module ActionView::Helpers::OutputSafetyHelper
  # source://actionview/6.1.7/lib/action_view/helpers/output_safety_helper.rb#18
  def raw(stringish); end

  # source://actionview/6.1.7/lib/action_view/helpers/output_safety_helper.rb#33
  def safe_join(array, sep = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/output_safety_helper.rb#43
  def to_sentence(array, options = T.unsafe(nil)); end
end

module ActionView::Helpers::RenderingHelper
  # source://actionview/6.1.7/lib/action_view/helpers/rendering_helper.rb#98
  def _layout_for(*args, &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/rendering_helper.rb#31
  def render(options = T.unsafe(nil), locals = T.unsafe(nil), &block); end
end

module ActionView::Helpers::SanitizeHelper
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/6.1.7/lib/action_view/helpers/sanitize_helper.rb#81
  def sanitize(html, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/sanitize_helper.rb#86
  def sanitize_css(style); end

  # source://actionview/6.1.7/lib/action_view/helpers/sanitize_helper.rb#120
  def strip_links(html); end

  # source://actionview/6.1.7/lib/action_view/helpers/sanitize_helper.rb#103
  def strip_tags(html); end
end

module ActionView::Helpers::SanitizeHelper::ClassMethods
  # source://actionview/6.1.7/lib/action_view/helpers/sanitize_helper.rb#145
  def full_sanitizer; end

  # source://actionview/6.1.7/lib/action_view/helpers/sanitize_helper.rb#125
  def full_sanitizer=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/helpers/sanitize_helper.rb#155
  def link_sanitizer; end

  # source://actionview/6.1.7/lib/action_view/helpers/sanitize_helper.rb#125
  def link_sanitizer=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/helpers/sanitize_helper.rb#165
  def safe_list_sanitizer; end

  # source://actionview/6.1.7/lib/action_view/helpers/sanitize_helper.rb#125
  def safe_list_sanitizer=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/helpers/sanitize_helper.rb#135
  def sanitized_allowed_attributes; end

  # Replaces the allowed HTML attributes for the +sanitize+ helper.
  #
  #   class Application < Rails::Application
  #     config.action_view.sanitized_allowed_attributes = ['onclick', 'longdesc']
  #   end
  #
  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#50
  def sanitized_allowed_attributes=(attributes); end

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#63
  def sanitized_allowed_css_keywords; end

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#64
  def sanitized_allowed_css_keywords=(_); end

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#63
  def sanitized_allowed_css_properties; end

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#64
  def sanitized_allowed_css_properties=(_); end

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#63
  def sanitized_allowed_protocols; end

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#64
  def sanitized_allowed_protocols=(_); end

  # source://actionview/6.1.7/lib/action_view/helpers/sanitize_helper.rb#131
  def sanitized_allowed_tags; end

  # Replaces the allowed tags for the +sanitize+ helper.
  #
  #   class Application < Rails::Application
  #     config.action_view.sanitized_allowed_tags = 'table', 'tr', 'td'
  #   end
  #
  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#40
  def sanitized_allowed_tags=(tags); end

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#63
  def sanitized_bad_tags; end

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#64
  def sanitized_bad_tags=(_); end

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#63
  def sanitized_protocol_separator; end

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#64
  def sanitized_protocol_separator=(_); end

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#63
  def sanitized_shorthand_css_properties; end

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#64
  def sanitized_shorthand_css_properties=(_); end

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#63
  def sanitized_uri_attributes; end

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#64
  def sanitized_uri_attributes=(_); end

  # source://actionview/6.1.7/lib/action_view/helpers/sanitize_helper.rb#127
  def sanitizer_vendor; end

  private

  # source://rails-html-sanitizer/1.4.3/lib/rails-html-sanitizer.rb#68
  def deprecate_option(name); end
end

module ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  extend ::ActiveSupport::Concern

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#379
  def cdata_section(content); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#359
  def class_names(*args); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#339
  def content_tag(name, content_or_options_with_block = T.unsafe(nil), options = T.unsafe(nil), escape = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#391
  def escape_once(html); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#302
  def tag(name = T.unsafe(nil), options = T.unsafe(nil), open = T.unsafe(nil), escape = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#359
  def token_list(*args); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#396
  def build_tag_values(*args); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#416
  def tag_builder; end

  class << self
    # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#396
    def build_tag_values(*args); end
  end
end

# source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#29
ActionView::Helpers::TagHelper::ARIA_PREFIXES = T.let(T.unsafe(nil), Set)

# source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#16
ActionView::Helpers::TagHelper::BOOLEAN_ATTRIBUTES = T.let(T.unsafe(nil), Set)

# source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#30
ActionView::Helpers::TagHelper::DATA_PREFIXES = T.let(T.unsafe(nil), Set)

# source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#38
ActionView::Helpers::TagHelper::PRE_CONTENT_STRINGS = T.let(T.unsafe(nil), Hash)

# source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#32
ActionView::Helpers::TagHelper::TAG_TYPES = T.let(T.unsafe(nil), Hash)

class ActionView::Helpers::TagHelper::TagBuilder
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#48
  def initialize(view_context); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#120
  def boolean_tag_option(key); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#67
  def content_tag_string(name, content, options, escape = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#52
  def p(*arguments, **options, &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#124
  def tag_option(key, value, escape); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#78
  def tag_options(options, escape = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#56
  def tag_string(name, content = T.unsafe(nil), **options, &block); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#152
  def handle_deprecated_escape_options(options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#173
  def method_missing(called, *args, **options, &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#140
  def prefix_tag_option(prefix, key, value, escape); end

  # source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#148
  def respond_to_missing?(*args); end
end

# source://actionview/6.1.7/lib/action_view/helpers/tag_helper.rb#46
ActionView::Helpers::TagHelper::TagBuilder::VOID_ELEMENTS = T.let(T.unsafe(nil), Set)

module ActionView::Helpers::Tags
  extend ::ActiveSupport::Autoload
end

class ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionView::Helpers::ActiveModelInstanceTag
  include ::ActionView::Helpers::FormOptionsHelper
  extend ::ActionView::Helpers::UrlHelper::ClassMethods
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#12
  def initialize(object_name, method_name, template_object, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#10
  def object; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#32
  def render; end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#95
  def add_default_name_and_id(options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#82
  def add_default_name_and_id_for_value(tag_value, options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#167
  def add_options(option_tags, options, value = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#193
  def generate_ids?; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#185
  def name_and_id_index(options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#162
  def placeholder_required?(html_options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#73
  def retrieve_autoindex(pre_match); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#62
  def retrieve_object(object); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#135
  def sanitized_method_name; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#131
  def sanitized_object_name; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#139
  def sanitized_value(value); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#143
  def select_content_tag(option_tags, options, html_options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#119
  def tag_id(index = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#107
  def tag_name(multiple = T.unsafe(nil), index = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#37
  def value; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#45
  def value_before_type_cast; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/base.rb#57
  def value_came_from_user?; end
end

class ActionView::Helpers::Tags::CheckBox < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Checkable

  # source://actionview/6.1.7/lib/action_view/helpers/tags/check_box.rb#11
  def initialize(object_name, method_name, template_object, checked_value, unchecked_value, options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/check_box.rb#17
  def render; end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/check_box.rb#42
  def checked?(value); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/check_box.rb#59
  def hidden_field_for_checkbox(options); end
end

module ActionView::Helpers::Tags::Checkable
  # source://actionview/6.1.7/lib/action_view/helpers/tags/checkable.rb#7
  def input_checked?(options); end
end

class ActionView::Helpers::Tags::CollectionCheckBoxes < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::CollectionHelpers

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_check_boxes.rb#20
  def render(&block); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_check_boxes.rb#29
  def hidden_field_name; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_check_boxes.rb#25
  def render_component(builder); end
end

class ActionView::Helpers::Tags::CollectionCheckBoxes::CheckBoxBuilder < ::ActionView::Helpers::Tags::CollectionHelpers::Builder
  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_check_boxes.rb#12
  def check_box(extra_html_options = T.unsafe(nil)); end
end

module ActionView::Helpers::Tags::CollectionHelpers
  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_helpers.rb#30
  def initialize(object_name, method_name, template_object, collection, value_method, text_method, options, html_options); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_helpers.rb#47
  def default_html_options_for_collection(item, value); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_helpers.rb#107
  def hidden_field; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_helpers.rb#112
  def hidden_field_name; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_helpers.rb#40
  def instantiate_builder(builder_class, item, value, text, html_options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_helpers.rb#75
  def render_collection; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_helpers.rb#86
  def render_collection_for(builder_class, &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_helpers.rb#71
  def sanitize_attribute_name(value); end
end

class ActionView::Helpers::Tags::CollectionHelpers::Builder
  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_helpers.rb#10
  def initialize(template_object, object_name, method_name, object, sanitized_attribute_name, text, value, input_html_options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_helpers.rb#22
  def label(label_html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_helpers.rb#8
  def object; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_helpers.rb#8
  def text; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_helpers.rb#8
  def value; end
end

class ActionView::Helpers::Tags::CollectionRadioButtons < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::CollectionHelpers

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_radio_buttons.rb#19
  def render(&block); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_radio_buttons.rb#24
  def render_component(builder); end
end

class ActionView::Helpers::Tags::CollectionRadioButtons::RadioButtonBuilder < ::ActionView::Helpers::Tags::CollectionHelpers::Builder
  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_radio_buttons.rb#12
  def radio_button(extra_html_options = T.unsafe(nil)); end
end

class ActionView::Helpers::Tags::CollectionSelect < ::ActionView::Helpers::Tags::Base
  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_select.rb#7
  def initialize(object_name, method_name, template_object, collection, value_method, text_method, options, html_options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/collection_select.rb#16
  def render; end
end

class ActionView::Helpers::Tags::ColorField < ::ActionView::Helpers::Tags::TextField
  # source://actionview/6.1.7/lib/action_view/helpers/tags/color_field.rb#7
  def render; end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/color_field.rb#15
  def validate_color_string(string); end
end

class ActionView::Helpers::Tags::DateField < ::ActionView::Helpers::Tags::DatetimeField
  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/date_field.rb#8
  def format_date(value); end
end

class ActionView::Helpers::Tags::DateSelect < ::ActionView::Helpers::Tags::Base
  # source://actionview/6.1.7/lib/action_view/helpers/tags/date_select.rb#9
  def initialize(object_name, method_name, template_object, options, html_options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/date_select.rb#15
  def render; end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/date_select.rb#30
  def datetime_selector(options, html_options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/date_select.rb#43
  def default_datetime(options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/date_select.rb#26
  def select_type; end

  class << self
    # source://actionview/6.1.7/lib/action_view/helpers/tags/date_select.rb#20
    def select_type; end
  end
end

class ActionView::Helpers::Tags::DatetimeField < ::ActionView::Helpers::Tags::TextField
  # source://actionview/6.1.7/lib/action_view/helpers/tags/datetime_field.rb#7
  def render; end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/datetime_field.rb#21
  def datetime_value(value); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/datetime_field.rb#17
  def format_date(value); end
end

class ActionView::Helpers::Tags::DatetimeLocalField < ::ActionView::Helpers::Tags::DatetimeField
  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/datetime_local_field.rb#14
  def format_date(value); end

  class << self
    # source://actionview/6.1.7/lib/action_view/helpers/tags/datetime_local_field.rb#8
    def field_type; end
  end
end

class ActionView::Helpers::Tags::DatetimeSelect < ::ActionView::Helpers::Tags::DateSelect; end
class ActionView::Helpers::Tags::EmailField < ::ActionView::Helpers::Tags::TextField; end
class ActionView::Helpers::Tags::FileField < ::ActionView::Helpers::Tags::TextField; end

class ActionView::Helpers::Tags::GroupedCollectionSelect < ::ActionView::Helpers::Tags::Base
  # source://actionview/6.1.7/lib/action_view/helpers/tags/grouped_collection_select.rb#7
  def initialize(object_name, method_name, template_object, collection, group_method, group_label_method, option_key_method, option_value_method, options, html_options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/grouped_collection_select.rb#18
  def render; end
end

class ActionView::Helpers::Tags::HiddenField < ::ActionView::Helpers::Tags::TextField
  # source://actionview/6.1.7/lib/action_view/helpers/tags/hidden_field.rb#7
  def render; end
end

class ActionView::Helpers::Tags::Label < ::ActionView::Helpers::Tags::Base
  # source://actionview/6.1.7/lib/action_view/helpers/tags/label.rb#34
  def initialize(object_name, method_name, template_object, content_or_options = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/label.rb#48
  def render(&block); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/label.rb#78
  def render_component(builder); end
end

class ActionView::Helpers::Tags::Label::LabelBuilder
  # source://actionview/6.1.7/lib/action_view/helpers/tags/label.rb#10
  def initialize(template_object, object_name, method_name, object, tag_value); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/label.rb#8
  def object; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/label.rb#29
  def to_s; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/label.rb#18
  def translation; end
end

class ActionView::Helpers::Tags::MonthField < ::ActionView::Helpers::Tags::DatetimeField
  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/month_field.rb#8
  def format_date(value); end
end

class ActionView::Helpers::Tags::NumberField < ::ActionView::Helpers::Tags::TextField
  # source://actionview/6.1.7/lib/action_view/helpers/tags/number_field.rb#7
  def render; end
end

class ActionView::Helpers::Tags::PasswordField < ::ActionView::Helpers::Tags::TextField
  # source://actionview/6.1.7/lib/action_view/helpers/tags/password_field.rb#7
  def render; end
end

module ActionView::Helpers::Tags::Placeholderable
  # source://actionview/6.1.7/lib/action_view/helpers/tags/placeholderable.rb#7
  def initialize(*_arg0); end
end

class ActionView::Helpers::Tags::RadioButton < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Checkable

  # source://actionview/6.1.7/lib/action_view/helpers/tags/radio_button.rb#11
  def initialize(object_name, method_name, template_object, tag_value, options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/radio_button.rb#16
  def render; end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/radio_button.rb#26
  def checked?(value); end
end

class ActionView::Helpers::Tags::RangeField < ::ActionView::Helpers::Tags::NumberField; end

class ActionView::Helpers::Tags::SearchField < ::ActionView::Helpers::Tags::TextField
  # source://actionview/6.1.7/lib/action_view/helpers/tags/search_field.rb#7
  def render; end
end

class ActionView::Helpers::Tags::Select < ::ActionView::Helpers::Tags::Base
  # source://actionview/6.1.7/lib/action_view/helpers/tags/select.rb#7
  def initialize(object_name, method_name, template_object, choices, options, html_options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/select.rb#16
  def render; end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/select.rb#36
  def grouped_choices?; end
end

class ActionView::Helpers::Tags::TelField < ::ActionView::Helpers::Tags::TextField; end

class ActionView::Helpers::Tags::TextArea < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Placeholderable

  # source://actionview/6.1.7/lib/action_view/helpers/tags/text_area.rb#11
  def render; end
end

class ActionView::Helpers::Tags::TextField < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Placeholderable

  # source://actionview/6.1.7/lib/action_view/helpers/tags/text_field.rb#11
  def render; end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/text_field.rb#27
  def field_type; end

  class << self
    # source://actionview/6.1.7/lib/action_view/helpers/tags/text_field.rb#21
    def field_type; end
  end
end

class ActionView::Helpers::Tags::TimeField < ::ActionView::Helpers::Tags::DatetimeField
  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/time_field.rb#8
  def format_date(value); end
end

class ActionView::Helpers::Tags::TimeSelect < ::ActionView::Helpers::Tags::DateSelect; end

class ActionView::Helpers::Tags::TimeZoneSelect < ::ActionView::Helpers::Tags::Base
  # source://actionview/6.1.7/lib/action_view/helpers/tags/time_zone_select.rb#7
  def initialize(object_name, method_name, template_object, priority_zones, options, html_options); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/time_zone_select.rb#14
  def render; end
end

class ActionView::Helpers::Tags::Translator
  # source://actionview/6.1.7/lib/action_view/helpers/tags/translator.rb#7
  def initialize(object, object_name, method_and_value, scope:); end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/translator.rb#14
  def translate; end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/translator.rb#31
  def human_attribute_name; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/translator.rb#22
  def i18n_default; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/translator.rb#20
  def method_and_value; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/translator.rb#20
  def model; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/translator.rb#20
  def object_name; end

  # source://actionview/6.1.7/lib/action_view/helpers/tags/translator.rb#20
  def scope; end
end

class ActionView::Helpers::Tags::UrlField < ::ActionView::Helpers::Tags::TextField; end

class ActionView::Helpers::Tags::WeekField < ::ActionView::Helpers::Tags::DatetimeField
  private

  # source://actionview/6.1.7/lib/action_view/helpers/tags/week_field.rb#8
  def format_date(value); end
end

module ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TagHelper

  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#54
  def concat(string); end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#378
  def current_cycle(name = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#354
  def cycle(first_value, *values); end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#175
  def excerpt(text, phrase, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#132
  def highlight(text, phrases, options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#230
  def pluralize(count, singular, plural_arg = T.unsafe(nil), plural: T.unsafe(nil), locale: T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#401
  def reset_cycle(name = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#58
  def safe_concat(string); end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#302
  def simple_format(text, html_options = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#94
  def truncate(text, options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#260
  def word_wrap(text, line_width: T.unsafe(nil), break_sequence: T.unsafe(nil)); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#464
  def cut_excerpt_part(part_position, part, separator, options); end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#446
  def get_cycle(name); end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#451
  def set_cycle(name, cycle_object); end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#456
  def split_paragraphs(text); end
end

class ActionView::Helpers::TextHelper::Cycle
  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#409
  def initialize(first_value, *values); end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#418
  def current_value; end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#414
  def reset; end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#422
  def to_s; end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#407
  def values; end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#429
  def next_index; end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#433
  def previous_index; end

  # source://actionview/6.1.7/lib/action_view/helpers/text_helper.rb#437
  def step_index(n); end
end

module ActionView::Helpers::TranslationHelper
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::TagHelper

  # source://actionview/6.1.7/lib/action_view/helpers/translation_helper.rb#118
  def l(object, **options); end

  # source://actionview/6.1.7/lib/action_view/helpers/translation_helper.rb#118
  def localize(object, **options); end

  # source://actionview/6.1.7/lib/action_view/helpers/translation_helper.rb#70
  def t(key, **options); end

  # source://actionview/6.1.7/lib/action_view/helpers/translation_helper.rb#70
  def translate(key, **options); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/translation_helper.rb#148
  def html_escape_translation_options(options); end

  # source://actionview/6.1.7/lib/action_view/helpers/translation_helper.rb#165
  def html_safe_translation(translation); end

  # source://actionview/6.1.7/lib/action_view/helpers/translation_helper.rb#161
  def html_safe_translation_key?(key); end

  # source://actionview/6.1.7/lib/action_view/helpers/translation_helper.rb#173
  def missing_translation(key, options); end

  # source://actionview/6.1.7/lib/action_view/helpers/translation_helper.rb#134
  def scope_key_by_partial(key); end

  class << self
    # source://actionview/6.1.7/lib/action_view/helpers/translation_helper.rb#130
    def i18n_option?(name); end
  end
end

module ActionView::Helpers::UrlHelper
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::TagHelper

  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#300
  def button_to(name = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#580
  def current_page?(*args); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#196
  def link_to(name = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#432
  def link_to_if(condition, name, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#409
  def link_to_unless(condition, name, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#385
  def link_to_unless_current(name, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#482
  def mail_to(email_address, name = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#668
  def phone_to(phone_number, name = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#618
  def sms_to(phone_number, name = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#33
  def url_for(options = T.unsafe(nil)); end

  private

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#45
  def _back_url; end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#50
  def _filtered_referrer; end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#703
  def add_method_to_attributes!(html_options, method); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#682
  def convert_options_to_data_attributes(options, html_options); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#697
  def link_to_remote_options?(options); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#722
  def method_not_get_method?(method); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#736
  def method_tag(method); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#782
  def remove_trailing_slash!(url_string); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#756
  def to_form_params(attribute, namespace = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#727
  def token_tag(token = T.unsafe(nil), form_options: T.unsafe(nil)); end
end

# source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#21
ActionView::Helpers::UrlHelper::BUTTON_TAG_METHOD_VERBS = T.let(T.unsafe(nil), Array)

module ActionView::Helpers::UrlHelper::ClassMethods
  # source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#27
  def _url_for_modules; end
end

# source://actionview/6.1.7/lib/action_view/helpers/url_helper.rb#714
ActionView::Helpers::UrlHelper::STRINGIFIED_COMMON_METHODS = T.let(T.unsafe(nil), Hash)

module ActionView::ModelNaming
  # source://actionview/6.1.7/lib/action_view/model_naming.rb#6
  def convert_to_model(object); end

  # source://actionview/6.1.7/lib/action_view/model_naming.rb#10
  def model_name_from_record_or_class(record_or_class); end
end

module ActionView::RecordIdentifier
  include ::ActionView::ModelNaming
  extend ::ActionView::RecordIdentifier
  extend ::ActionView::ModelNaming

  # source://actionview/6.1.7/lib/action_view/record_identifier.rb#74
  def dom_class(record_or_class, prefix = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/record_identifier.rb#89
  def dom_id(record, prefix = T.unsafe(nil)); end

  private

  # source://actionview/6.1.7/lib/action_view/record_identifier.rb#106
  def record_key_for_dom_id(record); end
end

# source://actionview/6.1.7/lib/action_view/record_identifier.rb#62
ActionView::RecordIdentifier::JOIN = T.let(T.unsafe(nil), String)

# source://actionview/6.1.7/lib/action_view/record_identifier.rb#63
ActionView::RecordIdentifier::NEW = T.let(T.unsafe(nil), String)

module ActiveSupport::Autoload
  # source://activesupport/6.1.7/lib/active_support/dependencies/autoload.rb#37
  def autoload(const_name, path = T.unsafe(nil)); end

  # source://activesupport/6.1.7/lib/active_support/dependencies/autoload.rb#57
  def autoload_at(path); end

  # source://activesupport/6.1.7/lib/active_support/dependencies/autoload.rb#50
  def autoload_under(path); end

  # source://activesupport/6.1.7/lib/active_support/dependencies/autoload.rb#75
  def autoloads; end

  # source://activesupport/6.1.7/lib/active_support/dependencies/autoload.rb#64
  def eager_autoload; end

  # source://activesupport/6.1.7/lib/active_support/dependencies/autoload.rb#71
  def eager_load!; end

  class << self
    # source://activesupport/6.1.7/lib/active_support/dependencies/autoload.rb#28
    def extended(base); end
  end
end

module ActiveSupport::Benchmarkable
  # source://activesupport/6.1.7/lib/active_support/benchmarkable.rb#37
  def benchmark(message = T.unsafe(nil), options = T.unsafe(nil)); end
end

module ActiveSupport::Concern
  # source://activesupport/6.1.7/lib/active_support/concern.rb#127
  def append_features(base); end

  # source://activesupport/6.1.7/lib/active_support/concern.rb#207
  def class_methods(&class_methods_module_definition); end

  # source://activesupport/6.1.7/lib/active_support/concern.rb#156
  def included(base = T.unsafe(nil), &block); end

  # source://activesupport/6.1.7/lib/active_support/concern.rb#140
  def prepend_features(base); end

  # source://activesupport/6.1.7/lib/active_support/concern.rb#173
  def prepended(base = T.unsafe(nil), &block); end

  class << self
    # source://activesupport/6.1.7/lib/active_support/concern.rb#123
    def extended(base); end
  end
end

class ActiveSupport::Concern::MultipleIncludedBlocks < ::StandardError
  # source://activesupport/6.1.7/lib/active_support/concern.rb#112
  def initialize; end
end

class ActiveSupport::Concern::MultiplePrependBlocks < ::StandardError
  # source://activesupport/6.1.7/lib/active_support/concern.rb#118
  def initialize; end
end

module ActiveSupport::DescendantsTracker
  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#65
  def descendants; end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#60
  def direct_descendants; end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#55
  def inherited(base); end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#60
  def subclasses; end

  class << self
    # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#24
    def clear; end

    # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#18
    def descendants(klass); end

    # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#12
    def direct_descendants(klass); end

    # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#40
    def store_inherited(klass, descendant); end

    # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#12
    def subclasses(klass); end

    private

    # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#45
    def accumulate_descendants(klass, acc); end
  end
end

class ActiveSupport::DescendantsTracker::DescendantsArray
  include ::Enumerable

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#73
  def initialize; end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#81
  def <<(klass); end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#99
  def cleanup!; end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#85
  def each; end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#95
  def refs_size; end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#103
  def reject!; end

  private

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#77
  def initialize_copy(orig); end
end

class Mime::Type::InvalidMimeType < ::StandardError; end

module Rack::Request::Env
  # source://rack/2.2.4/lib/rack/request.rb#50
  def initialize(env); end

  # source://rack/2.2.4/lib/rack/request.rb#91
  def add_header(key, v); end

  # source://rack/2.2.4/lib/rack/request.rb#102
  def delete_header(name); end

  # source://rack/2.2.4/lib/rack/request.rb#73
  def each_header(&block); end

  # source://rack/2.2.4/lib/rack/request.rb#48
  def env; end

  # source://rack/2.2.4/lib/rack/request.rb#68
  def fetch_header(name, &block); end

  # source://rack/2.2.4/lib/rack/request.rb#62
  def get_header(name); end

  # source://rack/2.2.4/lib/rack/request.rb#57
  def has_header?(name); end

  # source://rack/2.2.4/lib/rack/request.rb#78
  def set_header(name, v); end

  private

  # source://rack/2.2.4/lib/rack/request.rb#106
  def initialize_copy(other); end
end

module Rack::Request::Helpers
  # source://rack/2.2.4/lib/rack/request.rb#426
  def GET; end

  # source://rack/2.2.4/lib/rack/request.rb#440
  def POST; end

  # source://rack/2.2.4/lib/rack/request.rb#532
  def [](key); end

  # source://rack/2.2.4/lib/rack/request.rb#543
  def []=(key, value); end

  # source://rack/2.2.4/lib/rack/request.rb#519
  def accept_encoding; end

  # source://rack/2.2.4/lib/rack/request.rb#523
  def accept_language; end

  # source://rack/2.2.4/lib/rack/request.rb#227
  def authority; end

  # source://rack/2.2.4/lib/rack/request.rb#502
  def base_url; end

  # source://rack/2.2.4/lib/rack/request.rb#150
  def body; end

  # source://rack/2.2.4/lib/rack/request.rb#400
  def content_charset; end

  # source://rack/2.2.4/lib/rack/request.rb#159
  def content_length; end

  # source://rack/2.2.4/lib/rack/request.rb#271
  def content_type; end

  # source://rack/2.2.4/lib/rack/request.rb#256
  def cookies; end

  # source://rack/2.2.4/lib/rack/request.rb#181
  def delete?; end

  # source://rack/2.2.4/lib/rack/request.rb#497
  def delete_param(k); end

  # source://rack/2.2.4/lib/rack/request.rb#412
  def form_data?; end

  # source://rack/2.2.4/lib/rack/request.rb#344
  def forwarded_authority; end

  # source://rack/2.2.4/lib/rack/request.rb#330
  def forwarded_for; end

  # source://rack/2.2.4/lib/rack/request.rb#338
  def forwarded_port; end

  # source://rack/2.2.4/lib/rack/request.rb#515
  def fullpath; end

  # source://rack/2.2.4/lib/rack/request.rb#184
  def get?; end

  # source://rack/2.2.4/lib/rack/request.rb#187
  def head?; end

  # source://rack/2.2.4/lib/rack/request.rb#296
  def host; end

  # source://rack/2.2.4/lib/rack/request.rb#281
  def host_authority; end

  # source://rack/2.2.4/lib/rack/request.rb#285
  def host_with_port(authority = T.unsafe(nil)); end

  # source://rack/2.2.4/lib/rack/request.rb#304
  def hostname; end

  # source://rack/2.2.4/lib/rack/request.rb#354
  def ip; end

  # source://rack/2.2.4/lib/rack/request.rb#193
  def link?; end

  # source://rack/2.2.4/lib/rack/request.rb#160
  def logger; end

  # source://rack/2.2.4/lib/rack/request.rb#383
  def media_type; end

  # source://rack/2.2.4/lib/rack/request.rb#392
  def media_type_params; end

  # source://rack/2.2.4/lib/rack/request.rb#162
  def multithread?; end

  # source://rack/2.2.4/lib/rack/request.rb#190
  def options?; end

  # source://rack/2.2.4/lib/rack/request.rb#468
  def params; end

  # source://rack/2.2.4/lib/rack/request.rb#421
  def parseable_data?; end

  # source://rack/2.2.4/lib/rack/request.rb#196
  def patch?; end

  # source://rack/2.2.4/lib/rack/request.rb#511
  def path; end

  # source://rack/2.2.4/lib/rack/request.rb#154
  def path_info; end

  # source://rack/2.2.4/lib/rack/request.rb#155
  def path_info=(s); end

  # source://rack/2.2.4/lib/rack/request.rb#308
  def port; end

  # source://rack/2.2.4/lib/rack/request.rb#199
  def post?; end

  # source://rack/2.2.4/lib/rack/request.rb#202
  def put?; end

  # source://rack/2.2.4/lib/rack/request.rb#158
  def query_string; end

  # source://rack/2.2.4/lib/rack/request.rb#165
  def referer; end

  # source://rack/2.2.4/lib/rack/request.rb#165
  def referrer; end

  # source://rack/2.2.4/lib/rack/request.rb#157
  def request_method; end

  # source://rack/2.2.4/lib/rack/request.rb#210
  def scheme; end

  # source://rack/2.2.4/lib/rack/request.rb#151
  def script_name; end

  # source://rack/2.2.4/lib/rack/request.rb#152
  def script_name=(s); end

  # source://rack/2.2.4/lib/rack/request.rb#233
  def server_authority; end

  # source://rack/2.2.4/lib/rack/request.rb#246
  def server_name; end

  # source://rack/2.2.4/lib/rack/request.rb#250
  def server_port; end

  # source://rack/2.2.4/lib/rack/request.rb#168
  def session; end

  # source://rack/2.2.4/lib/rack/request.rb#174
  def session_options; end

  # source://rack/2.2.4/lib/rack/request.rb#350
  def ssl?; end

  # source://rack/2.2.4/lib/rack/request.rb#205
  def trace?; end

  # source://rack/2.2.4/lib/rack/request.rb#527
  def trusted_proxy?(ip); end

  # source://rack/2.2.4/lib/rack/request.rb#208
  def unlink?; end

  # source://rack/2.2.4/lib/rack/request.rb#477
  def update_param(k, v); end

  # source://rack/2.2.4/lib/rack/request.rb#507
  def url; end

  # source://rack/2.2.4/lib/rack/request.rb#161
  def user_agent; end

  # source://rack/2.2.4/lib/rack/request.rb#552
  def values_at(*keys); end

  # source://rack/2.2.4/lib/rack/request.rb#276
  def xhr?; end

  private

  # source://rack/2.2.4/lib/rack/request.rb#641
  def allowed_scheme(header); end

  # source://rack/2.2.4/lib/rack/request.rb#558
  def default_session; end

  # source://rack/2.2.4/lib/rack/request.rb#645
  def extract_proto_header(header); end

  # source://rack/2.2.4/lib/rack/request.rb#636
  def forwarded_scheme; end

  # source://rack/2.2.4/lib/rack/request.rb#574
  def parse_http_accept_header(header); end

  # source://rack/2.2.4/lib/rack/request.rb#593
  def parse_multipart; end

  # source://rack/2.2.4/lib/rack/request.rb#589
  def parse_query(qs, d = T.unsafe(nil)); end

  # source://rack/2.2.4/lib/rack/request.rb#585
  def query_parser; end

  # source://rack/2.2.4/lib/rack/request.rb#632
  def reject_trusted_ip_addresses(ip_addresses); end

  # source://rack/2.2.4/lib/rack/request.rb#619
  def split_authority(authority); end

  # source://rack/2.2.4/lib/rack/request.rb#597
  def split_header(value); end

  # source://rack/2.2.4/lib/rack/request.rb#561
  def wrap_ipv6(host); end
end

# source://rack/2.2.4/lib/rack/request.rb#130
Rack::Request::Helpers::DEFAULT_PORTS = T.let(T.unsafe(nil), Hash)

# source://rack/2.2.4/lib/rack/request.rb#115
Rack::Request::Helpers::FORM_DATA_MEDIA_TYPES = T.let(T.unsafe(nil), Array)

# source://rack/2.2.4/lib/rack/request.rb#133
Rack::Request::Helpers::HTTP_X_FORWARDED_FOR = T.let(T.unsafe(nil), String)

# source://rack/2.2.4/lib/rack/request.rb#136
Rack::Request::Helpers::HTTP_X_FORWARDED_HOST = T.let(T.unsafe(nil), String)

# source://rack/2.2.4/lib/rack/request.rb#145
Rack::Request::Helpers::HTTP_X_FORWARDED_PORT = T.let(T.unsafe(nil), String)

# source://rack/2.2.4/lib/rack/request.rb#142
Rack::Request::Helpers::HTTP_X_FORWARDED_PROTO = T.let(T.unsafe(nil), String)

# source://rack/2.2.4/lib/rack/request.rb#139
Rack::Request::Helpers::HTTP_X_FORWARDED_SCHEME = T.let(T.unsafe(nil), String)

# source://rack/2.2.4/lib/rack/request.rb#148
Rack::Request::Helpers::HTTP_X_FORWARDED_SSL = T.let(T.unsafe(nil), String)

# source://rack/2.2.4/lib/rack/request.rb#123
Rack::Request::Helpers::PARSEABLE_DATA_MEDIA_TYPES = T.let(T.unsafe(nil), Array)

module Rails::Initializable
  mixes_in_class_methods ::Rails::Initializable::ClassMethods

  # source://railties/6.1.7/lib/rails/initializable.rb#66
  def initializers; end

  # source://railties/6.1.7/lib/rails/initializable.rb#58
  def run_initializers(group = T.unsafe(nil), *args); end

  class << self
    # source://railties/6.1.7/lib/rails/initializable.rb#7
    def included(base); end
  end
end

module Rails::Initializable::ClassMethods
  # source://railties/6.1.7/lib/rails/initializable.rb#88
  def initializer(name, opts = T.unsafe(nil), &blk); end

  # source://railties/6.1.7/lib/rails/initializable.rb#71
  def initializers; end

  # source://railties/6.1.7/lib/rails/initializable.rb#75
  def initializers_chain; end

  # source://railties/6.1.7/lib/rails/initializable.rb#84
  def initializers_for(binding); end
end

class Rails::Initializable::Collection < ::Array
  include ::TSort

  # source://railties/6.1.7/lib/rails/initializable.rb#53
  def +(other); end

  # source://railties/6.1.7/lib/rails/initializable.rb#49
  def tsort_each_child(initializer, &block); end

  def tsort_each_node; end
end

class Rails::Initializable::Initializer
  # source://railties/6.1.7/lib/rails/initializable.rb#14
  def initialize(name, context, options, &block); end

  # source://railties/6.1.7/lib/rails/initializable.rb#23
  def after; end

  # source://railties/6.1.7/lib/rails/initializable.rb#19
  def before; end

  # source://railties/6.1.7/lib/rails/initializable.rb#27
  def belongs_to?(group); end

  # source://railties/6.1.7/lib/rails/initializable.rb#35
  def bind(context); end

  # source://railties/6.1.7/lib/rails/initializable.rb#12
  def block; end

  # source://railties/6.1.7/lib/rails/initializable.rb#40
  def context_class; end

  # source://railties/6.1.7/lib/rails/initializable.rb#12
  def name; end

  # source://railties/6.1.7/lib/rails/initializable.rb#31
  def run(*args); end
end

class Rails::Railtie
  include ::Rails::Initializable
  extend ::ActiveSupport::DescendantsTracker
  extend ::Rails::Initializable::ClassMethods

  # source://railties/6.1.7/lib/rails/railtie.rb#227
  def initialize; end

  # source://railties/6.1.7/lib/rails/railtie.rb#240
  def config; end

  # source://railties/6.1.7/lib/rails/railtie.rb#233
  def configure(&block); end

  # source://railties/6.1.7/lib/rails/railtie.rb#225
  def railtie_name(*_arg0, &_arg1); end

  # source://railties/6.1.7/lib/rails/railtie.rb#244
  def railtie_namespace; end

  protected

  # source://railties/6.1.7/lib/rails/railtie.rb#249
  def run_console_blocks(app); end

  # source://railties/6.1.7/lib/rails/railtie.rb#253
  def run_generators_blocks(app); end

  # source://railties/6.1.7/lib/rails/railtie.rb#257
  def run_runner_blocks(app); end

  # source://railties/6.1.7/lib/rails/railtie.rb#266
  def run_server_blocks(app); end

  # source://railties/6.1.7/lib/rails/railtie.rb#261
  def run_tasks_blocks(app); end

  private

  # source://railties/6.1.7/lib/rails/railtie.rb#272
  def each_registered_block(type, &block); end

  class << self
    # source://railties/6.1.7/lib/rails/railtie.rb#172
    def abstract_railtie?; end

    # source://railties/6.1.7/lib/rails/railtie.rb#146
    def config(*_arg0, &_arg1); end

    # source://railties/6.1.7/lib/rails/railtie.rb#190
    def configure(&block); end

    # source://railties/6.1.7/lib/rails/railtie.rb#156
    def console(&blk); end

    # source://railties/6.1.7/lib/rails/railtie.rb#164
    def generators(&blk); end

    # source://railties/6.1.7/lib/rails/railtie.rb#183
    def instance; end

    # source://railties/6.1.7/lib/rails/railtie.rb#176
    def railtie_name(name = T.unsafe(nil)); end

    # source://railties/6.1.7/lib/rails/railtie.rb#152
    def rake_tasks(&blk); end

    # source://railties/6.1.7/lib/rails/railtie.rb#160
    def runner(&blk); end

    # source://railties/6.1.7/lib/rails/railtie.rb#168
    def server(&blk); end

    # source://railties/6.1.7/lib/rails/railtie.rb#148
    def subclasses; end

    private

    # source://railties/6.1.7/lib/rails/railtie.rb#195
    def generate_railtie_name(string); end

    # source://railties/6.1.7/lib/rails/railtie.rb#205
    def method_missing(name, *args, &block); end

    # source://railties/6.1.7/lib/rails/railtie.rb#217
    def register_block_for(type, &blk); end

    # source://railties/6.1.7/lib/rails/railtie.rb#199
    def respond_to_missing?(name, _); end
  end
end

# source://railties/6.1.7/lib/rails/railtie.rb#142
Rails::Railtie::ABSTRACT_RAILTIES = T.let(T.unsafe(nil), Array)

class Rails::Railtie::Configuration
  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#9
  def initialize; end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#71
  def after_initialize(&block); end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#48
  def app_generators; end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#40
  def app_middleware; end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#55
  def before_configuration(&block); end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#61
  def before_eager_load(&block); end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#66
  def before_initialize(&block); end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#19
  def eager_load_namespaces; end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#86
  def respond_to?(name, include_private = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#82
  def to_prepare(&blk); end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#76
  def to_prepare_blocks; end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#31
  def watchable_dirs; end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#24
  def watchable_files; end

  private

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#91
  def method_missing(name, *args, &blk); end

  class << self
    # source://railties/6.1.7/lib/rails/railtie/configuration.rb#14
    def eager_load_namespaces; end
  end
end

module WebConsole
  extend ::ActiveSupport::Autoload

  class << self
    # source://web-console//lib/web_console.rb#28
    def logger; end
  end
end

# A context lets you get object names related to the current session binding.
class WebConsole::Context
  # @return [Context] a new instance of Context
  #
  # source://web-console//lib/web_console/context.rb#6
  def initialize(binding); end

  # Extracts entire objects which can be called by the current session unless
  # the inputs is present.
  #
  # Otherwise, it extracts methods and constants of the object specified by
  # the input.
  #
  # source://web-console//lib/web_console/context.rb#15
  def extract(input = T.unsafe(nil)); end

  private

  # source://web-console//lib/web_console/context.rb#41
  def eval(cmd); end

  # source://web-console//lib/web_console/context.rb#30
  def global; end

  # source://web-console//lib/web_console/context.rb#34
  def local(input); end
end

# source://web-console//lib/web_console/context.rb#21
WebConsole::Context::GLOBAL_OBJECTS = T.let(T.unsafe(nil), Array)

# Raised when there is an attempt to render a console more than once.
class WebConsole::DoubleRenderError < ::WebConsole::Error; end

# The base class for every Web Console related error.
class WebConsole::Error < ::StandardError; end

# Simple Ruby code evaluator.
#
# This class wraps a +Binding+ object and evaluates code inside of it. The
# difference of a regular +Binding+ eval is that +Evaluator+ will always
# return a string and will format exception output.
class WebConsole::Evaluator
  # @return [Evaluator] a new instance of Evaluator
  #
  # source://web-console//lib/web_console/evaluator.rb#17
  def initialize(binding = T.unsafe(nil)); end

  # source://web-console//lib/web_console/evaluator.rb#11
  def cleaner; end

  # source://web-console//lib/web_console/evaluator.rb#21
  def eval(input); end

  private

  # source://web-console//lib/web_console/evaluator.rb#34
  def format_exception(exc); end

  class << self
    # source://web-console//lib/web_console/evaluator.rb#11
    def cleaner; end
  end
end

class WebConsole::ExceptionMapper
  # @return [ExceptionMapper] a new instance of ExceptionMapper
  #
  # source://web-console//lib/web_console/exception_mapper.rb#23
  def initialize(exception); end

  # source://web-console//lib/web_console/exception_mapper.rb#33
  def [](index); end

  # Returns the value of attribute exc.
  #
  # source://web-console//lib/web_console/exception_mapper.rb#5
  def exc; end

  # source://web-console//lib/web_console/exception_mapper.rb#29
  def first; end

  private

  # source://web-console//lib/web_console/exception_mapper.rb#39
  def guess_binding_for_index(index); end

  # source://web-console//lib/web_console/exception_mapper.rb#49
  def guess_the_first_application_binding; end

  class << self
    # source://web-console//lib/web_console/exception_mapper.rb#17
    def find_binding(mappers, exception_object_id); end

    # source://web-console//lib/web_console/exception_mapper.rb#7
    def follow(exc); end
  end
end

# Injects content into a Rack body.
class WebConsole::Injector
  # @return [Injector] a new instance of Injector
  #
  # source://web-console//lib/web_console/injector.rb#6
  def initialize(body, headers); end

  # source://web-console//lib/web_console/injector.rb#15
  def inject(content); end
end

module WebConsole::Interceptor
  class << self
    # source://web-console//lib/web_console/interceptor.rb#3
    def call(request, exception); end
  end
end

class WebConsole::Middleware
  # @return [Middleware] a new instance of Middleware
  #
  # source://web-console//lib/web_console/middleware.rb#12
  def initialize(app); end

  # source://web-console//lib/web_console/middleware.rb#16
  def call(env); end

  # source://web-console//lib/web_console/middleware.rb#9
  def mount_point; end

  # source://web-console//lib/web_console/middleware.rb#9
  def mount_point=(val); end

  # source://web-console//lib/web_console/middleware.rb#10
  def whiny_requests; end

  # source://web-console//lib/web_console/middleware.rb#10
  def whiny_requests=(val); end

  private

  # @return [Boolean]
  #
  # source://web-console//lib/web_console/middleware.rb#54
  def acceptable_content_type?(headers); end

  # source://web-console//lib/web_console/middleware.rb#85
  def binding_change_re; end

  # source://web-console//lib/web_console/middleware.rb#131
  def call_app(env); end

  # source://web-console//lib/web_console/middleware.rb#111
  def change_stack_trace(id, request); end

  # source://web-console//lib/web_console/middleware.rb#72
  def create_regular_or_whiny_request(env); end

  # source://web-console//lib/web_console/middleware.rb#95
  def id_for_repl_session_stack_frame_change(request); end

  # source://web-console//lib/web_console/middleware.rb#89
  def id_for_repl_session_update(request); end

  # source://web-console//lib/web_console/middleware.rb#58
  def json_response(opts = T.unsafe(nil)); end

  # source://web-console//lib/web_console/middleware.rb#66
  def json_response_with_session(id, request, opts = T.unsafe(nil)); end

  # source://web-console//lib/web_console/middleware.rb#77
  def repl_sessions_re; end

  # source://web-console//lib/web_console/middleware.rb#125
  def respond_with_unacceptable_request; end

  # source://web-console//lib/web_console/middleware.rb#119
  def respond_with_unavailable_session(id); end

  # source://web-console//lib/web_console/middleware.rb#81
  def update_re; end

  # source://web-console//lib/web_console/middleware.rb#101
  def update_repl_session(id, request); end

  class << self
    # source://web-console//lib/web_console/middleware.rb#9
    def mount_point; end

    # source://web-console//lib/web_console/middleware.rb#9
    def mount_point=(val); end

    # source://web-console//lib/web_console/middleware.rb#10
    def whiny_requests; end

    # source://web-console//lib/web_console/middleware.rb#10
    def whiny_requests=(val); end
  end
end

# source://web-console//lib/web_console/middleware.rb#7
WebConsole::Middleware::TEMPLATES_PATH = T.let(T.unsafe(nil), String)

class WebConsole::Permissions
  # @return [Permissions] a new instance of Permissions
  #
  # source://web-console//lib/web_console/permissions.rb#10
  def initialize(networks = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://web-console//lib/web_console/permissions.rb#14
  def include?(network); end

  # source://web-console//lib/web_console/permissions.rb#20
  def to_s; end

  private

  # source://web-console//lib/web_console/permissions.rb#30
  def coerce_network_to_ipaddr(network); end

  # source://web-console//lib/web_console/permissions.rb#38
  def human_readable_ipaddr(ipaddr); end

  # source://web-console//lib/web_console/permissions.rb#26
  def normalize_networks(networks); end
end

# IPv4 and IPv6 localhost should be always allowed.
#
# source://web-console//lib/web_console/permissions.rb#8
WebConsole::Permissions::ALWAYS_PERMITTED_NETWORKS = T.let(T.unsafe(nil), Array)

class WebConsole::Railtie < ::Rails::Railtie
  # source://web-console//lib/web_console/railtie.rb#59
  def web_console_permissions; end
end

class WebConsole::Request < ::ActionDispatch::Request
  # source://web-console//lib/web_console/request.rb#5
  def permissions; end

  # source://web-console//lib/web_console/request.rb#5
  def permissions=(val); end

  # @return [Boolean]
  #
  # source://web-console//lib/web_console/request.rb#7
  def permitted?; end

  # source://web-console//lib/web_console/request.rb#11
  def strict_remote_ip; end

  class << self
    # source://web-console//lib/web_console/request.rb#5
    def permissions; end

    # source://web-console//lib/web_console/request.rb#5
    def permissions=(val); end
  end
end

class WebConsole::Request::GetSecureIp < ::ActionDispatch::RemoteIp::GetIp
  # @return [GetSecureIp] a new instance of GetSecureIp
  #
  # source://web-console//lib/web_console/request.rb#20
  def initialize(req, proxies); end

  # source://web-console//lib/web_console/request.rb#31
  def filter_proxies(ips); end
end

# A session lets you persist an +Evaluator+ instance in memory associated
# with multiple bindings.
#
# Each newly created session is persisted into memory and you can find it
# later by its +id+.
#
# A session may be associated with multiple bindings. This is used by the
# error pages only, as currently, this is the only client that needs to do
# that.
class WebConsole::Session
  # @return [Session] a new instance of Session
  #
  # source://web-console//lib/web_console/session.rb#44
  def initialize(exception_mappers); end

  # Returns context of the current binding
  #
  # source://web-console//lib/web_console/session.rb#70
  def context(objpath); end

  # Evaluate +input+ on the current Evaluator associated binding.
  #
  # Returns a string of the Evaluator output.
  #
  # source://web-console//lib/web_console/session.rb#56
  def eval(input); end

  # An unique identifier for every REPL.
  #
  # source://web-console//lib/web_console/session.rb#42
  def id; end

  # source://web-console//lib/web_console/session.rb#14
  def inmemory_storage; end

  # Switches the current binding to the one at specified +index+.
  #
  # Returns nothing.
  #
  # source://web-console//lib/web_console/session.rb#63
  def switch_binding_to(index, exception_object_id); end

  private

  # source://web-console//lib/web_console/session.rb#76
  def store_into_memory; end

  class << self
    # Finds a persisted session in memory by its id.
    #
    # Returns a persisted session if found in memory.
    # Raises NotFound error unless found in memory.
    #
    # source://web-console//lib/web_console/session.rb#21
    def find(id); end

    # Create a Session from an binding or exception in a storage.
    #
    # The storage is expected to respond to #[]. The binding is expected in
    # :__web_console_binding and the exception in :__web_console_exception.
    #
    # Can return nil, if no binding or exception have been preserved in the
    # storage.
    #
    # source://web-console//lib/web_console/session.rb#32
    def from(storage); end

    # source://web-console//lib/web_console/session.rb#14
    def inmemory_storage; end
  end
end

# A facade that handles template rendering and composition.
#
# It introduces template helpers to ease the inclusion of scripts only on
# Rails error pages.
class WebConsole::Template
  # @return [Template] a new instance of Template
  #
  # source://web-console//lib/web_console/template.rb#12
  def initialize(env, session); end

  # Render a template (inferred from +template_paths+) as a plain string.
  #
  # source://web-console//lib/web_console/template.rb#19
  def render(template); end

  # source://web-console//lib/web_console/template.rb#10
  def template_paths; end

  # source://web-console//lib/web_console/template.rb#10
  def template_paths=(val); end

  class << self
    # source://web-console//lib/web_console/template.rb#10
    def template_paths; end

    # source://web-console//lib/web_console/template.rb#10
    def template_paths=(val); end
  end
end

class WebConsole::View < ::ActionView::Base
  # Execute a block only on error pages.
  #
  # The error pages are special, because they are the only pages that
  # currently require multiple bindings. We get those from exceptions.
  #
  # source://web-console//lib/web_console/view.rb#9
  def only_on_error_page(*args); end

  # Execute a block only on regular, non-error, pages.
  #
  # source://web-console//lib/web_console/view.rb#14
  def only_on_regular_page(*args); end

  # Custom ActionView::Base#render wrapper which silences all the log
  # printings.
  #
  # Helps to keep the Rails logs clean during errors.
  #
  # source://web-console//lib/web_console/view.rb#41
  def render(*_arg0); end

  # Render inlined string to be used inside of JavaScript code.
  #
  # The inlined string is returned as an actual JavaScript string. You
  # don't need to wrap the result yourself.
  #
  # source://web-console//lib/web_console/view.rb#33
  def render_inlined_string(template); end

  # Render JavaScript inside a script tag and a closure.
  #
  # This one lets write JavaScript that will automatically get wrapped in a
  # script tag and enclosed in a closure, so you don't have to worry for
  # leaking globals, unless you explicitly want to.
  #
  # source://web-console//lib/web_console/view.rb#23
  def render_javascript(template); end

  # Override method for ActionView::Helpers::TranslationHelper#t.
  #
  # This method escapes the original return value for JavaScript, since the
  # method returns a HTML tag with some attributes when the key is not found,
  # so it could cause a syntax error if we use the value in the string literals.
  #
  # source://web-console//lib/web_console/view.rb#54
  def t(key, options = T.unsafe(nil)); end
end

# Noisy wrapper around +Request+.
#
# If any calls to +permitted?+ and +acceptable_content_type?+
# return false, an info log message will be displayed in users' logs.
class WebConsole::WhinyRequest < ::SimpleDelegator
  # @return [Boolean]
  #
  # source://web-console//lib/web_console/whiny_request.rb#9
  def permitted?; end

  private

  # source://web-console//lib/web_console/whiny_request.rb#25
  def logger; end

  # source://web-console//lib/web_console/whiny_request.rb#29
  def request; end

  # source://web-console//lib/web_console/whiny_request.rb#18
  def whine_unless(condition); end
end

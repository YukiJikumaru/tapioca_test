# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `actioncable` gem.
# Please instead update this file by running `bin/tapioca gem actioncable`.

module AbstractController::AssetPaths
  extend ::ActiveSupport::Concern
end

class AbstractController::Base
  include ::ActiveSupport::Configurable
  extend ::ActiveSupport::Configurable::ClassMethods
  extend ::ActiveSupport::DescendantsTracker

  # source://actionpack/6.1.7/lib/abstract_controller/base.rb#174
  def action_methods; end

  # source://activesupport/6.1.7/lib/active_support/core_ext/module/attr_internal.rb#33
  def action_name; end

  # source://activesupport/6.1.7/lib/active_support/core_ext/module/attr_internal.rb#33
  def action_name=(_arg0); end

  # source://actionpack/6.1.7/lib/abstract_controller/base.rb#188
  def available_action?(action_name); end

  # source://actionpack/6.1.7/lib/abstract_controller/base.rb#169
  def controller_path; end

  # source://activesupport/6.1.7/lib/active_support/core_ext/module/attr_internal.rb#33
  def formats; end

  # source://activesupport/6.1.7/lib/active_support/core_ext/module/attr_internal.rb#33
  def formats=(_arg0); end

  # source://actionpack/6.1.7/lib/abstract_controller/base.rb#207
  def inspect; end

  # source://actionpack/6.1.7/lib/abstract_controller/base.rb#195
  def performed?; end

  # source://actionpack/6.1.7/lib/abstract_controller/base.rb#156
  def process(action, *args); end

  # source://activesupport/6.1.7/lib/active_support/core_ext/module/attr_internal.rb#33
  def response_body; end

  # source://activesupport/6.1.7/lib/active_support/core_ext/module/attr_internal.rb#33
  def response_body=(_arg0); end

  def send_action(*_arg0); end

  private

  # source://actionpack/6.1.7/lib/abstract_controller/base.rb#259
  def _find_action_name(action_name); end

  # source://actionpack/6.1.7/lib/abstract_controller/base.rb#241
  def _handle_action_missing(*args); end

  # source://actionpack/6.1.7/lib/abstract_controller/base.rb#295
  def _valid_action_name?(action_name); end

  # source://actionpack/6.1.7/lib/abstract_controller/base.rb#217
  def action_method?(name); end

  # source://actionpack/6.1.7/lib/abstract_controller/base.rb#286
  def method_for_action(action_name); end

  # source://actionpack/6.1.7/lib/abstract_controller/base.rb#227
  def process_action(method_name, *args); end

  class << self
    # source://actionpack/6.1.7/lib/abstract_controller/base.rb#64
    def abstract; end

    # source://actionpack/6.1.7/lib/abstract_controller/base.rb#69
    def abstract!; end

    # source://actionpack/6.1.7/lib/abstract_controller/base.rb#64
    def abstract?; end

    # source://actionpack/6.1.7/lib/abstract_controller/base.rb#103
    def action_methods; end

    # source://actionpack/6.1.7/lib/abstract_controller/base.rb#121
    def clear_action_methods!; end

    # source://actionpack/6.1.7/lib/abstract_controller/base.rb#135
    def controller_path; end

    # source://actionpack/6.1.7/lib/abstract_controller/base.rb#73
    def inherited(klass); end

    # source://actionpack/6.1.7/lib/abstract_controller/base.rb#88
    def internal_methods; end

    # source://actionpack/6.1.7/lib/abstract_controller/base.rb#140
    def method_added(name); end

    # source://actionpack/6.1.7/lib/abstract_controller/base.rb#203
    def supports_path?; end
  end
end

module AbstractController::Caching
  include ::AbstractController::Caching::ConfigMethods
  extend ::ActiveSupport::Concern
  extend ::ActiveSupport::Autoload
  include GeneratedInstanceMethods
  include ::AbstractController::Caching::Fragments

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Caching::Fragments::ClassMethods
  mixes_in_class_methods ::AbstractController::Caching::ClassMethods
  mixes_in_class_methods ::AbstractController::Caching::ConfigMethods

  # source://actionpack/6.1.7/lib/abstract_controller/caching.rb#52
  def view_cache_dependencies; end

  private

  # source://actionpack/6.1.7/lib/abstract_controller/caching.rb#58
  def cache(key, options = T.unsafe(nil), &block); end

  module GeneratedClassMethods
    def _view_cache_dependencies; end
    def _view_cache_dependencies=(value); end
    def _view_cache_dependencies?; end
    def fragment_cache_keys; end
    def fragment_cache_keys=(value); end
    def fragment_cache_keys?; end
  end

  module GeneratedInstanceMethods
    def _view_cache_dependencies; end
    def _view_cache_dependencies=(value); end
    def _view_cache_dependencies?; end
    def fragment_cache_keys; end
    def fragment_cache_keys=(value); end
    def fragment_cache_keys?; end
  end
end

module AbstractController::Caching::ClassMethods
  # source://actionpack/6.1.7/lib/abstract_controller/caching.rb#47
  def view_cache_dependency(&dependency); end
end

module AbstractController::Caching::ConfigMethods
  # source://actionpack/6.1.7/lib/abstract_controller/caching.rb#13
  def cache_store; end

  # source://actionpack/6.1.7/lib/abstract_controller/caching.rb#17
  def cache_store=(store); end

  private

  # source://actionpack/6.1.7/lib/abstract_controller/caching.rb#22
  def cache_configured?; end
end

module AbstractController::Caching::Fragments
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Caching::Fragments::ClassMethods

  # source://actionpack/6.1.7/lib/abstract_controller/caching/fragments.rb#68
  def combined_fragment_cache_key(key); end

  # source://actionpack/6.1.7/lib/abstract_controller/caching/fragments.rb#132
  def expire_fragment(key, options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/abstract_controller/caching/fragments.rb#105
  def fragment_exist?(key, options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/abstract_controller/caching/fragments.rb#145
  def instrument_fragment_cache(name, key); end

  # source://actionpack/6.1.7/lib/abstract_controller/caching/fragments.rb#93
  def read_fragment(key, options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/abstract_controller/caching/fragments.rb#80
  def write_fragment(key, content, options = T.unsafe(nil)); end

  module GeneratedClassMethods
    def fragment_cache_keys; end
    def fragment_cache_keys=(value); end
    def fragment_cache_keys?; end
  end

  module GeneratedInstanceMethods
    def fragment_cache_keys; end
    def fragment_cache_keys=(value); end
    def fragment_cache_keys?; end
  end
end

module AbstractController::Caching::Fragments::ClassMethods
  # source://actionpack/6.1.7/lib/abstract_controller/caching/fragments.rb#57
  def fragment_cache_key(value = T.unsafe(nil), &key); end
end

module AbstractController::Callbacks
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActiveSupport::Callbacks

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker
  mixes_in_class_methods ::AbstractController::Callbacks::ClassMethods

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#40
  def process_action(*_arg0); end

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
  end
end

module AbstractController::Callbacks::ClassMethods
  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#91
  def _insert_callbacks(callbacks, block = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#71
  def _normalize_callback_option(options, from, to); end

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#66
  def _normalize_callback_options(options); end

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#199
  def after_action(*names, &blk); end

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#199
  def append_after_action(*names, &blk); end

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#199
  def append_around_action(*names, &blk); end

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#199
  def append_before_action(*names, &blk); end

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#199
  def around_action(*names, &blk); end

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#199
  def before_action(*names, &blk); end

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#205
  def prepend_after_action(*names, &blk); end

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#205
  def prepend_around_action(*names, &blk); end

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#205
  def prepend_before_action(*names, &blk); end

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#213
  def skip_after_action(*names); end

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#213
  def skip_around_action(*names); end

  # source://actionpack/6.1.7/lib/abstract_controller/callbacks.rb#213
  def skip_before_action(*names); end
end

module AbstractController::Collector
  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def atom(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def bmp(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def css(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def csv(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def gif(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def gzip(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def html(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def ics(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def jpeg(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def js(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def json(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def m4a(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def mp3(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def mp4(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def mpeg(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def multipart_form(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def ogg(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def otf(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def pdf(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def png(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def rss(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def svg(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def text(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def tiff(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def ttf(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def url_encoded_form(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def vcf(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def vtt(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def webm(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def woff(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def woff2(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def xml(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def yaml(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#10
  def zip(*args, &block); end

  private

  # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#26
  def method_missing(symbol, *args, &block); end

  class << self
    # source://actionpack/6.1.7/lib/abstract_controller/collector.rb#7
    def generate_method_for_mime(mime); end
  end
end

module AbstractController::Helpers
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Helpers::ClassMethods

  # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#39
  def _helpers; end

  module GeneratedClassMethods
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end

  module GeneratedInstanceMethods
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end
end

module AbstractController::Helpers::ClassMethods
  # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#55
  def _helpers=(_arg0); end

  # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#183
  def _helpers_for_modification; end

  # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#157
  def clear_helpers; end

  # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#146
  def helper(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#78
  def helper_method(*methods); end

  # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#47
  def inherited(klass); end

  # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#168
  def modules_for_helpers(modules_or_helper_prefixes); end

  private

  # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#202
  def default_helper_module!; end

  # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#191
  def define_helpers_module(klass, helpers = T.unsafe(nil)); end
end

class AbstractController::Helpers::MissingHelperError < ::LoadError
  # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#26
  def initialize(error, path); end
end

module AbstractController::Logger
  extend ::ActiveSupport::Concern
  include ::ActiveSupport::Benchmarkable
end

module AbstractController::Rendering
  extend ::ActiveSupport::Concern
  include ::ActionView::ViewPaths

  mixes_in_class_methods ::ActionView::ViewPaths::ClassMethods

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#23
  def render(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#51
  def render_to_body(options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#45
  def render_to_string(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#55
  def rendered_format; end

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#63
  def view_assigns; end

  private

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#75
  def _normalize_args(action = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#90
  def _normalize_options(options); end

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#116
  def _normalize_render(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#100
  def _process_format(format); end

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#95
  def _process_options(options); end

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#103
  def _process_variant(options); end

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#123
  def _protected_ivars; end

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#106
  def _set_html_content_type; end

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#112
  def _set_rendered_content_type(format); end

  # source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#109
  def _set_vary_header; end
end

# source://actionpack/6.1.7/lib/abstract_controller/rendering.rb#59
AbstractController::Rendering::DEFAULT_PROTECTED_INSTANCE_VARIABLES = T.let(T.unsafe(nil), Array)

module AbstractController::Translation
  # source://actionpack/6.1.7/lib/abstract_controller/translation.rb#32
  def l(object, **options); end

  # source://actionpack/6.1.7/lib/abstract_controller/translation.rb#32
  def localize(object, **options); end

  # source://actionpack/6.1.7/lib/abstract_controller/translation.rb#7
  def raise_on_missing_translations; end

  # source://actionpack/6.1.7/lib/abstract_controller/translation.rb#7
  def raise_on_missing_translations=(val); end

  # source://actionpack/6.1.7/lib/abstract_controller/translation.rb#17
  def t(key, **options); end

  # source://actionpack/6.1.7/lib/abstract_controller/translation.rb#17
  def translate(key, **options); end

  class << self
    # source://actionpack/6.1.7/lib/abstract_controller/translation.rb#7
    def raise_on_missing_translations; end

    # source://actionpack/6.1.7/lib/abstract_controller/translation.rb#7
    def raise_on_missing_translations=(val); end
  end
end

module AbstractController::UrlFor
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActionDispatch::Routing::UrlFor

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::UrlFor::ClassMethods

  # source://actionpack/6.1.7/lib/abstract_controller/url_for.rb#14
  def _routes; end

  module GeneratedClassMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end

  module GeneratedInstanceMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end
end

module AbstractController::UrlFor::ClassMethods
  # source://actionpack/6.1.7/lib/abstract_controller/url_for.rb#20
  def _routes; end

  # source://actionpack/6.1.7/lib/abstract_controller/url_for.rb#24
  def action_methods; end
end

class ActionController::Base < ::ActionController::Metal
  include ::ActionView::ViewPaths
  include ::AbstractController::Rendering
  include ::AbstractController::Translation
  include ::AbstractController::AssetPaths
  include ::AbstractController::Helpers
  include ::ActionController::Helpers
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::AbstractController::UrlFor
  include ::ActionController::UrlFor
  include ::AbstractController::Logger
  include ::ActiveSupport::Benchmarkable
  include ::ActionController::Redirecting
  include ::ActionView::Rendering
  include ::ActionView::Layouts
  include ::ActionController::Rendering
  include ::ActionController::Renderers
  include ::ActionController::Renderers::All
  include ::ActionController::Head
  include ::ActionController::ConditionalGet
  include ::ActionController::EtagWithTemplateDigest
  include ::ActionController::EtagWithFlash
  include ::ActionController::Caching
  include ::AbstractController::Caching::Fragments
  include ::AbstractController::Caching::ConfigMethods
  include ::AbstractController::Caching
  include ::ActionController::MimeResponds
  include ::ActionController::BasicImplicitRender
  include ::ActionController::ImplicitRender
  include ::ActionController::StrongParameters
  include ::ActionController::ParameterEncoding
  include ::ActionController::Cookies
  include ::ActionController::Flash
  include ::ActionController::FormBuilder
  include ::ActiveSupport::Callbacks
  include ::AbstractController::Callbacks
  include ::ActionController::RequestForgeryProtection
  include ::ActionController::ContentSecurityPolicy
  include ::ActionController::PermissionsPolicy
  include ::ActionController::Streaming
  include ::ActionController::DataStreaming
  include ::ActionController::HttpAuthentication::Basic::ControllerMethods
  include ::ActionController::HttpAuthentication::Digest::ControllerMethods
  include ::ActionController::HttpAuthentication::Token::ControllerMethods
  include ::ActionController::DefaultHeaders
  include ::ActionController::Logging
  include ::ActiveSupport::Rescuable
  include ::ActionController::Rescue
  include ::ActionController::Instrumentation
  include ::ActionController::ParamsWrapper
  extend ::ActionView::ViewPaths::ClassMethods
  extend ::AbstractController::Helpers::ClassMethods
  extend ::ActionController::Helpers::ClassMethods
  extend ::AbstractController::UrlFor::ClassMethods
  extend ::ActionView::Rendering::ClassMethods
  extend ::ActionView::Layouts::ClassMethods
  extend ::ActionController::Rendering::ClassMethods
  extend ::ActionController::Renderers::ClassMethods
  extend ::ActionController::ConditionalGet::ClassMethods
  extend ::AbstractController::Caching::Fragments::ClassMethods
  extend ::AbstractController::Caching::ClassMethods
  extend ::AbstractController::Caching::ConfigMethods
  extend ::ActionController::ParameterEncoding::ClassMethods
  extend ::ActionController::Flash::ClassMethods
  extend ::ActionController::FormBuilder::ClassMethods
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::AbstractController::Callbacks::ClassMethods
  extend ::ActionController::RequestForgeryProtection::ClassMethods
  extend ::ActionController::ContentSecurityPolicy::ClassMethods
  extend ::ActionController::PermissionsPolicy::ClassMethods
  extend ::ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods
  extend ::ActionController::DefaultHeaders::ClassMethods
  extend ::ActionController::Logging::ClassMethods
  extend ::ActiveSupport::Rescuable::ClassMethods
  extend ::ActionController::Instrumentation::ClassMethods
  extend ::ActionController::ParamsWrapper::ClassMethods

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#67
  def __callbacks; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#67
  def __callbacks?; end

  # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#10
  def _helper_methods; end

  # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#10
  def _helper_methods=(_arg0); end

  # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#10
  def _helper_methods?; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#835
  def _process_action_callbacks; end

  # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#31
  def _renderers; end

  # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#31
  def _renderers=(_arg0); end

  # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#31
  def _renderers?; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#823
  def _run_process_action_callbacks(&block); end

  # source://actionpack/6.1.7/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies; end

  # source://actionpack/6.1.7/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies=(_arg0); end

  # source://actionpack/6.1.7/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#176
  def _wrapper_options; end

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#176
  def _wrapper_options=(_arg0); end

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#176
  def _wrapper_options?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/flash.rb#36
  def alert; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def allow_forgery_protection; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def allow_forgery_protection=(value); end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def asset_host; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def asset_host=(value); end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def assets_dir; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def assets_dir=(value); end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def default_asset_host_protocol; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def default_asset_host_protocol=(value); end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def default_protect_from_forgery; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def default_protect_from_forgery=(value); end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def default_static_extension; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def default_static_extension=(value); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/url_for.rb#95
  def default_url_options; end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/url_for.rb#95
  def default_url_options=(_arg0); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/url_for.rb#95
  def default_url_options?; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def enable_fragment_cache_logging; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def enable_fragment_cache_logging=(value); end

  # source://actionpack/6.1.7/lib/action_controller/metal/etag_with_template_digest.rb#27
  def etag_with_template_digest; end

  # source://actionpack/6.1.7/lib/action_controller/metal/etag_with_template_digest.rb#27
  def etag_with_template_digest=(_arg0); end

  # source://actionpack/6.1.7/lib/action_controller/metal/etag_with_template_digest.rb#27
  def etag_with_template_digest?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/conditional_get.rb#13
  def etaggers; end

  # source://actionpack/6.1.7/lib/action_controller/metal/conditional_get.rb#13
  def etaggers=(_arg0); end

  # source://actionpack/6.1.7/lib/action_controller/metal/conditional_get.rb#13
  def etaggers?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/flash.rb#10
  def flash(*_arg0, &_arg1); end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def forgery_protection_origin_check; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def forgery_protection_origin_check=(value); end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def forgery_protection_strategy; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def forgery_protection_strategy=(value); end

  # source://actionpack/6.1.7/lib/abstract_controller/caching/fragments.rb#23
  def fragment_cache_keys; end

  # source://actionpack/6.1.7/lib/abstract_controller/caching/fragments.rb#23
  def fragment_cache_keys=(_arg0); end

  # source://actionpack/6.1.7/lib/abstract_controller/caching/fragments.rb#23
  def fragment_cache_keys?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#63
  def helpers_path; end

  # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#63
  def helpers_path=(_arg0); end

  # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#63
  def helpers_path?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#64
  def include_all_helpers; end

  # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#64
  def include_all_helpers=(_arg0); end

  # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#64
  def include_all_helpers?; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def javascripts_dir; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def javascripts_dir=(value); end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def log_warning_on_csrf_failure; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def log_warning_on_csrf_failure=(value); end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def logger; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def logger=(value); end

  # source://actionpack/6.1.7/lib/action_controller/metal/flash.rb#36
  def notice; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def per_form_csrf_tokens; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def per_form_csrf_tokens=(value); end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def perform_caching; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def perform_caching=(value); end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def relative_url_root; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def relative_url_root=(value); end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def request_forgery_protection_token; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def request_forgery_protection_token=(value); end

  # source://activesupport/6.1.7/lib/active_support/rescuable.rb#13
  def rescue_handlers; end

  # source://activesupport/6.1.7/lib/active_support/rescuable.rb#13
  def rescue_handlers=(_arg0); end

  # source://activesupport/6.1.7/lib/active_support/rescuable.rb#13
  def rescue_handlers?; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def stylesheets_dir; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
  def stylesheets_dir=(value); end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
  def urlsafe_csrf_tokens; end

  private

  # source://actionview/6.1.7/lib/action_view/layouts.rb#325
  def _layout(lookup_context, formats); end

  # source://actionpack/6.1.7/lib/action_controller/base.rb#265
  def _protected_ivars; end

  class << self
    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#67
    def __callbacks; end

    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#67
    def __callbacks=(value); end

    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#67
    def __callbacks?; end

    # source://actionpack/6.1.7/lib/action_controller/form_builder.rb#31
    def _default_form_builder; end

    # source://actionpack/6.1.7/lib/action_controller/form_builder.rb#31
    def _default_form_builder=(value); end

    # source://actionpack/6.1.7/lib/action_controller/form_builder.rb#31
    def _default_form_builder?; end

    # source://actionpack/6.1.7/lib/action_controller/metal/flash.rb#8
    def _flash_types; end

    # source://actionpack/6.1.7/lib/action_controller/metal/flash.rb#8
    def _flash_types=(value); end

    # source://actionpack/6.1.7/lib/action_controller/metal/flash.rb#8
    def _flash_types?; end

    # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#10
    def _helper_methods; end

    # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#10
    def _helper_methods=(value); end

    # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#10
    def _helper_methods?; end

    # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#14
    def _helpers; end

    # source://actionview/6.1.7/lib/action_view/layouts.rb#209
    def _layout; end

    # source://actionview/6.1.7/lib/action_view/layouts.rb#209
    def _layout=(value); end

    # source://actionview/6.1.7/lib/action_view/layouts.rb#209
    def _layout?; end

    # source://actionview/6.1.7/lib/action_view/layouts.rb#210
    def _layout_conditions; end

    # source://actionview/6.1.7/lib/action_view/layouts.rb#210
    def _layout_conditions=(value); end

    # source://actionview/6.1.7/lib/action_view/layouts.rb#210
    def _layout_conditions?; end

    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#827
    def _process_action_callbacks; end

    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#831
    def _process_action_callbacks=(value); end

    # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#31
    def _renderers; end

    # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#31
    def _renderers=(value); end

    # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#31
    def _renderers?; end

    # source://actionpack/6.1.7/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies; end

    # source://actionpack/6.1.7/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies=(value); end

    # source://actionpack/6.1.7/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies?; end

    # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#176
    def _wrapper_options; end

    # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#176
    def _wrapper_options=(value); end

    # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#176
    def _wrapper_options?; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def allow_forgery_protection; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def allow_forgery_protection=(value); end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def asset_host; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def asset_host=(value); end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def assets_dir; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def assets_dir=(value); end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def default_asset_host_protocol; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def default_asset_host_protocol=(value); end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def default_protect_from_forgery; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def default_protect_from_forgery=(value); end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def default_static_extension; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def default_static_extension=(value); end

    # source://actionpack/6.1.7/lib/action_dispatch/routing/url_for.rb#95
    def default_url_options; end

    # source://actionpack/6.1.7/lib/action_dispatch/routing/url_for.rb#95
    def default_url_options=(value); end

    # source://actionpack/6.1.7/lib/action_dispatch/routing/url_for.rb#95
    def default_url_options?; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def enable_fragment_cache_logging; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def enable_fragment_cache_logging=(value); end

    # source://actionpack/6.1.7/lib/action_controller/metal/etag_with_template_digest.rb#27
    def etag_with_template_digest; end

    # source://actionpack/6.1.7/lib/action_controller/metal/etag_with_template_digest.rb#27
    def etag_with_template_digest=(value); end

    # source://actionpack/6.1.7/lib/action_controller/metal/etag_with_template_digest.rb#27
    def etag_with_template_digest?; end

    # source://actionpack/6.1.7/lib/action_controller/metal/conditional_get.rb#13
    def etaggers; end

    # source://actionpack/6.1.7/lib/action_controller/metal/conditional_get.rb#13
    def etaggers=(value); end

    # source://actionpack/6.1.7/lib/action_controller/metal/conditional_get.rb#13
    def etaggers?; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def forgery_protection_origin_check; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def forgery_protection_origin_check=(value); end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def forgery_protection_strategy; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def forgery_protection_strategy=(value); end

    # source://actionpack/6.1.7/lib/abstract_controller/caching/fragments.rb#23
    def fragment_cache_keys; end

    # source://actionpack/6.1.7/lib/abstract_controller/caching/fragments.rb#23
    def fragment_cache_keys=(value); end

    # source://actionpack/6.1.7/lib/abstract_controller/caching/fragments.rb#23
    def fragment_cache_keys?; end

    # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#63
    def helpers_path; end

    # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#63
    def helpers_path=(value); end

    # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#63
    def helpers_path?; end

    # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#64
    def include_all_helpers; end

    # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#64
    def include_all_helpers=(value); end

    # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#64
    def include_all_helpers?; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def javascripts_dir; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def javascripts_dir=(value); end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def log_warning_on_csrf_failure; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def log_warning_on_csrf_failure=(value); end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def logger; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def logger=(value); end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#212
    def middleware_stack; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def per_form_csrf_tokens; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def per_form_csrf_tokens=(value); end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def perform_caching; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def perform_caching=(value); end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def relative_url_root; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def relative_url_root=(value); end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def request_forgery_protection_token; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def request_forgery_protection_token=(value); end

    # source://activesupport/6.1.7/lib/active_support/rescuable.rb#13
    def rescue_handlers; end

    # source://activesupport/6.1.7/lib/active_support/rescuable.rb#13
    def rescue_handlers=(value); end

    # source://activesupport/6.1.7/lib/active_support/rescuable.rb#13
    def rescue_handlers?; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def stylesheets_dir; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def stylesheets_dir=(value); end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#111
    def urlsafe_csrf_tokens; end

    # source://activesupport/6.1.7/lib/active_support/configurable.rb#112
    def urlsafe_csrf_tokens=(value); end

    # source://actionpack/6.1.7/lib/action_controller/base.rb#197
    def without_modules(*modules); end
  end
end

module ActionController::Base::HelperMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/flash.rb#39
  def alert(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/caching/fragments.rb#31
  def combined_fragment_cache_key(*args, &block); end

  # source://actionpack/6.1.7/lib/action_controller/metal/content_security_policy.rb#12
  def content_security_policy?(*args, &block); end

  # source://actionpack/6.1.7/lib/action_controller/metal/content_security_policy.rb#13
  def content_security_policy_nonce(*args, &block); end

  # source://actionpack/6.1.7/lib/action_controller/metal/cookies.rb#8
  def cookies(*args, &block); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#97
  def form_authenticity_token(*args, &block); end

  # source://actionpack/6.1.7/lib/action_controller/metal/flash.rb#39
  def notice(*args, &block); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#98
  def protect_against_forgery?(*args, &block); end

  # source://actionpack/6.1.7/lib/abstract_controller/caching.rb#43
  def view_cache_dependencies(*args, &block); end
end

# source://actionpack/6.1.7/lib/action_controller/base.rb#205
ActionController::Base::MODULES = T.let(T.unsafe(nil), Array)

# source://actionpack/6.1.7/lib/action_controller/base.rb#260
ActionController::Base::PROTECTED_IVARS = T.let(T.unsafe(nil), Array)

module ActionController::BasicImplicitRender
  # source://actionpack/6.1.7/lib/action_controller/metal/basic_implicit_render.rb#9
  def default_render; end

  # source://actionpack/6.1.7/lib/action_controller/metal/basic_implicit_render.rb#5
  def send_action(method, *args); end
end

module ActionController::Caching
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::AbstractController::Caching::Fragments
  include ::AbstractController::Caching

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Caching::Fragments::ClassMethods
  mixes_in_class_methods ::AbstractController::Caching::ClassMethods
  mixes_in_class_methods ::AbstractController::Caching::ConfigMethods

  private

  # source://actionpack/6.1.7/lib/action_controller/caching.rb#40
  def instrument_name; end

  # source://actionpack/6.1.7/lib/action_controller/caching.rb#32
  def instrument_payload(key); end

  module GeneratedClassMethods
    def _view_cache_dependencies; end
    def _view_cache_dependencies=(value); end
    def _view_cache_dependencies?; end
    def fragment_cache_keys; end
    def fragment_cache_keys=(value); end
    def fragment_cache_keys?; end
  end

  module GeneratedInstanceMethods
    def _view_cache_dependencies; end
    def _view_cache_dependencies=(value); end
    def _view_cache_dependencies?; end
    def fragment_cache_keys; end
    def fragment_cache_keys=(value); end
    def fragment_cache_keys?; end
  end
end

module ActionController::ConditionalGet
  include ::ActionController::Head
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::ConditionalGet::ClassMethods

  # source://actionpack/6.1.7/lib/action_controller/metal/conditional_get.rb#246
  def expires_in(seconds, options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_controller/metal/conditional_get.rb#263
  def expires_now; end

  # source://actionpack/6.1.7/lib/action_controller/metal/conditional_get.rb#106
  def fresh_when(object = T.unsafe(nil), etag: T.unsafe(nil), weak_etag: T.unsafe(nil), strong_etag: T.unsafe(nil), last_modified: T.unsafe(nil), public: T.unsafe(nil), template: T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_controller/metal/conditional_get.rb#275
  def http_cache_forever(public: T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_controller/metal/conditional_get.rb#219
  def stale?(object = T.unsafe(nil), **freshness_kwargs); end

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/conditional_get.rb#284
  def combine_etags(validator, options); end

  module GeneratedClassMethods
    def etaggers; end
    def etaggers=(value); end
    def etaggers?; end
  end

  module GeneratedInstanceMethods
    def etaggers; end
    def etaggers=(value); end
    def etaggers?; end
  end
end

module ActionController::ConditionalGet::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/conditional_get.rb#31
  def etag(&etagger); end
end

module ActionController::ContentSecurityPolicy
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::AbstractController::Helpers
  include ::ActiveSupport::Callbacks
  include ::AbstractController::Callbacks

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Helpers::ClassMethods
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker
  mixes_in_class_methods ::AbstractController::Callbacks::ClassMethods
  mixes_in_class_methods ::ActionController::ContentSecurityPolicy::ClassMethods

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/content_security_policy.rb#39
  def content_security_policy?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/content_security_policy.rb#43
  def content_security_policy_nonce; end

  # source://actionpack/6.1.7/lib/action_controller/metal/content_security_policy.rb#47
  def current_content_security_policy; end

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end
end

module ActionController::ContentSecurityPolicy::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/content_security_policy.rb#17
  def content_security_policy(enabled = T.unsafe(nil), **options, &block); end

  # source://actionpack/6.1.7/lib/action_controller/metal/content_security_policy.rb#31
  def content_security_policy_report_only(report_only = T.unsafe(nil), **options); end
end

module ActionController::Cookies
  extend ::ActiveSupport::Concern

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/cookies.rb#14
  def cookies; end
end

module ActionController::DataStreaming
  extend ::ActiveSupport::Concern
  include ::ActionController::Rendering

  mixes_in_class_methods ::ActionController::Rendering::ClassMethods

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/data_streaming.rb#109
  def send_data(data, options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_controller/metal/data_streaming.rb#69
  def send_file(path, options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_controller/metal/data_streaming.rb#114
  def send_file_headers!(options); end
end

# source://actionpack/6.1.7/lib/action_controller/metal/data_streaming.rb#15
ActionController::DataStreaming::DEFAULT_SEND_FILE_DISPOSITION = T.let(T.unsafe(nil), String)

# source://actionpack/6.1.7/lib/action_controller/metal/data_streaming.rb#14
ActionController::DataStreaming::DEFAULT_SEND_FILE_TYPE = T.let(T.unsafe(nil), String)

module ActionController::DefaultHeaders
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionController::DefaultHeaders::ClassMethods
end

module ActionController::DefaultHeaders::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/default_headers.rb#10
  def make_response!(request); end
end

module ActionController::EtagWithFlash
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActionController::ConditionalGet

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::ConditionalGet::ClassMethods

  module GeneratedClassMethods
    def etaggers; end
    def etaggers=(value); end
    def etaggers?; end
  end

  module GeneratedInstanceMethods
    def etaggers; end
    def etaggers=(value); end
    def etaggers?; end
  end
end

module ActionController::EtagWithTemplateDigest
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActionController::ConditionalGet

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::ConditionalGet::ClassMethods

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/etag_with_template_digest.rb#35
  def determine_template_etag(options); end

  # source://actionpack/6.1.7/lib/action_controller/metal/etag_with_template_digest.rb#51
  def lookup_and_digest_template(template); end

  # source://actionpack/6.1.7/lib/action_controller/metal/etag_with_template_digest.rb#45
  def pick_template_for_etag(options); end

  module GeneratedClassMethods
    def etag_with_template_digest; end
    def etag_with_template_digest=(value); end
    def etag_with_template_digest?; end
    def etaggers; end
    def etaggers=(value); end
    def etaggers?; end
  end

  module GeneratedInstanceMethods
    def etag_with_template_digest; end
    def etag_with_template_digest=(value); end
    def etag_with_template_digest?; end
    def etaggers; end
    def etaggers=(value); end
    def etaggers?; end
  end
end

module ActionController::Flash
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::Flash::ClassMethods

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/flash.rb#47
  def redirect_to(options = T.unsafe(nil), response_options_and_flash = T.unsafe(nil)); end

  module GeneratedClassMethods
    def _flash_types; end
    def _flash_types=(value); end
    def _flash_types?; end
  end

  module GeneratedInstanceMethods; end
end

module ActionController::Flash::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/flash.rb#32
  def add_flash_types(*types); end
end

module ActionController::FormBuilder
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::FormBuilder::ClassMethods

  # source://actionpack/6.1.7/lib/action_controller/form_builder.rb#46
  def default_form_builder; end

  module GeneratedClassMethods
    def _default_form_builder; end
    def _default_form_builder=(value); end
    def _default_form_builder?; end
  end

  module GeneratedInstanceMethods; end
end

module ActionController::FormBuilder::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/form_builder.rb#40
  def default_form_builder(builder); end
end

module ActionController::Head
  # source://actionpack/6.1.7/lib/action_controller/metal/head.rb#21
  def head(status, options = T.unsafe(nil)); end

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/head.rb#52
  def include_content?(status); end
end

module ActionController::Helpers
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::AbstractController::Helpers

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Helpers::ClassMethods
  mixes_in_class_methods ::ActionController::Helpers::ClassMethods

  # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#128
  def helpers; end

  class << self
    # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#59
    def helpers_path; end

    # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#59
    def helpers_path=(_arg0); end
  end

  module GeneratedClassMethods
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
    def helpers_path; end
    def helpers_path=(value); end
    def helpers_path?; end
    def include_all_helpers; end
    def include_all_helpers=(value); end
    def include_all_helpers?; end
  end

  module GeneratedInstanceMethods
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
    def helpers_path; end
    def helpers_path=(value); end
    def helpers_path?; end
    def include_all_helpers; end
    def include_all_helpers=(value); end
    def include_all_helpers?; end
  end
end

module ActionController::Helpers::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#111
  def all_helpers_from_path(path); end

  # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#76
  def helper_attr(*attrs); end

  # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#86
  def helpers; end

  # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#102
  def modules_for_helpers(args); end

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/helpers.rb#122
  def all_application_helpers; end
end

module ActionController::HttpAuthentication::Basic::ControllerMethods
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods

  # source://actionpack/6.1.7/lib/action_controller/metal/http_authentication.rb#87
  def authenticate_or_request_with_http_basic(realm = T.unsafe(nil), message = T.unsafe(nil), &login_procedure); end

  # source://actionpack/6.1.7/lib/action_controller/metal/http_authentication.rb#91
  def authenticate_with_http_basic(&login_procedure); end

  # source://actionpack/6.1.7/lib/action_controller/metal/http_authentication.rb#78
  def http_basic_authenticate_or_request_with(name:, password:, realm: T.unsafe(nil), message: T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_controller/metal/http_authentication.rb#95
  def request_http_basic_authentication(realm = T.unsafe(nil), message = T.unsafe(nil)); end
end

module ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/http_authentication.rb#73
  def http_basic_authenticate_with(name:, password:, realm: T.unsafe(nil), **options); end
end

module ActionController::HttpAuthentication::Digest::ControllerMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/http_authentication.rb#184
  def authenticate_or_request_with_http_digest(realm = T.unsafe(nil), message = T.unsafe(nil), &password_procedure); end

  # source://actionpack/6.1.7/lib/action_controller/metal/http_authentication.rb#189
  def authenticate_with_http_digest(realm = T.unsafe(nil), &password_procedure); end

  # source://actionpack/6.1.7/lib/action_controller/metal/http_authentication.rb#194
  def request_http_digest_authentication(realm = T.unsafe(nil), message = T.unsafe(nil)); end
end

module ActionController::HttpAuthentication::Token::ControllerMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/http_authentication.rb#415
  def authenticate_or_request_with_http_token(realm = T.unsafe(nil), message = T.unsafe(nil), &login_procedure); end

  # source://actionpack/6.1.7/lib/action_controller/metal/http_authentication.rb#419
  def authenticate_with_http_token(&login_procedure); end

  # source://actionpack/6.1.7/lib/action_controller/metal/http_authentication.rb#423
  def request_http_token_authentication(realm = T.unsafe(nil), message = T.unsafe(nil)); end
end

module ActionController::ImplicitRender
  include ::ActionController::BasicImplicitRender

  # source://actionpack/6.1.7/lib/action_controller/metal/implicit_render.rb#33
  def default_render; end

  # source://actionpack/6.1.7/lib/action_controller/metal/implicit_render.rb#52
  def method_for_action(action_name); end

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/implicit_render.rb#59
  def interactive_browser_request?; end
end

module ActionController::Instrumentation
  extend ::ActiveSupport::Concern
  include ::ActiveSupport::Benchmarkable
  include ::AbstractController::Logger

  mixes_in_class_methods ::ActionController::Instrumentation::ClassMethods

  # source://actionpack/6.1.7/lib/action_controller/metal/instrumentation.rb#19
  def process_action(*_arg0); end

  # source://actionpack/6.1.7/lib/action_controller/metal/instrumentation.rb#64
  def redirect_to(*_arg0); end

  # source://actionpack/6.1.7/lib/action_controller/metal/instrumentation.rb#43
  def render(*_arg0); end

  # source://actionpack/6.1.7/lib/action_controller/metal/instrumentation.rb#58
  def send_data(data, options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_controller/metal/instrumentation.rb#51
  def send_file(path, options = T.unsafe(nil)); end

  def view_runtime; end
  def view_runtime=(_arg0); end

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/instrumentation.rb#91
  def append_info_to_payload(payload); end

  # source://actionpack/6.1.7/lib/action_controller/metal/instrumentation.rb#85
  def cleanup_view_runtime; end

  # source://actionpack/6.1.7/lib/action_controller/metal/instrumentation.rb#75
  def halted_callback_hook(filter, _); end
end

module ActionController::Instrumentation::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/instrumentation.rb#99
  def log_process_action(payload); end
end

module ActionController::Logging
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionController::Logging::ClassMethods
end

module ActionController::Logging::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/logging.rb#15
  def log_at(level, **options); end
end

class ActionController::Metal < ::AbstractController::Base
  # source://actionpack/6.1.7/lib/action_controller/metal.rb#152
  def initialize; end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#149
  def content_type(*_arg0, &_arg1); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#149
  def content_type=(arg); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#143
  def controller_name; end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#187
  def dispatch(name, request, response); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#149
  def headers(*_arg0, &_arg1); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#149
  def location(*_arg0, &_arg1); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#149
  def location=(arg); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#149
  def media_type(*_arg0, &_arg1); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#212
  def middleware_stack; end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#212
  def middleware_stack=(_arg0); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#212
  def middleware_stack?; end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#159
  def params; end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#163
  def params=(val); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#183
  def performed?; end

  # source://activesupport/6.1.7/lib/active_support/core_ext/module/attr_internal.rb#33
  def request; end

  # source://activesupport/6.1.7/lib/active_support/core_ext/module/attr_internal.rb#33
  def request=(_arg0); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#208
  def reset_session; end

  # source://activesupport/6.1.7/lib/active_support/core_ext/module/attr_internal.rb#33
  def response; end

  # source://activesupport/6.1.7/lib/active_support/core_ext/module/attr_internal.rb#33
  def response=(_arg0); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#174
  def response_body=(body); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#149
  def response_code(*_arg0, &_arg1); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#148
  def session(*_arg0, &_arg1); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#199
  def set_request!(request); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#195
  def set_response!(response); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#149
  def status(*_arg0, &_arg1); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#149
  def status=(arg); end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#204
  def to_a; end

  # source://actionpack/6.1.7/lib/action_controller/metal.rb#170
  def url_for(string); end

  class << self
    # source://actionpack/6.1.7/lib/action_controller/metal.rb#234
    def action(name); end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#138
    def action_encoding_template(action); end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#128
    def controller_name; end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#250
    def dispatch(name, req, res); end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#214
    def inherited(base); end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#132
    def make_response!(request); end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#229
    def middleware; end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#212
    def middleware_stack; end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#212
    def middleware_stack=(value); end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#212
    def middleware_stack?; end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#222
    def use(*args, &block); end
  end
end

module ActionController::MimeResponds
  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#201
  def respond_to(*mimes); end
end

class ActionController::MimeResponds::Collector
  include ::AbstractController::Collector

  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#246
  def initialize(mimes, variant = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#253
  def all(*args, &block); end

  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#253
  def any(*args, &block); end

  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#271
  def any_response?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#262
  def custom(mime_type, &block); end

  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#244
  def format; end

  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#244
  def format=(_arg0); end

  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#288
  def negotiate_format(request); end

  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#275
  def response; end
end

class ActionController::MimeResponds::Collector::VariantCollector
  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#293
  def initialize(variant = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#298
  def all(*args, &block); end

  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#298
  def any(*args, &block); end

  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#309
  def method_missing(name, *args, &block); end

  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#313
  def variant; end

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/mime_responds.rb#322
  def variant_key; end
end

module ActionController::ParameterEncoding
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionController::ParameterEncoding::ClassMethods
end

module ActionController::ParameterEncoding::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/parameter_encoding.rb#18
  def action_encoding_template(action); end

  # source://actionpack/6.1.7/lib/action_controller/metal/parameter_encoding.rb#9
  def inherited(klass); end

  # source://actionpack/6.1.7/lib/action_controller/metal/parameter_encoding.rb#77
  def param_encoding(action, param, encoding); end

  # source://actionpack/6.1.7/lib/action_controller/metal/parameter_encoding.rb#14
  def setup_param_encode; end

  # source://actionpack/6.1.7/lib/action_controller/metal/parameter_encoding.rb#48
  def skip_parameter_encoding(action); end
end

module ActionController::ParamsWrapper
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::ParamsWrapper::ClassMethods

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#247
  def process_action(*_arg0); end

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#268
  def _extract_parameters(parameters); end

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#290
  def _perform_parameter_wrapping; end

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#264
  def _wrap_parameters(parameters); end

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#280
  def _wrapper_enabled?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#259
  def _wrapper_formats; end

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#254
  def _wrapper_key; end

  module GeneratedClassMethods
    def _wrapper_options; end
    def _wrapper_options=(value); end
    def _wrapper_options?; end
  end

  module GeneratedInstanceMethods
    def _wrapper_options; end
    def _wrapper_options=(value); end
    def _wrapper_options?; end
  end
end

module ActionController::ParamsWrapper::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#180
  def _set_wrapper_options(options); end

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#235
  def inherited(klass); end

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#211
  def wrap_parameters(name_or_model_or_options, options = T.unsafe(nil)); end
end

# source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#74
ActionController::ParamsWrapper::EXCLUDE_PARAMETERS = T.let(T.unsafe(nil), Array)

class ActionController::ParamsWrapper::Options < ::Struct
  include ::Mutex_m

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#89
  def initialize(name, format, include, exclude, klass, model); end

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#99
  def include; end

  # source://mutex_m/0.1.0/mutex_m.rb#92
  def lock; end

  # source://mutex_m/0.1.0/mutex_m.rb#82
  def locked?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#95
  def model; end

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#132
  def name; end

  # source://mutex_m/0.1.0/mutex_m.rb#77
  def synchronize(&block); end

  # source://mutex_m/0.1.0/mutex_m.rb#87
  def try_lock; end

  # source://mutex_m/0.1.0/mutex_m.rb#97
  def unlock; end

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#156
  def _default_wrap_model; end

  class << self
    # source://actionpack/6.1.7/lib/action_controller/metal/params_wrapper.rb#81
    def from_hash(hash); end
  end
end

module ActionController::PermissionsPolicy
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionController::PermissionsPolicy::ClassMethods
end

module ActionController::PermissionsPolicy::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/permissions_policy.rb#35
  def permissions_policy(**options, &block); end
end

module ActionController::Redirecting
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActiveSupport::Benchmarkable
  include ::AbstractController::Logger
  include ::ActionDispatch::Routing::UrlFor
  include ::AbstractController::UrlFor
  include ::ActionController::UrlFor

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::UrlFor::ClassMethods

  # source://actionpack/6.1.7/lib/action_controller/metal/redirecting.rb#96
  def _compute_redirect_to_location(request, options); end

  # source://actionpack/6.1.7/lib/action_controller/metal/redirecting.rb#90
  def redirect_back(fallback_location:, allow_other_host: T.unsafe(nil), **args); end

  # source://actionpack/6.1.7/lib/action_controller/metal/redirecting.rb#58
  def redirect_to(options = T.unsafe(nil), response_options = T.unsafe(nil)); end

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/redirecting.rb#117
  def _extract_redirect_to_status(options, response_options); end

  # source://actionpack/6.1.7/lib/action_controller/metal/redirecting.rb#127
  def _url_host_allowed?(url); end

  class << self
    # source://actionpack/6.1.7/lib/action_controller/metal/redirecting.rb#96
    def _compute_redirect_to_location(request, options); end
  end

  module GeneratedClassMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end

  module GeneratedInstanceMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end
end

module ActionController::Renderers
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::Renderers::ClassMethods

  # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#145
  def _render_to_body_with_renderer(options); end

  # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#171
  def _render_with_renderer_js(js, options); end

  # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#156
  def _render_with_renderer_json(json, options); end

  # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#176
  def _render_with_renderer_xml(xml, options); end

  # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#141
  def render_to_body(options); end

  class << self
    # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#91
    def _render_with_renderer_method_name(key); end

    # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#75
    def add(key, &block); end

    # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#85
    def remove(key); end
  end

  module GeneratedClassMethods
    def _renderers; end
    def _renderers=(value); end
    def _renderers?; end
  end

  module GeneratedInstanceMethods
    def _renderers; end
    def _renderers=(value); end
    def _renderers?; end
  end
end

module ActionController::Renderers::All
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActionController::Renderers

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::Renderers::ClassMethods

  module GeneratedClassMethods
    def _renderers; end
    def _renderers=(value); end
    def _renderers?; end
  end

  module GeneratedInstanceMethods
    def _renderers; end
    def _renderers=(value); end
    def _renderers?; end
  end
end

module ActionController::Renderers::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#129
  def use_renderer(*args); end

  # source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#129
  def use_renderers(*args); end
end

# source://actionpack/6.1.7/lib/action_controller/metal/renderers.rb#28
ActionController::Renderers::RENDERERS = T.let(T.unsafe(nil), Set)

module ActionController::Rendering
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionController::Rendering::ClassMethods

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#28
  def process_action(*_arg0); end

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#34
  def render(*args); end

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#51
  def render_to_body(options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#40
  def render_to_string(*_arg0); end

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#87
  def _normalize_args(action = T.unsafe(nil), options = T.unsafe(nil), &blk); end

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#94
  def _normalize_options(options); end

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#108
  def _normalize_text(options); end

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#117
  def _process_options(options); end

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#56
  def _process_variant(options); end

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#62
  def _render_in_priorities(options); end

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#70
  def _set_html_content_type; end

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#74
  def _set_rendered_content_type(format); end

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#80
  def _set_vary_header; end
end

module ActionController::Rendering::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#21
  def inherited(klass); end

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#11
  def render(*_arg0, &_arg1); end

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#15
  def renderer; end

  # source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#17
  def setup_renderer!; end
end

# source://actionpack/6.1.7/lib/action_controller/metal/rendering.rb#7
ActionController::Rendering::RENDER_FORMATS_IN_PRIORITY = T.let(T.unsafe(nil), Array)

module ActionController::RequestForgeryProtection
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::AbstractController::Helpers
  include ::ActiveSupport::Callbacks
  include ::AbstractController::Callbacks

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Helpers::ClassMethods
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker
  mixes_in_class_methods ::AbstractController::Callbacks::ClassMethods
  mixes_in_class_methods ::ActionController::RequestForgeryProtection::ClassMethods

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#295
  def any_authenticity_token_valid?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#381
  def compare_with_global_token(token, session); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#377
  def compare_with_real_token(token, session); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#415
  def csrf_token_hmac(session, identifier); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#486
  def decode_csrf_token(encoded_csrf_token); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#478
  def encode_csrf_token(csrf_token); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#435
  def form_authenticity_param; end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#307
  def form_authenticity_token(form_options: T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#470
  def generate_csrf_token; end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#411
  def global_csrf_token(session); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#242
  def handle_unverified_request; end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#267
  def mark_for_same_origin_verification!; end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#273
  def marked_for_same_origin_verification?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#370
  def mask_token(raw_token); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#314
  def masked_authenticity_token(session, form_options: T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#278
  def non_xhr_javascript_response?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#465
  def normalize_action_path(action_path); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#404
  def per_form_csrf_token(session, action_path, method); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#440
  def protect_against_forgery?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#399
  def real_csrf_token(session); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#302
  def request_authenticity_tokens; end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#362
  def unmask_token(masked_token); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#330
  def valid_authenticity_token?(session, encoded_masked_token); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#385
  def valid_per_form_csrf_token?(token, session); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#455
  def valid_request_origin?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#289
  def verified_request?; end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#227
  def verify_authenticity_token; end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#257
  def verify_same_origin_request; end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#423
  def xor_byte_strings(s1, s2); end

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end
end

# source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#282
ActionController::RequestForgeryProtection::AUTHENTICITY_TOKEN_LENGTH = T.let(T.unsafe(nil), Integer)

module ActionController::RequestForgeryProtection::ClassMethods
  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#131
  def protect_from_forgery(options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#145
  def skip_forgery_protection(options = T.unsafe(nil)); end

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#150
  def protection_method_class(name); end
end

# source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#444
ActionController::RequestForgeryProtection::NULL_ORIGIN_MESSAGE = T.let(T.unsafe(nil), String)

module ActionController::RequestForgeryProtection::ProtectionMethods; end

class ActionController::RequestForgeryProtection::ProtectionMethods::Exception
  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#206
  def initialize(controller); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#210
  def handle_unverified_request; end
end

class ActionController::RequestForgeryProtection::ProtectionMethods::NullSession
  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#159
  def initialize(controller); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#164
  def handle_unverified_request; end
end

class ActionController::RequestForgeryProtection::ProtectionMethods::NullSession::NullCookieJar < ::ActionDispatch::Cookies::CookieJar
  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#189
  def write(*_arg0); end
end

class ActionController::RequestForgeryProtection::ProtectionMethods::NullSession::NullSessionHash < ::Rack::Session::Abstract::SessionHash
  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#174
  def initialize(req); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#181
  def destroy; end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#183
  def exists?; end
end

class ActionController::RequestForgeryProtection::ProtectionMethods::ResetSession
  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#196
  def initialize(controller); end

  # source://actionpack/6.1.7/lib/action_controller/metal/request_forgery_protection.rb#200
  def handle_unverified_request; end
end

module ActionController::Rescue
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActiveSupport::Rescuable

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveSupport::Rescuable::ClassMethods

  # source://actionpack/6.1.7/lib/action_controller/metal/rescue.rb#16
  def show_detailed_exceptions?; end

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/rescue.rb#21
  def process_action(*_arg0); end

  module GeneratedClassMethods
    def rescue_handlers; end
    def rescue_handlers=(value); end
    def rescue_handlers?; end
  end

  module GeneratedInstanceMethods
    def rescue_handlers; end
    def rescue_handlers=(value); end
    def rescue_handlers?; end
  end
end

module ActionController::Streaming
  extend ::ActiveSupport::Concern

  private

  # source://actionpack/6.1.7/lib/action_controller/metal/streaming.rb#200
  def _process_options(options); end

  # source://actionpack/6.1.7/lib/action_controller/metal/streaming.rb#214
  def _render_template(options); end
end

module ActionController::StrongParameters
  # source://actionpack/6.1.7/lib/action_controller/metal/strong_parameters.rb#1186
  def params; end

  # source://actionpack/6.1.7/lib/action_controller/metal/strong_parameters.rb#1193
  def params=(value); end
end

module ActionController::UrlFor
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActionDispatch::Routing::UrlFor
  include ::AbstractController::UrlFor

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::UrlFor::ClassMethods

  # source://actionpack/6.1.7/lib/action_controller/metal/url_for.rb#30
  def url_options; end

  module GeneratedClassMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end

  module GeneratedInstanceMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end
end

module ActionDispatch::Cookies::ChainedCookieJars
  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#245
  def encrypted; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#211
  def permanent; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#227
  def signed; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#251
  def signed_or_encrypted; end

  private

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#274
  def encrypted_cookie_cipher; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#268
  def prepare_upgrade_legacy_hmac_aes_cbc_cookies?; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#278
  def signed_cookie_digest; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#261
  def upgrade_legacy_hmac_aes_cbc_cookies?; end
end

class ActionDispatch::Cookies::CookieJar
  include ::ActionDispatch::Cookies::ChainedCookieJars
  include ::Enumerable

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#308
  def initialize(request); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#329
  def [](name); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#363
  def []=(name, options); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#417
  def always_write_cookie; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#417
  def always_write_cookie=(val); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#407
  def clear(options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#318
  def commit!; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#316
  def committed?; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#386
  def delete(name, options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#400
  def deleted?(name, options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#324
  def each(&block); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#333
  def fetch(name, *args, &block); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#337
  def has_key?(name); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#337
  def key?(name); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#306
  def request; end

  def to_hash(*_arg0); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#357
  def to_header; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#345
  def update(other_hash); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#350
  def update_cookies_from_jar; end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#411
  def write(headers); end

  private

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#420
  def escape(string); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#441
  def handle_options(options); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#424
  def make_set_cookie_header(header); end

  # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#437
  def write_cookie?(cookie); end

  class << self
    # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#417
    def always_write_cookie; end

    # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#417
    def always_write_cookie=(val); end

    # source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#300
    def build(req, cookies); end
  end
end

# source://actionpack/6.1.7/lib/action_dispatch/middleware/cookies.rb#298
ActionDispatch::Cookies::CookieJar::DOMAIN_REGEXP = T.let(T.unsafe(nil), Regexp)

module ActionDispatch::Routing::PolymorphicRoutes
  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#153
  def edit_polymorphic_path(record_or_hash, options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#149
  def edit_polymorphic_url(record_or_hash, options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#153
  def new_polymorphic_path(record_or_hash, options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#149
  def new_polymorphic_url(record_or_hash, options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#124
  def polymorphic_path(record_or_hash_or_array, options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#101
  def polymorphic_url(record_or_hash_or_array, options = T.unsafe(nil)); end

  private

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#168
  def polymorphic_mapping(record); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#164
  def polymorphic_path_for_action(action, record_or_hash, options); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#160
  def polymorphic_url_for_action(action, record_or_hash, options); end
end

class ActionDispatch::Routing::PolymorphicRoutes::HelperMethodBuilder
  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#239
  def initialize(key_strategy, prefix, suffix); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#253
  def handle_class(klass); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#257
  def handle_class_call(target, klass); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#284
  def handle_list(list); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#261
  def handle_model(record); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#275
  def handle_model_call(target, record); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#245
  def handle_string(record); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#249
  def handle_string_call(target, str); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#237
  def prefix; end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#237
  def suffix; end

  private

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#338
  def get_method_for_class(klass); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#343
  def get_method_for_string(str); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#330
  def polymorphic_mapping(target, record); end

  class << self
    # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#187
    def build(action, type); end

    # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#179
    def get(action, type); end

    # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#185
    def path; end

    # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#201
    def plural(prefix, suffix); end

    # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#205
    def polymorphic_method(recipient, record_or_hash_or_array, action, type, options); end

    # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#197
    def singular(prefix, suffix); end

    # source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#184
    def url; end
  end
end

# source://actionpack/6.1.7/lib/action_dispatch/routing/polymorphic_routes.rb#177
ActionDispatch::Routing::PolymorphicRoutes::HelperMethodBuilder::CACHE = T.let(T.unsafe(nil), Hash)

module ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods

  # source://actionpack/6.1.7/lib/action_dispatch/routing/url_for.rb#106
  def initialize(*_arg0); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/url_for.rb#174
  def full_url_for(options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/url_for.rb#214
  def route_for(name, *args); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/url_for.rb#170
  def url_for(options = T.unsafe(nil)); end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/url_for.rb#115
  def url_options; end

  protected

  # source://actionpack/6.1.7/lib/action_dispatch/routing/url_for.rb#219
  def optimize_routes_generation?; end

  private

  # source://actionpack/6.1.7/lib/action_dispatch/routing/url_for.rb#231
  def _routes_context; end

  # source://actionpack/6.1.7/lib/action_dispatch/routing/url_for.rb#224
  def _with_routes(routes); end

  module GeneratedClassMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end

  module GeneratedInstanceMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end
end

module ActionView::Layouts
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActionView::ViewPaths
  include ::ActionView::Rendering

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionView::ViewPaths::ClassMethods
  mixes_in_class_methods ::ActionView::Rendering::ClassMethods
  mixes_in_class_methods ::ActionView::Layouts::ClassMethods

  # source://actionview/6.1.7/lib/action_view/layouts.rb#358
  def initialize(*_arg0); end

  # source://actionview/6.1.7/lib/action_view/layouts.rb#215
  def _layout_conditions(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/layouts.rb#347
  def _normalize_options(options); end

  def action_has_layout=(_arg0); end

  # source://actionview/6.1.7/lib/action_view/layouts.rb#369
  def action_has_layout?; end

  private

  # source://actionview/6.1.7/lib/action_view/layouts.rb#374
  def _conditional_layout?; end

  # source://actionview/6.1.7/lib/action_view/layouts.rb#412
  def _default_layout(lookup_context, formats, require_layout = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/layouts.rb#427
  def _include_layout?(options); end

  # source://actionview/6.1.7/lib/action_view/layouts.rb#379
  def _layout(*_arg0); end

  # source://actionview/6.1.7/lib/action_view/layouts.rb#385
  def _layout_for_option(name); end

  # source://actionview/6.1.7/lib/action_view/layouts.rb#398
  def _normalize_layout(value); end

  module GeneratedClassMethods
    def _layout; end
    def _layout=(value); end
    def _layout?; end
    def _layout_conditions; end
    def _layout_conditions=(value); end
    def _layout_conditions?; end
  end

  module GeneratedInstanceMethods; end
end

module ActionView::Layouts::ClassMethods
  # source://actionview/6.1.7/lib/action_view/layouts.rb#280
  def _write_layout_method; end

  # source://actionview/6.1.7/lib/action_view/layouts.rb#218
  def inherited(klass); end

  # source://actionview/6.1.7/lib/action_view/layouts.rb#266
  def layout(layout, conditions = T.unsafe(nil)); end

  private

  # source://actionview/6.1.7/lib/action_view/layouts.rb#342
  def _implied_layout_name; end
end

module ActionView::Layouts::ClassMethods::LayoutConditions
  private

  # source://actionview/6.1.7/lib/action_view/layouts.rb#233
  def _conditional_layout?; end
end

module ActionView::Rendering
  extend ::ActiveSupport::Concern
  include ::ActionView::ViewPaths

  mixes_in_class_methods ::ActionView::ViewPaths::ClassMethods
  mixes_in_class_methods ::ActionView::Rendering::ClassMethods

  # source://actionview/6.1.7/lib/action_view/rendering.rb#31
  def initialize; end

  # source://actionview/6.1.7/lib/action_view/rendering.rb#37
  def process(*_arg0); end

  # source://actionview/6.1.7/lib/action_view/rendering.rb#101
  def render_to_body(options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/rendering.rb#29
  def rendered_format; end

  # source://actionview/6.1.7/lib/action_view/rendering.rb#91
  def view_context; end

  # source://actionview/6.1.7/lib/action_view/rendering.rb#77
  def view_context_class; end

  # source://actionview/6.1.7/lib/action_view/rendering.rb#96
  def view_renderer; end

  private

  # source://actionview/6.1.7/lib/action_view/rendering.rb#134
  def _normalize_args(action = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/6.1.7/lib/action_view/rendering.rb#158
  def _normalize_options(options); end

  # source://actionview/6.1.7/lib/action_view/rendering.rb#127
  def _process_format(format); end

  # source://actionview/6.1.7/lib/action_view/rendering.rb#108
  def _render_template(options); end
end

module ActionView::Rendering::ClassMethods
  # source://actionview/6.1.7/lib/action_view/rendering.rb#48
  def _helpers; end

  # source://actionview/6.1.7/lib/action_view/rendering.rb#45
  def _routes; end

  # source://actionview/6.1.7/lib/action_view/rendering.rb#51
  def build_view_context_class(klass, supports_path, routes, helpers); end

  # source://actionview/6.1.7/lib/action_view/rendering.rb#64
  def view_context_class; end
end

module ActionView::ViewPaths
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionView::ViewPaths::ClassMethods

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#90
  def _prefixes; end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#11
  def any_templates?(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#112
  def append_view_path(path); end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#102
  def details_for_lookup; end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#11
  def formats(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#11
  def formats=(arg); end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#11
  def locale(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#11
  def locale=(arg); end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#97
  def lookup_context; end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#122
  def prepend_view_path(path); end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#11
  def template_exists?(*_arg0, &_arg1); end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#11
  def view_paths(*_arg0, &_arg1); end

  class << self
    # source://actionview/6.1.7/lib/action_view/view_paths.rb#84
    def all_view_paths; end

    # source://actionview/6.1.7/lib/action_view/view_paths.rb#76
    def get_view_paths(klass); end

    # source://actionview/6.1.7/lib/action_view/view_paths.rb#80
    def set_view_paths(klass, paths); end
  end
end

module ActionView::ViewPaths::ClassMethods
  # source://actionview/6.1.7/lib/action_view/view_paths.rb#23
  def _prefixes; end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#15
  def _view_paths; end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#19
  def _view_paths=(paths); end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#37
  def append_view_path(path); end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#47
  def prepend_view_path(path); end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#52
  def view_paths; end

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#61
  def view_paths=(paths); end

  private

  # source://actionview/6.1.7/lib/action_view/view_paths.rb#68
  def local_prefixes; end
end

module ActiveSupport::Autoload
  # source://activesupport/6.1.7/lib/active_support/dependencies/autoload.rb#37
  def autoload(const_name, path = T.unsafe(nil)); end

  # source://activesupport/6.1.7/lib/active_support/dependencies/autoload.rb#57
  def autoload_at(path); end

  # source://activesupport/6.1.7/lib/active_support/dependencies/autoload.rb#50
  def autoload_under(path); end

  # source://activesupport/6.1.7/lib/active_support/dependencies/autoload.rb#75
  def autoloads; end

  # source://activesupport/6.1.7/lib/active_support/dependencies/autoload.rb#64
  def eager_autoload; end

  # source://activesupport/6.1.7/lib/active_support/dependencies/autoload.rb#71
  def eager_load!; end

  class << self
    # source://activesupport/6.1.7/lib/active_support/dependencies/autoload.rb#28
    def extended(base); end
  end
end

module ActiveSupport::Benchmarkable
  # source://activesupport/6.1.7/lib/active_support/benchmarkable.rb#37
  def benchmark(message = T.unsafe(nil), options = T.unsafe(nil)); end
end

module ActiveSupport::Callbacks
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#94
  def run_callbacks(kind); end

  private

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#146
  def halted_callback_hook(filter, name); end

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
  end
end

# source://activesupport/6.1.7/lib/active_support/callbacks.rb#70
ActiveSupport::Callbacks::CALLBACK_FILTER_TYPES = T.let(T.unsafe(nil), Array)

class ActiveSupport::Callbacks::CallTemplate
  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#388
  def initialize(target, method, arguments, block); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#408
  def expand(target, value, block); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#433
  def inverted_lambda; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#424
  def make_lambda; end

  class << self
    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#448
    def build(filter, callback); end
  end
end

class ActiveSupport::Callbacks::Callback
  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#294
  def initialize(name, filter, kind, options, chain_config); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#333
  def apply(callback_sequence); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#292
  def chain_config; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#347
  def current_scopes; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#323
  def duplicates?(other); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#304
  def filter; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#291
  def kind; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#291
  def kind=(_arg0); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#319
  def matches?(_kind, _filter); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#307
  def merge_conditional_options(chain, if_option:, unless_option:); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#291
  def name; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#291
  def name=(_arg0); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#305
  def raw_filter; end

  private

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#355
  def check_conditionals(conditionals); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#370
  def compute_identifier(filter); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#379
  def conditions_lambdas; end

  class << self
    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#280
    def build(chain, filter, kind, options); end
  end
end

class ActiveSupport::Callbacks::CallbackChain
  include ::Enumerable

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#525
  def initialize(name, config); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#571
  def append(*callbacks); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#550
  def clear; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#562
  def compile; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#523
  def config; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#545
  def delete(o); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#536
  def each(&block); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#538
  def empty?; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#537
  def index(o); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#540
  def insert(index, o); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#523
  def name; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#575
  def prepend(*callbacks); end

  protected

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#580
  def chain; end

  private

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#583
  def append_one(callback); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#600
  def default_terminator; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#556
  def initialize_copy(other); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#589
  def prepend_one(callback); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#595
  def remove_duplicates(callback); end
end

class ActiveSupport::Callbacks::CallbackSequence
  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#474
  def initialize(nested = T.unsafe(nil), call_template = T.unsafe(nil), user_conditions = T.unsafe(nil)); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#488
  def after(&after); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#493
  def around(call_template, user_conditions); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#483
  def before(&before); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#507
  def expand_call_template(arg, block); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#503
  def final?; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#515
  def invoke_after(arg); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#511
  def invoke_before(arg); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#501
  def nested; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#497
  def skip?(arg); end
end

module ActiveSupport::Callbacks::ClassMethods
  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#622
  def __update_callbacks(name); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#812
  def define_callbacks(*names); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#613
  def normalize_callback_params(filters, block); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#722
  def reset_callbacks(name); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#673
  def set_callback(name, *filter_list, &block); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#697
  def skip_callback(name, *filter_list, &block); end

  protected

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#843
  def get_callbacks(name); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#852
  def set_callbacks(name, callbacks); end
end

module ActiveSupport::Callbacks::Conditionals; end

class ActiveSupport::Callbacks::Conditionals::Value
  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#151
  def initialize(&block); end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#154
  def call(target, value); end
end

module ActiveSupport::Callbacks::Filters; end

class ActiveSupport::Callbacks::Filters::After
  class << self
    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#212
    def build(callback_sequence, user_callback, user_conditions, chain_config); end

    private

    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#254
    def conditional(callback_sequence, user_callback, user_conditions); end

    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#243
    def halting(callback_sequence, user_callback); end

    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#228
    def halting_and_conditional(callback_sequence, user_callback, user_conditions); end

    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#268
    def simple(callback_sequence, user_callback); end
  end
end

class ActiveSupport::Callbacks::Filters::Before
  class << self
    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#162
    def build(callback_sequence, user_callback, user_conditions, chain_config, filter, name); end

    private

    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#191
    def halting(callback_sequence, user_callback, halted_lambda, filter, name); end

    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#172
    def halting_and_conditional(callback_sequence, user_callback, user_conditions, halted_lambda, filter, name); end
  end
end

class ActiveSupport::Callbacks::Filters::Environment < ::Struct
  def halted; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#159
  def halted=(_); end

  def target; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#159
  def target=(_); end

  def value; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#159
  def value=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

module ActiveSupport::Concern
  # source://activesupport/6.1.7/lib/active_support/concern.rb#127
  def append_features(base); end

  # source://activesupport/6.1.7/lib/active_support/concern.rb#207
  def class_methods(&class_methods_module_definition); end

  # source://activesupport/6.1.7/lib/active_support/concern.rb#156
  def included(base = T.unsafe(nil), &block); end

  # source://activesupport/6.1.7/lib/active_support/concern.rb#140
  def prepend_features(base); end

  # source://activesupport/6.1.7/lib/active_support/concern.rb#173
  def prepended(base = T.unsafe(nil), &block); end

  class << self
    # source://activesupport/6.1.7/lib/active_support/concern.rb#123
    def extended(base); end
  end
end

class ActiveSupport::Concern::MultipleIncludedBlocks < ::StandardError
  # source://activesupport/6.1.7/lib/active_support/concern.rb#112
  def initialize; end
end

class ActiveSupport::Concern::MultiplePrependBlocks < ::StandardError
  # source://activesupport/6.1.7/lib/active_support/concern.rb#118
  def initialize; end
end

module ActiveSupport::Configurable
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActiveSupport::Configurable::ClassMethods

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#142
  def config; end
end

module ActiveSupport::Configurable::ClassMethods
  # source://activesupport/6.1.7/lib/active_support/configurable.rb#28
  def config; end

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#37
  def configure; end

  private

  # source://activesupport/6.1.7/lib/active_support/configurable.rb#107
  def config_accessor(*names, instance_reader: T.unsafe(nil), instance_writer: T.unsafe(nil), instance_accessor: T.unsafe(nil)); end
end

class ActiveSupport::Configurable::Configuration < ::ActiveSupport::InheritableOptions
  # source://activesupport/6.1.7/lib/active_support/configurable.rb#13
  def compile_methods!; end

  class << self
    # source://activesupport/6.1.7/lib/active_support/configurable.rb#18
    def compile_methods!(keys); end
  end
end

module ActiveSupport::DescendantsTracker
  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#65
  def descendants; end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#60
  def direct_descendants; end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#55
  def inherited(base); end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#60
  def subclasses; end

  class << self
    # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#24
    def clear; end

    # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#18
    def descendants(klass); end

    # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#12
    def direct_descendants(klass); end

    # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#40
    def store_inherited(klass, descendant); end

    # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#12
    def subclasses(klass); end

    private

    # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#45
    def accumulate_descendants(klass, acc); end
  end
end

class ActiveSupport::DescendantsTracker::DescendantsArray
  include ::Enumerable

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#73
  def initialize; end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#81
  def <<(klass); end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#99
  def cleanup!; end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#85
  def each; end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#95
  def refs_size; end

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#103
  def reject!; end

  private

  # source://activesupport/6.1.7/lib/active_support/descendants_tracker.rb#77
  def initialize_copy(orig); end
end

class ActiveSupport::InheritableOptions < ::ActiveSupport::OrderedOptions
  # source://activesupport/6.1.7/lib/active_support/ordered_options.rb#80
  def initialize(parent = T.unsafe(nil)); end

  # source://activesupport/6.1.7/lib/active_support/ordered_options.rb#91
  def inheritable_copy; end
end

class ActiveSupport::LogSubscriber < ::ActiveSupport::Subscriber
  # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#80
  def colorize_logging; end

  # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#80
  def colorize_logging=(val); end

  # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#125
  def debug(progname = T.unsafe(nil), &block); end

  # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#125
  def error(progname = T.unsafe(nil), &block); end

  # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#125
  def fatal(progname = T.unsafe(nil), &block); end

  # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#114
  def finish(name, id, payload); end

  # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#125
  def info(progname = T.unsafe(nil), &block); end

  # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#106
  def logger; end

  # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#110
  def start(name, id, payload); end

  # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#125
  def unknown(progname = T.unsafe(nil), &block); end

  # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#125
  def warn(progname = T.unsafe(nil), &block); end

  private

  # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#135
  def color(text, color, bold = T.unsafe(nil)); end

  class << self
    # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#80
    def colorize_logging; end

    # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#80
    def colorize_logging=(val); end

    # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#96
    def flush_all!; end

    # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#91
    def log_subscribers; end

    # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#83
    def logger; end

    # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#89
    def logger=(_arg0); end

    private

    # source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#101
    def fetch_public_methods(subscriber, inherit_all); end
  end
end

# source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#71
ActiveSupport::LogSubscriber::BLACK = T.let(T.unsafe(nil), String)

# source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#75
ActiveSupport::LogSubscriber::BLUE = T.let(T.unsafe(nil), String)

# source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#68
ActiveSupport::LogSubscriber::BOLD = T.let(T.unsafe(nil), String)

# source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#67
ActiveSupport::LogSubscriber::CLEAR = T.let(T.unsafe(nil), String)

# source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#77
ActiveSupport::LogSubscriber::CYAN = T.let(T.unsafe(nil), String)

# source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#73
ActiveSupport::LogSubscriber::GREEN = T.let(T.unsafe(nil), String)

# source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#76
ActiveSupport::LogSubscriber::MAGENTA = T.let(T.unsafe(nil), String)

# source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#72
ActiveSupport::LogSubscriber::RED = T.let(T.unsafe(nil), String)

# source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#78
ActiveSupport::LogSubscriber::WHITE = T.let(T.unsafe(nil), String)

# source://activesupport/6.1.7/lib/active_support/log_subscriber.rb#74
ActiveSupport::LogSubscriber::YELLOW = T.let(T.unsafe(nil), String)

class ActiveSupport::OrderedOptions < ::Hash
  # source://activesupport/6.1.7/lib/active_support/ordered_options.rb#39
  def [](key); end

  # source://activesupport/6.1.7/lib/active_support/ordered_options.rb#35
  def []=(key, value); end

  # source://activesupport/6.1.7/lib/active_support/ordered_options.rb#62
  def extractable_options?; end

  # source://activesupport/6.1.7/lib/active_support/ordered_options.rb#66
  def inspect; end

  # source://activesupport/6.1.7/lib/active_support/ordered_options.rb#43
  def method_missing(name, *args); end

  protected

  def _get(_arg0); end

  private

  # source://activesupport/6.1.7/lib/active_support/ordered_options.rb#58
  def respond_to_missing?(name, include_private); end
end

module ActiveSupport::Rescuable
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveSupport::Rescuable::ClassMethods

  # source://activesupport/6.1.7/lib/active_support/rescuable.rb#170
  def handler_for_rescue(exception); end

  # source://activesupport/6.1.7/lib/active_support/rescuable.rb#164
  def rescue_with_handler(exception); end

  module GeneratedClassMethods
    def rescue_handlers; end
    def rescue_handlers=(value); end
    def rescue_handlers?; end
  end

  module GeneratedInstanceMethods
    def rescue_handlers; end
    def rescue_handlers=(value); end
    def rescue_handlers?; end
  end
end

module ActiveSupport::Rescuable::ClassMethods
  # source://activesupport/6.1.7/lib/active_support/rescuable.rb#103
  def handler_for_rescue(exception, object: T.unsafe(nil)); end

  # source://activesupport/6.1.7/lib/active_support/rescuable.rb#51
  def rescue_from(*klasses, with: T.unsafe(nil), &block); end

  # source://activesupport/6.1.7/lib/active_support/rescuable.rb#88
  def rescue_with_handler(exception, object: T.unsafe(nil), visited_exceptions: T.unsafe(nil)); end

  private

  # source://activesupport/6.1.7/lib/active_support/rescuable.rb#137
  def constantize_rescue_handler_class(class_or_name); end

  # source://activesupport/6.1.7/lib/active_support/rescuable.rb#122
  def find_rescue_handler(exception); end
end

class ActiveSupport::Subscriber
  # source://activesupport/6.1.7/lib/active_support/subscriber.rb#129
  def initialize; end

  # source://activesupport/6.1.7/lib/active_support/subscriber.rb#144
  def finish(name, id, payload); end

  # source://activesupport/6.1.7/lib/active_support/subscriber.rb#127
  def patterns; end

  # source://activesupport/6.1.7/lib/active_support/subscriber.rb#135
  def start(name, id, payload); end

  private

  # source://activesupport/6.1.7/lib/active_support/subscriber.rb#154
  def event_stack; end

  class << self
    # source://activesupport/6.1.7/lib/active_support/subscriber.rb#34
    def attach_to(namespace, subscriber = T.unsafe(nil), notifier = T.unsafe(nil), inherit_all: T.unsafe(nil)); end

    # source://activesupport/6.1.7/lib/active_support/subscriber.rb#49
    def detach_from(namespace, notifier = T.unsafe(nil)); end

    # source://activesupport/6.1.7/lib/active_support/subscriber.rb#68
    def method_added(event); end

    # source://activesupport/6.1.7/lib/active_support/subscriber.rb#77
    def subscribers; end

    private

    # source://activesupport/6.1.7/lib/active_support/subscriber.rb#84
    def add_event_subscriber(event); end

    # source://activesupport/6.1.7/lib/active_support/subscriber.rb#122
    def fetch_public_methods(subscriber, inherit_all); end

    # source://activesupport/6.1.7/lib/active_support/subscriber.rb#106
    def find_attached_subscriber; end

    # source://activesupport/6.1.7/lib/active_support/subscriber.rb#110
    def invalid_event?(event); end

    # source://activesupport/6.1.7/lib/active_support/subscriber.rb#82
    def namespace; end

    # source://activesupport/6.1.7/lib/active_support/subscriber.rb#82
    def notifier; end

    # source://activesupport/6.1.7/lib/active_support/subscriber.rb#118
    def pattern_subscribed?(pattern); end

    # source://activesupport/6.1.7/lib/active_support/subscriber.rb#114
    def prepare_pattern(event); end

    # source://activesupport/6.1.7/lib/active_support/subscriber.rb#95
    def remove_event_subscriber(event); end

    # source://activesupport/6.1.7/lib/active_support/subscriber.rb#82
    def subscriber; end
  end
end

class Rack::Session::Abstract::SessionHash
  include ::Enumerable

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#62
  def initialize(store, req); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#82
  def [](key); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#108
  def []=(key, value); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#114
  def clear; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#140
  def delete(key); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#119
  def destroy; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#87
  def dig(key, *keys); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#77
  def each(&block); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#163
  def empty?; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#153
  def exists?; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#92
  def fetch(key, default = T.unsafe(nil), &block); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#101
  def has_key?(key); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#68
  def id; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#46
  def id=(_arg0); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#101
  def include?(key); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#145
  def inspect; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#101
  def key?(key); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#168
  def keys; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#159
  def loaded?; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#129
  def merge!(hash); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#73
  def options; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#135
  def replace(hash); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#108
  def store(key, value); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#124
  def to_hash; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#129
  def update(hash); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#173
  def values; end

  private

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#188
  def load!; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#180
  def load_for_read!; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#184
  def load_for_write!; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#194
  def stringify_keys(other); end

  class << self
    # source://rack/2.2.4/lib/rack/session/abstract/id.rb#50
    def find(req); end

    # source://rack/2.2.4/lib/rack/session/abstract/id.rb#54
    def set(req, session); end

    # source://rack/2.2.4/lib/rack/session/abstract/id.rb#58
    def set_options(req, options); end
  end
end

# source://rack/2.2.4/lib/rack/session/abstract/id.rb#48
Rack::Session::Abstract::SessionHash::Unspecified = T.let(T.unsafe(nil), Object)

module Rails
  extend ::ActiveSupport::Autoload

  class << self
    # source://railties/6.1.7/lib/rails.rb#38
    def app_class; end

    # source://railties/6.1.7/lib/rails.rb#38
    def app_class=(_arg0); end

    # source://railties/6.1.7/lib/rails.rb#39
    def application; end

    # source://railties/6.1.7/lib/rails.rb#37
    def application=(_arg0); end

    # source://railties/6.1.7/lib/rails.rb#112
    def autoloaders; end

    # source://railties/6.1.7/lib/rails.rb#50
    def backtrace_cleaner; end

    # source://railties/6.1.7/lib/rails.rb#38
    def cache; end

    # source://railties/6.1.7/lib/rails.rb#38
    def cache=(_arg0); end

    # source://railties/6.1.7/lib/rails.rb#46
    def configuration; end

    # source://railties/6.1.7/lib/rails.rb#72
    def env; end

    # source://railties/6.1.7/lib/rails.rb#79
    def env=(environment); end

    # source://railties/6.1.7/lib/rails/gem_version.rb#5
    def gem_version; end

    # source://railties/6.1.7/lib/rails.rb#92
    def groups(*groups); end

    # source://railties/6.1.7/lib/rails.rb#43
    def initialize!(*_arg0, &_arg1); end

    # source://railties/6.1.7/lib/rails.rb#43
    def initialized?(*_arg0, &_arg1); end

    # source://railties/6.1.7/lib/rails.rb#38
    def logger; end

    # source://railties/6.1.7/lib/rails.rb#38
    def logger=(_arg0); end

    # source://railties/6.1.7/lib/rails.rb#108
    def public_path; end

    # source://railties/6.1.7/lib/rails.rb#63
    def root; end

    # source://railties/6.1.7/lib/rails/version.rb#7
    def version; end
  end
end

class Rails::Application < ::Rails::Engine
  # source://railties/6.1.7/lib/rails/application.rb#128
  def initialize(initial_variable_values = T.unsafe(nil), &block); end

  # source://railties/6.1.7/lib/rails/application.rb#119
  def assets; end

  # source://railties/6.1.7/lib/rails/application.rb#119
  def assets=(_arg0); end

  # source://railties/6.1.7/lib/rails/engine.rb#520
  def build_middleware_stack; end

  # source://railties/6.1.7/lib/rails/application.rb#402
  def config; end

  # source://railties/6.1.7/lib/rails/application.rb#406
  def config=(_arg0); end

  # source://railties/6.1.7/lib/rails/application.rb#241
  def config_for(name, env: T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/application.rb#322
  def console(&blk); end

  # source://railties/6.1.7/lib/rails/application.rb#450
  def credentials; end

  # source://railties/6.1.7/lib/rails/application.rb#422
  def credentials=(_arg0); end

  # source://railties/6.1.7/lib/rails/application.rb#123
  def default_url_options(*_arg0, &_arg1); end

  # source://railties/6.1.7/lib/rails/application.rb#123
  def default_url_options=(arg); end

  # source://railties/6.1.7/lib/rails/application.rb#515
  def eager_load!; end

  # source://railties/6.1.7/lib/rails/application.rb#481
  def encrypted(path, key_path: T.unsafe(nil), env_key: T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/application.rb#268
  def env_config; end

  # source://railties/6.1.7/lib/rails/application.rb#121
  def executor; end

  # source://railties/6.1.7/lib/rails/application.rb#328
  def generators(&blk); end

  # source://railties/6.1.7/lib/rails/application.rb#494
  def helpers_paths; end

  # source://railties/6.1.7/lib/rails/application.rb#389
  def initialize!(group = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/application.rb#149
  def initialized?; end

  # source://railties/6.1.7/lib/rails/application.rb#310
  def initializer(name, opts = T.unsafe(nil), &block); end

  # source://railties/6.1.7/lib/rails/application.rb#396
  def initializers; end

  # source://railties/6.1.7/lib/rails/application.rb#339
  def isolate_namespace(mod); end

  # source://railties/6.1.7/lib/rails/application.rb#173
  def key_generator; end

  # source://railties/6.1.7/lib/rails/application.rb#199
  def message_verifier(verifier_name); end

  # source://railties/6.1.7/lib/rails/application.rb#510
  def migration_railties; end

  # source://railties/6.1.7/lib/rails/application.rb#303
  def rake_tasks(&block); end

  # source://railties/6.1.7/lib/rails/application.rb#168
  def reload_routes!; end

  # source://railties/6.1.7/lib/rails/application.rb#121
  def reloader; end

  # source://railties/6.1.7/lib/rails/application.rb#121
  def reloaders; end

  # source://railties/6.1.7/lib/rails/application.rb#365
  def require_environment!; end

  # source://railties/6.1.7/lib/rails/application.rb#370
  def routes_reloader; end

  # source://railties/6.1.7/lib/rails/application.rb#153
  def run_load_hooks!; end

  # source://railties/6.1.7/lib/rails/application.rb#316
  def runner(&blk); end

  # source://railties/6.1.7/lib/rails/application.rb#119
  def sandbox; end

  # source://railties/6.1.7/lib/rails/application.rb#119
  def sandbox=(_arg0); end

  # source://railties/6.1.7/lib/rails/application.rb#119
  def sandbox?; end

  # source://railties/6.1.7/lib/rails/application.rb#433
  def secret_key_base; end

  # source://railties/6.1.7/lib/rails/application.rb#408
  def secrets; end

  # source://railties/6.1.7/lib/rails/application.rb#422
  def secrets=(_arg0); end

  # source://railties/6.1.7/lib/rails/application.rb#334
  def server(&blk); end

  # source://railties/6.1.7/lib/rails/application.rb#490
  def to_app; end

  # source://railties/6.1.7/lib/rails/application.rb#377
  def watchable_args; end

  protected

  # source://railties/6.1.7/lib/rails/application.rb#592
  def default_middleware_stack; end

  # source://railties/6.1.7/lib/rails/application.rb#558
  def ordered_railties; end

  # source://railties/6.1.7/lib/rails/application.rb#580
  def railties_initializers(current); end

  # source://railties/6.1.7/lib/rails/application.rb#547
  def run_console_blocks(app); end

  # source://railties/6.1.7/lib/rails/application.rb#537
  def run_generators_blocks(app); end

  # source://railties/6.1.7/lib/rails/application.rb#542
  def run_runner_blocks(app); end

  # source://railties/6.1.7/lib/rails/application.rb#552
  def run_server_blocks(app); end

  # source://railties/6.1.7/lib/rails/application.rb#526
  def run_tasks_blocks(app); end

  # source://railties/6.1.7/lib/rails/application.rb#597
  def validate_secret_key_base(secret_key_base); end

  private

  # source://railties/6.1.7/lib/rails/application.rb#631
  def build_middleware; end

  # source://railties/6.1.7/lib/rails/application.rb#624
  def build_request(env); end

  # source://railties/6.1.7/lib/rails/application.rb#635
  def coerce_same_site_protection(protection); end

  # source://railties/6.1.7/lib/rails/application.rb#608
  def generate_development_secret; end

  class << self
    # source://railties/6.1.7/lib/rails/application.rb#358
    def add_lib_to_load_path!(root); end

    # source://railties/6.1.7/lib/rails/application.rb#103
    def create(initial_variable_values = T.unsafe(nil), &block); end

    # source://railties/6.1.7/lib/rails/application.rb#107
    def find_root(from); end

    # source://railties/6.1.7/lib/rails/application.rb#92
    def inherited(base); end

    # source://railties/6.1.7/lib/rails/application.rb#99
    def instance; end
  end
end

module Rails::Application::Bootstrap
  include ::Rails::Initializable
  extend ::Rails::Initializable::ClassMethods
end

class Rails::Application::Configuration < ::Rails::Engine::Configuration
  # source://railties/6.1.7/lib/rails/application/configuration.rb#29
  def initialize(*_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def add_autoload_paths_to_load_path; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def add_autoload_paths_to_load_path=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def allow_concurrency; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def allow_concurrency=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#342
  def annotations; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#27
  def api_only; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#223
  def api_only=(value); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def asset_host; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def asset_host=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def autoflush_log; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def autoflush_log=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#27
  def autoloader; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#362
  def autoloader=(autoloader); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def beginning_of_week; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def beginning_of_week=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def cache_classes; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def cache_classes=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def cache_store; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def cache_store=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#302
  def colorize_logging; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#306
  def colorize_logging=(val); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def consider_all_requests_local; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def consider_all_requests_local=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def console; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def console=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#346
  def content_security_policy(&block); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def content_security_policy_nonce_directives; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def content_security_policy_nonce_directives=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def content_security_policy_nonce_generator; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def content_security_policy_nonce_generator=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def content_security_policy_report_only; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def content_security_policy_report_only=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def credentials; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def credentials=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#277
  def database_configuration; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#230
  def debug_exception_response_format; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#234
  def debug_exception_response_format=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#374
  def default_log_file; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def disable_sandbox; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def disable_sandbox=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def eager_load; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def eager_load=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def enable_dependency_loading; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def enable_dependency_loading=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#27
  def encoding; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#215
  def encoding=(value); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def exceptions_app; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def exceptions_app=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def file_watcher; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def file_watcher=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def filter_parameters; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def filter_parameters=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def filter_redirect; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def filter_redirect=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def force_ssl; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def force_ssl=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def helpers_paths; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def helpers_paths=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def host_authorization; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def host_authorization=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def hosts; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def hosts=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#259
  def load_database_yaml; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#85
  def load_defaults(target_version); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#27
  def loaded_config_version; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def log_formatter; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def log_formatter=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def log_level; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def log_level=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def log_tags; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def log_tags=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def logger; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def logger=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#236
  def paths; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#354
  def permissions_policy(&block); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def public_file_server; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def public_file_server=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def railties_order; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def railties_order=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def rake_eager_load; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def rake_eager_load=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def read_encrypted_secrets; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def read_encrypted_secrets=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def relative_url_root; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def relative_url_root=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def reload_classes_only_on_change; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def reload_classes_only_on_change=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def require_master_key; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def require_master_key=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def secret_key_base; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def secret_key_base=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def session_options; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def session_options=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#311
  def session_store(new_session_store = T.unsafe(nil), **options); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#338
  def session_store?; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def ssl_options; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def ssl_options=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def time_zone; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def time_zone=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def x; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#14
  def x=(_arg0); end

  private

  # source://railties/6.1.7/lib/rails/application/configuration.rb#423
  def credentials_available_for_current_env?; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#407
  def default_credentials_content_path; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#415
  def default_credentials_key_path; end
end

class Rails::Application::Configuration::Custom
  # source://railties/6.1.7/lib/rails/application/configuration.rb#387
  def initialize; end

  # source://railties/6.1.7/lib/rails/application/configuration.rb#391
  def method_missing(method, *args); end

  private

  # source://railties/6.1.7/lib/rails/application/configuration.rb#401
  def respond_to_missing?(symbol, *_arg1); end
end

class Rails::Application::DefaultMiddlewareStack
  # source://railties/6.1.7/lib/rails/application/default_middleware_stack.rb#8
  def initialize(app, config, paths); end

  # source://railties/6.1.7/lib/rails/application/default_middleware_stack.rb#6
  def app; end

  # source://railties/6.1.7/lib/rails/application/default_middleware_stack.rb#14
  def build_stack; end

  # source://railties/6.1.7/lib/rails/application/default_middleware_stack.rb#6
  def config; end

  # source://railties/6.1.7/lib/rails/application/default_middleware_stack.rb#6
  def paths; end

  private

  # source://railties/6.1.7/lib/rails/application/default_middleware_stack.rb#84
  def load_rack_cache; end

  # source://railties/6.1.7/lib/rails/application/default_middleware_stack.rb#106
  def show_exceptions_app; end
end

module Rails::Application::Finisher
  include ::Rails::Initializable
  extend ::Rails::Initializable::ClassMethods
end

module Rails::Application::Finisher::InterlockHook
  class << self
    # source://railties/6.1.7/lib/rails/application/finisher.rb#162
    def complete(_state); end

    # source://railties/6.1.7/lib/rails/application/finisher.rb#158
    def run; end
  end
end

class Rails::Application::Finisher::MutexHook
  # source://railties/6.1.7/lib/rails/application/finisher.rb#144
  def initialize(mutex = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/application/finisher.rb#152
  def complete(_state); end

  # source://railties/6.1.7/lib/rails/application/finisher.rb#148
  def run; end
end

# source://railties/6.1.7/lib/rails/application.rb#125
Rails::Application::INITIAL_VARIABLES = T.let(T.unsafe(nil), Array)

class Rails::Application::RoutesReloader
  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#12
  def initialize; end

  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#9
  def eager_load; end

  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#9
  def eager_load=(_arg0); end

  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#10
  def execute(*_arg0, &_arg1); end

  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#10
  def execute_if_updated(*_arg0, &_arg1); end

  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#8
  def external_routes; end

  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#8
  def paths; end

  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#19
  def reload!; end

  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#8
  def route_sets; end

  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#10
  def updated?(*_arg0, &_arg1); end

  private

  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#39
  def clear!; end

  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#50
  def finalize!; end

  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#46
  def load_paths; end

  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#54
  def revert; end

  # source://railties/6.1.7/lib/rails/application/routes_reloader.rb#29
  def updater; end
end

class Rails::ApplicationController < ::ActionController::Base
  private

  # source://actionview/6.1.7/lib/action_view/layouts.rb#325
  def _layout(lookup_context, formats); end

  # source://railties/6.1.7/lib/rails/application_controller.rb#25
  def disable_content_security_policy_nonce!; end

  # source://railties/6.1.7/lib/rails/application_controller.rb#21
  def local_request?; end

  # source://railties/6.1.7/lib/rails/application_controller.rb#15
  def require_local!; end

  class << self
    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#67
    def __callbacks; end

    # source://actionview/6.1.7/lib/action_view/layouts.rb#209
    def _layout; end

    # source://actionview/6.1.7/lib/action_view/layouts.rb#210
    def _layout_conditions; end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#212
    def middleware_stack; end
  end
end

module Rails::Autoloaders
  extend ::Enumerable

  class << self
    # source://railties/6.1.7/lib/rails/autoloaders.rb#28
    def each; end

    # source://railties/6.1.7/lib/rails/autoloaders.rb#39
    def log!; end

    # source://railties/6.1.7/lib/rails/autoloaders.rb#35
    def logger=(logger); end

    # source://railties/6.1.7/lib/rails/autoloaders.rb#10
    def main; end

    # source://railties/6.1.7/lib/rails/autoloaders.rb#19
    def once; end

    # source://railties/6.1.7/lib/rails/autoloaders.rb#43
    def zeitwerk_enabled?; end
  end
end

module Rails::Configuration; end

class Rails::Configuration::Generators
  # source://railties/6.1.7/lib/rails/configuration.rb#113
  def initialize; end

  # source://railties/6.1.7/lib/rails/configuration.rb#135
  def after_generate(&block); end

  # source://railties/6.1.7/lib/rails/configuration.rb#111
  def after_generate_callbacks; end

  # source://railties/6.1.7/lib/rails/configuration.rb#110
  def aliases; end

  # source://railties/6.1.7/lib/rails/configuration.rb#110
  def aliases=(_arg0); end

  # source://railties/6.1.7/lib/rails/configuration.rb#110
  def api_only; end

  # source://railties/6.1.7/lib/rails/configuration.rb#110
  def api_only=(_arg0); end

  # source://railties/6.1.7/lib/rails/configuration.rb#110
  def colorize_logging; end

  # source://railties/6.1.7/lib/rails/configuration.rb#110
  def colorize_logging=(_arg0); end

  # source://railties/6.1.7/lib/rails/configuration.rb#110
  def fallbacks; end

  # source://railties/6.1.7/lib/rails/configuration.rb#110
  def fallbacks=(_arg0); end

  # source://railties/6.1.7/lib/rails/configuration.rb#111
  def hidden_namespaces; end

  # source://railties/6.1.7/lib/rails/configuration.rb#131
  def hide_namespace(namespace); end

  # source://railties/6.1.7/lib/rails/configuration.rb#139
  def method_missing(method, *args); end

  # source://railties/6.1.7/lib/rails/configuration.rb#110
  def options; end

  # source://railties/6.1.7/lib/rails/configuration.rb#110
  def options=(_arg0); end

  # source://railties/6.1.7/lib/rails/configuration.rb#110
  def templates; end

  # source://railties/6.1.7/lib/rails/configuration.rb#110
  def templates=(_arg0); end

  private

  # source://railties/6.1.7/lib/rails/configuration.rb#124
  def initialize_copy(source); end
end

class Rails::Configuration::MiddlewareStackProxy
  # source://railties/6.1.7/lib/rails/configuration.rb#47
  def initialize(operations = T.unsafe(nil), delete_operations = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/configuration.rb#101
  def +(other); end

  # source://railties/6.1.7/lib/rails/configuration.rb#74
  def delete(*args, &block); end

  # source://railties/6.1.7/lib/rails/configuration.rb#52
  def insert(*args, &block); end

  # source://railties/6.1.7/lib/rails/configuration.rb#59
  def insert_after(*args, &block); end

  # source://railties/6.1.7/lib/rails/configuration.rb#52
  def insert_before(*args, &block); end

  # source://railties/6.1.7/lib/rails/configuration.rb#93
  def merge_into(other); end

  # source://railties/6.1.7/lib/rails/configuration.rb#78
  def move(*args, &block); end

  # source://railties/6.1.7/lib/rails/configuration.rb#84
  def move_after(*args, &block); end

  # source://railties/6.1.7/lib/rails/configuration.rb#78
  def move_before(*args, &block); end

  # source://railties/6.1.7/lib/rails/configuration.rb#64
  def swap(*args, &block); end

  # source://railties/6.1.7/lib/rails/configuration.rb#88
  def unshift(*args, &block); end

  # source://railties/6.1.7/lib/rails/configuration.rb#69
  def use(*args, &block); end

  protected

  # source://railties/6.1.7/lib/rails/configuration.rb#106
  def delete_operations; end

  # source://railties/6.1.7/lib/rails/configuration.rb#106
  def operations; end
end

class Rails::Engine < ::Rails::Railtie
  include ::ActiveSupport::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods

  # source://railties/6.1.7/lib/rails/engine.rb#432
  def initialize; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#67
  def __callbacks; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#67
  def __callbacks?; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#835
  def _load_seed_callbacks; end

  # source://activesupport/6.1.7/lib/active_support/callbacks.rb#823
  def _run_load_seed_callbacks(&block); end

  # source://railties/6.1.7/lib/rails/engine.rb#520
  def app; end

  # source://railties/6.1.7/lib/rails/engine.rb#537
  def call(env); end

  # source://railties/6.1.7/lib/rails/engine.rb#556
  def config; end

  # source://railties/6.1.7/lib/rails/engine.rb#484
  def eager_load!; end

  # source://railties/6.1.7/lib/rails/engine.rb#532
  def endpoint; end

  # source://railties/6.1.7/lib/rails/engine.rb#430
  def engine_name(*_arg0, &_arg1); end

  # source://railties/6.1.7/lib/rails/engine.rb#543
  def env_config; end

  # source://railties/6.1.7/lib/rails/engine.rb#503
  def helpers; end

  # source://railties/6.1.7/lib/rails/engine.rb#515
  def helpers_paths; end

  # source://railties/6.1.7/lib/rails/engine.rb#430
  def isolated?(*_arg0, &_arg1); end

  # source://railties/6.1.7/lib/rails/engine.rb#446
  def load_console(app = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/engine.rb#470
  def load_generators(app = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/engine.rb#455
  def load_runner(app = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/engine.rb#564
  def load_seed; end

  # source://railties/6.1.7/lib/rails/engine.rb#479
  def load_server(app = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/engine.rb#462
  def load_tasks(app = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/engine.rb#429
  def middleware(*_arg0, &_arg1); end

  # source://railties/6.1.7/lib/rails/engine.rb#429
  def paths(*_arg0, &_arg1); end

  # source://railties/6.1.7/lib/rails/engine.rb#498
  def railties; end

  # source://railties/6.1.7/lib/rails/engine.rb#429
  def root(*_arg0, &_arg1); end

  # source://railties/6.1.7/lib/rails/engine.rb#549
  def routes(&block); end

  # source://railties/6.1.7/lib/rails/engine.rb#668
  def routes?; end

  protected

  # source://railties/6.1.7/lib/rails/engine.rb#673
  def run_tasks_blocks(*_arg0); end

  private

  # source://railties/6.1.7/lib/rails/engine.rb#705
  def _all_autoload_once_paths; end

  # source://railties/6.1.7/lib/rails/engine.rb#709
  def _all_autoload_paths; end

  # source://railties/6.1.7/lib/rails/engine.rb#713
  def _all_load_paths(add_autoload_paths_to_load_path); end

  # source://railties/6.1.7/lib/rails/engine.rb#729
  def build_middleware; end

  # source://railties/6.1.7/lib/rails/engine.rb#721
  def build_request(env); end

  # source://railties/6.1.7/lib/rails/engine.rb#701
  def default_middleware_stack; end

  # source://railties/6.1.7/lib/rails/engine.rb#685
  def has_migrations?; end

  # source://railties/6.1.7/lib/rails/engine.rb#679
  def load_config_initializer(initializer); end

  class << self
    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#67
    def __callbacks; end

    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#67
    def __callbacks=(value); end

    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#67
    def __callbacks?; end

    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#827
    def _load_seed_callbacks; end

    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#831
    def _load_seed_callbacks=(value); end

    # source://railties/6.1.7/lib/rails/engine.rb#353
    def called_from; end

    # source://railties/6.1.7/lib/rails/engine.rb#353
    def called_from=(_arg0); end

    # source://railties/6.1.7/lib/rails/engine.rb#358
    def eager_load!(*_arg0, &_arg1); end

    # source://railties/6.1.7/lib/rails/engine.rb#378
    def endpoint(endpoint = T.unsafe(nil)); end

    # source://railties/6.1.7/lib/rails/railtie.rb#176
    def engine_name(name = T.unsafe(nil)); end

    # source://railties/6.1.7/lib/rails/engine.rb#416
    def find(path); end

    # source://railties/6.1.7/lib/rails/engine.rb#374
    def find_root(from); end

    # source://railties/6.1.7/lib/rails/engine.rb#689
    def find_root_with_flag(flag, root_path, default = T.unsafe(nil)); end

    # source://railties/6.1.7/lib/rails/engine.rb#360
    def inherited(base); end

    # source://railties/6.1.7/lib/rails/engine.rb#384
    def isolate_namespace(mod); end

    # source://railties/6.1.7/lib/rails/engine.rb#353
    def isolated; end

    # source://railties/6.1.7/lib/rails/engine.rb#353
    def isolated=(_arg0); end

    # source://railties/6.1.7/lib/rails/engine.rb#353
    def isolated?; end
  end
end

class Rails::Engine::Configuration < ::Rails::Railtie::Configuration
  # source://railties/6.1.7/lib/rails/engine/configuration.rb#12
  def initialize(root = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/engine/configuration.rb#83
  def autoload_once_paths; end

  # source://railties/6.1.7/lib/rails/engine/configuration.rb#10
  def autoload_once_paths=(_arg0); end

  # source://railties/6.1.7/lib/rails/engine/configuration.rb#87
  def autoload_paths; end

  # source://railties/6.1.7/lib/rails/engine/configuration.rb#10
  def autoload_paths=(_arg0); end

  # source://railties/6.1.7/lib/rails/engine/configuration.rb#79
  def eager_load_paths; end

  # source://railties/6.1.7/lib/rails/engine/configuration.rb#10
  def eager_load_paths=(_arg0); end

  # source://railties/6.1.7/lib/rails/engine/configuration.rb#32
  def generators; end

  # source://railties/6.1.7/lib/rails/engine/configuration.rb#9
  def javascript_path; end

  # source://railties/6.1.7/lib/rails/engine/configuration.rb#9
  def javascript_path=(_arg0); end

  # source://railties/6.1.7/lib/rails/engine/configuration.rb#9
  def middleware; end

  # source://railties/6.1.7/lib/rails/engine/configuration.rb#9
  def middleware=(_arg0); end

  # source://railties/6.1.7/lib/rails/engine/configuration.rb#38
  def paths; end

  # source://railties/6.1.7/lib/rails/engine/configuration.rb#8
  def root; end

  # source://railties/6.1.7/lib/rails/engine/configuration.rb#75
  def root=(value); end
end

class Rails::Engine::Railties
  include ::Enumerable

  # source://railties/6.1.7/lib/rails/engine/railties.rb#9
  def initialize; end

  # source://railties/6.1.7/lib/rails/engine/railties.rb#18
  def -(others); end

  # source://railties/6.1.7/lib/rails/engine/railties.rb#7
  def _all; end

  # source://railties/6.1.7/lib/rails/engine/railties.rb#14
  def each(*args, &block); end
end

module Rails::Info
  # source://railties/6.1.7/lib/rails/info.rb#10
  def properties; end

  # source://railties/6.1.7/lib/rails/info.rb#10
  def properties=(val); end

  class << self
    # source://railties/6.1.7/lib/rails/info.rb#31
    def inspect; end

    # source://railties/6.1.7/lib/rails/info.rb#10
    def properties; end

    # source://railties/6.1.7/lib/rails/info.rb#10
    def properties=(val); end

    # source://railties/6.1.7/lib/rails/info.rb#25
    def property(name, value = T.unsafe(nil)); end

    # source://railties/6.1.7/lib/rails/info.rb#43
    def to_html; end

    # source://railties/6.1.7/lib/rails/info.rb#31
    def to_s; end
  end
end

class Rails::InfoController < ::Rails::ApplicationController
  # source://railties/6.1.7/lib/rails/info_controller.rb#12
  def index; end

  # source://railties/6.1.7/lib/rails/info_controller.rb#16
  def properties; end

  # source://railties/6.1.7/lib/rails/info_controller.rb#21
  def routes; end

  private

  # source://actionview/6.1.7/lib/action_view/layouts.rb#325
  def _layout(lookup_context, formats); end

  # source://railties/6.1.7/lib/rails/info_controller.rb#8
  def _layout_from_proc; end

  # source://railties/6.1.7/lib/rails/info_controller.rb#36
  def match_route; end

  # source://railties/6.1.7/lib/rails/info_controller.rb#42
  def with_leading_slash(path); end

  class << self
    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#67
    def __callbacks; end

    # source://actionview/6.1.7/lib/action_view/layouts.rb#209
    def _layout; end

    # source://actionview/6.1.7/lib/action_view/layouts.rb#210
    def _layout_conditions; end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#212
    def middleware_stack; end
  end
end

module Rails::Initializable
  mixes_in_class_methods ::Rails::Initializable::ClassMethods

  # source://railties/6.1.7/lib/rails/initializable.rb#66
  def initializers; end

  # source://railties/6.1.7/lib/rails/initializable.rb#58
  def run_initializers(group = T.unsafe(nil), *args); end

  class << self
    # source://railties/6.1.7/lib/rails/initializable.rb#7
    def included(base); end
  end
end

module Rails::Initializable::ClassMethods
  # source://railties/6.1.7/lib/rails/initializable.rb#88
  def initializer(name, opts = T.unsafe(nil), &blk); end

  # source://railties/6.1.7/lib/rails/initializable.rb#71
  def initializers; end

  # source://railties/6.1.7/lib/rails/initializable.rb#75
  def initializers_chain; end

  # source://railties/6.1.7/lib/rails/initializable.rb#84
  def initializers_for(binding); end
end

class Rails::Initializable::Collection < ::Array
  include ::TSort

  # source://railties/6.1.7/lib/rails/initializable.rb#53
  def +(other); end

  # source://railties/6.1.7/lib/rails/initializable.rb#49
  def tsort_each_child(initializer, &block); end

  def tsort_each_node; end
end

class Rails::Initializable::Initializer
  # source://railties/6.1.7/lib/rails/initializable.rb#14
  def initialize(name, context, options, &block); end

  # source://railties/6.1.7/lib/rails/initializable.rb#23
  def after; end

  # source://railties/6.1.7/lib/rails/initializable.rb#19
  def before; end

  # source://railties/6.1.7/lib/rails/initializable.rb#27
  def belongs_to?(group); end

  # source://railties/6.1.7/lib/rails/initializable.rb#35
  def bind(context); end

  # source://railties/6.1.7/lib/rails/initializable.rb#12
  def block; end

  # source://railties/6.1.7/lib/rails/initializable.rb#40
  def context_class; end

  # source://railties/6.1.7/lib/rails/initializable.rb#12
  def name; end

  # source://railties/6.1.7/lib/rails/initializable.rb#31
  def run(*args); end
end

class Rails::MailersController < ::Rails::ApplicationController
  # source://railties/6.1.7/lib/rails/mailers_controller.rb#16
  def index; end

  # source://railties/6.1.7/lib/rails/mailers_controller.rb#21
  def preview; end

  private

  # source://actionview/6.1.7/lib/action_view/layouts.rb#325
  def _layout(lookup_context, formats); end

  # source://railties/6.1.7/lib/rails/mailers_controller.rb#80
  def find_part(format); end

  # source://railties/6.1.7/lib/rails/mailers_controller.rb#68
  def find_preferred_part(*formats); end

  # source://railties/6.1.7/lib/rails/mailers_controller.rb#56
  def find_preview; end

  # source://railties/6.1.7/lib/rails/mailers_controller.rb#92
  def locale_query(locale); end

  # source://railties/6.1.7/lib/rails/mailers_controller.rb#88
  def part_query(mime_type); end

  # source://railties/6.1.7/lib/rails/mailers_controller.rb#96
  def set_locale; end

  # source://railties/6.1.7/lib/rails/mailers_controller.rb#52
  def show_previews?; end

  class << self
    # source://activesupport/6.1.7/lib/active_support/callbacks.rb#67
    def __callbacks; end

    # source://actionpack/6.1.7/lib/abstract_controller/helpers.rb#10
    def _helper_methods; end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#212
    def middleware_stack; end
  end
end

module Rails::MailersController::HelperMethods
  include ::ActionController::Base::HelperMethods

  # source://railties/6.1.7/lib/rails/mailers_controller.rb#12
  def locale_query(*args, &block); end

  # source://railties/6.1.7/lib/rails/mailers_controller.rb#12
  def part_query(*args, &block); end
end

module Rails::Paths; end

class Rails::Paths::Path
  include ::Enumerable

  # source://railties/6.1.7/lib/rails/paths.rb#116
  def initialize(root, current, paths, options = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/paths.rb#168
  def <<(path); end

  # source://railties/6.1.7/lib/rails/paths.rb#129
  def absolute_current; end

  # source://railties/6.1.7/lib/rails/paths.rb#150
  def autoload!; end

  # source://railties/6.1.7/lib/rails/paths.rb#158
  def autoload?; end

  # source://railties/6.1.7/lib/rails/paths.rb#150
  def autoload_once!; end

  # source://railties/6.1.7/lib/rails/paths.rb#158
  def autoload_once?; end

  # source://railties/6.1.7/lib/rails/paths.rb#133
  def children; end

  # source://railties/6.1.7/lib/rails/paths.rb#173
  def concat(paths); end

  # source://railties/6.1.7/lib/rails/paths.rb#164
  def each(&block); end

  # source://railties/6.1.7/lib/rails/paths.rb#150
  def eager_load!; end

  # source://railties/6.1.7/lib/rails/paths.rb#158
  def eager_load?; end

  # source://railties/6.1.7/lib/rails/paths.rb#217
  def existent; end

  # source://railties/6.1.7/lib/rails/paths.rb#228
  def existent_directories; end

  # source://railties/6.1.7/lib/rails/paths.rb#198
  def expanded; end

  # source://railties/6.1.7/lib/rails/paths.rb#193
  def extensions; end

  # source://railties/6.1.7/lib/rails/paths.rb#140
  def first; end

  # source://railties/6.1.7/lib/rails/paths.rb#114
  def glob; end

  # source://railties/6.1.7/lib/rails/paths.rb#114
  def glob=(_arg0); end

  # source://railties/6.1.7/lib/rails/paths.rb#144
  def last; end

  # source://railties/6.1.7/lib/rails/paths.rb#150
  def load_path!; end

  # source://railties/6.1.7/lib/rails/paths.rb#158
  def load_path?; end

  # source://railties/6.1.7/lib/rails/paths.rb#185
  def paths; end

  # source://railties/6.1.7/lib/rails/paths.rb#168
  def push(path); end

  # source://railties/6.1.7/lib/rails/paths.rb#154
  def skip_autoload!; end

  # source://railties/6.1.7/lib/rails/paths.rb#154
  def skip_autoload_once!; end

  # source://railties/6.1.7/lib/rails/paths.rb#154
  def skip_eager_load!; end

  # source://railties/6.1.7/lib/rails/paths.rb#154
  def skip_load_path!; end

  # source://railties/6.1.7/lib/rails/paths.rb#198
  def to_a; end

  # source://railties/6.1.7/lib/rails/paths.rb#181
  def to_ary; end

  # source://railties/6.1.7/lib/rails/paths.rb#177
  def unshift(*paths); end

  private

  # source://railties/6.1.7/lib/rails/paths.rb#235
  def files_in(path); end
end

class Rails::Paths::Root
  # source://railties/6.1.7/lib/rails/paths.rb#51
  def initialize(path); end

  # source://railties/6.1.7/lib/rails/paths.rb#66
  def [](path); end

  # source://railties/6.1.7/lib/rails/paths.rb#56
  def []=(path, value); end

  # source://railties/6.1.7/lib/rails/paths.rb#61
  def add(path, options = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/paths.rb#82
  def all_paths; end

  # source://railties/6.1.7/lib/rails/paths.rb#86
  def autoload_once; end

  # source://railties/6.1.7/lib/rails/paths.rb#94
  def autoload_paths; end

  # source://railties/6.1.7/lib/rails/paths.rb#90
  def eager_load; end

  # source://railties/6.1.7/lib/rails/paths.rb#74
  def keys; end

  # source://railties/6.1.7/lib/rails/paths.rb#98
  def load_paths; end

  # source://railties/6.1.7/lib/rails/paths.rb#49
  def path; end

  # source://railties/6.1.7/lib/rails/paths.rb#49
  def path=(_arg0); end

  # source://railties/6.1.7/lib/rails/paths.rb#70
  def values; end

  # source://railties/6.1.7/lib/rails/paths.rb#78
  def values_at(*list); end

  private

  # source://railties/6.1.7/lib/rails/paths.rb#103
  def filter_by(&block); end
end

module Rails::Rack; end

class Rails::Rack::Logger < ::ActiveSupport::LogSubscriber
  # source://railties/6.1.7/lib/rails/rack/logger.rb#17
  def initialize(app, taggers = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/rack/logger.rb#22
  def call(env); end

  private

  # source://railties/6.1.7/lib/rails/rack/logger.rb#33
  def call_app(request, env); end

  # source://railties/6.1.7/lib/rails/rack/logger.rb#56
  def compute_tags(request); end

  # source://railties/6.1.7/lib/rails/rack/logger.rb#69
  def finish(request); end

  # source://railties/6.1.7/lib/rails/rack/logger.rb#74
  def logger; end

  # source://railties/6.1.7/lib/rails/rack/logger.rb#48
  def started_request_message(request); end
end

class Rails::Railtie
  include ::Rails::Initializable
  extend ::ActiveSupport::DescendantsTracker
  extend ::Rails::Initializable::ClassMethods

  # source://railties/6.1.7/lib/rails/railtie.rb#227
  def initialize; end

  # source://railties/6.1.7/lib/rails/railtie.rb#240
  def config; end

  # source://railties/6.1.7/lib/rails/railtie.rb#233
  def configure(&block); end

  # source://railties/6.1.7/lib/rails/railtie.rb#225
  def railtie_name(*_arg0, &_arg1); end

  # source://railties/6.1.7/lib/rails/railtie.rb#244
  def railtie_namespace; end

  protected

  # source://railties/6.1.7/lib/rails/railtie.rb#249
  def run_console_blocks(app); end

  # source://railties/6.1.7/lib/rails/railtie.rb#253
  def run_generators_blocks(app); end

  # source://railties/6.1.7/lib/rails/railtie.rb#257
  def run_runner_blocks(app); end

  # source://railties/6.1.7/lib/rails/railtie.rb#266
  def run_server_blocks(app); end

  # source://railties/6.1.7/lib/rails/railtie.rb#261
  def run_tasks_blocks(app); end

  private

  # source://railties/6.1.7/lib/rails/railtie.rb#272
  def each_registered_block(type, &block); end

  class << self
    # source://railties/6.1.7/lib/rails/railtie.rb#172
    def abstract_railtie?; end

    # source://railties/6.1.7/lib/rails/railtie.rb#146
    def config(*_arg0, &_arg1); end

    # source://railties/6.1.7/lib/rails/railtie.rb#190
    def configure(&block); end

    # source://railties/6.1.7/lib/rails/railtie.rb#156
    def console(&blk); end

    # source://railties/6.1.7/lib/rails/railtie.rb#164
    def generators(&blk); end

    # source://railties/6.1.7/lib/rails/railtie.rb#183
    def instance; end

    # source://railties/6.1.7/lib/rails/railtie.rb#176
    def railtie_name(name = T.unsafe(nil)); end

    # source://railties/6.1.7/lib/rails/railtie.rb#152
    def rake_tasks(&blk); end

    # source://railties/6.1.7/lib/rails/railtie.rb#160
    def runner(&blk); end

    # source://railties/6.1.7/lib/rails/railtie.rb#168
    def server(&blk); end

    # source://railties/6.1.7/lib/rails/railtie.rb#148
    def subclasses; end

    private

    # source://railties/6.1.7/lib/rails/railtie.rb#195
    def generate_railtie_name(string); end

    # source://railties/6.1.7/lib/rails/railtie.rb#205
    def method_missing(name, *args, &block); end

    # source://railties/6.1.7/lib/rails/railtie.rb#217
    def register_block_for(type, &blk); end

    # source://railties/6.1.7/lib/rails/railtie.rb#199
    def respond_to_missing?(name, _); end
  end
end

# source://railties/6.1.7/lib/rails/railtie.rb#142
Rails::Railtie::ABSTRACT_RAILTIES = T.let(T.unsafe(nil), Array)

class Rails::Railtie::Configuration
  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#9
  def initialize; end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#71
  def after_initialize(&block); end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#48
  def app_generators; end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#40
  def app_middleware; end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#55
  def before_configuration(&block); end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#61
  def before_eager_load(&block); end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#66
  def before_initialize(&block); end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#19
  def eager_load_namespaces; end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#86
  def respond_to?(name, include_private = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#82
  def to_prepare(&blk); end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#76
  def to_prepare_blocks; end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#31
  def watchable_dirs; end

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#24
  def watchable_files; end

  private

  # source://railties/6.1.7/lib/rails/railtie/configuration.rb#91
  def method_missing(name, *args, &blk); end

  class << self
    # source://railties/6.1.7/lib/rails/railtie/configuration.rb#14
    def eager_load_namespaces; end
  end
end

class Rails::Secrets
  class << self
    # source://railties/6.1.7/lib/rails/secrets.rb#45
    def decrypt(data); end

    # source://railties/6.1.7/lib/rails/secrets.rb#41
    def encrypt(data); end

    # source://railties/6.1.7/lib/rails/secrets.rb#37
    def key; end

    # source://railties/6.1.7/lib/rails/secrets.rb#24
    def parse(paths, env:); end

    # source://railties/6.1.7/lib/rails/secrets.rb#49
    def read; end

    # source://railties/6.1.7/lib/rails/secrets.rb#58
    def read_for_editing(&block); end

    # source://railties/6.1.7/lib/rails/secrets.rb#22
    def root=(_arg0); end

    # source://railties/6.1.7/lib/rails/secrets.rb#53
    def write(contents); end

    private

    # source://railties/6.1.7/lib/rails/secrets.rb#103
    def encryptor; end

    # source://railties/6.1.7/lib/rails/secrets.rb#63
    def handle_missing_key; end

    # source://railties/6.1.7/lib/rails/secrets.rb#73
    def key_path; end

    # source://railties/6.1.7/lib/rails/secrets.rb#77
    def path; end

    # source://railties/6.1.7/lib/rails/secrets.rb#81
    def preprocess(path); end

    # source://railties/6.1.7/lib/rails/secrets.rb#67
    def read_key_file; end

    # source://railties/6.1.7/lib/rails/secrets.rb#89
    def writing(contents); end
  end
end

class Rails::Secrets::MissingKeyError < ::RuntimeError
  # source://railties/6.1.7/lib/rails/secrets.rb#10
  def initialize; end
end

class Rails::SourceAnnotationExtractor
  # source://railties/6.1.7/lib/rails/source_annotation_extractor.rb#85
  def initialize(tag); end

  # source://railties/6.1.7/lib/rails/source_annotation_extractor.rb#137
  def display(results, options = T.unsafe(nil)); end

  # source://railties/6.1.7/lib/rails/source_annotation_extractor.rb#125
  def extract_annotations_from(file, pattern); end

  # source://railties/6.1.7/lib/rails/source_annotation_extractor.rb#91
  def find(dirs); end

  # source://railties/6.1.7/lib/rails/source_annotation_extractor.rb#99
  def find_in(dir); end

  # source://railties/6.1.7/lib/rails/source_annotation_extractor.rb#83
  def tag; end

  class << self
    # source://railties/6.1.7/lib/rails/source_annotation_extractor.rb#76
    def enumerate(tag = T.unsafe(nil), options = T.unsafe(nil)); end
  end
end

class Rails::SourceAnnotationExtractor::Annotation < ::Struct
  # source://railties/6.1.7/lib/rails/source_annotation_extractor.rb#55
  def to_s(options = T.unsafe(nil)); end

  class << self
    # source://railties/6.1.7/lib/rails/source_annotation_extractor.rb#15
    def directories; end

    # source://railties/6.1.7/lib/rails/source_annotation_extractor.rb#35
    def extensions; end

    # source://railties/6.1.7/lib/rails/source_annotation_extractor.rb#21
    def register_directories(*dirs); end

    # source://railties/6.1.7/lib/rails/source_annotation_extractor.rb#41
    def register_extensions(*exts, &block); end

    # source://railties/6.1.7/lib/rails/source_annotation_extractor.rb#31
    def register_tags(*additional_tags); end

    # source://railties/6.1.7/lib/rails/source_annotation_extractor.rb#25
    def tags; end
  end
end

module Rails::VERSION; end

# source://railties/6.1.7/lib/rails/gem_version.rb#10
Rails::VERSION::MAJOR = T.let(T.unsafe(nil), Integer)

# source://railties/6.1.7/lib/rails/gem_version.rb#11
Rails::VERSION::MINOR = T.let(T.unsafe(nil), Integer)

# source://railties/6.1.7/lib/rails/gem_version.rb#13
Rails::VERSION::PRE = T.let(T.unsafe(nil), T.untyped)

# source://railties/6.1.7/lib/rails/gem_version.rb#15
Rails::VERSION::STRING = T.let(T.unsafe(nil), String)

# source://railties/6.1.7/lib/rails/gem_version.rb#12
Rails::VERSION::TINY = T.let(T.unsafe(nil), Integer)

class Rails::WelcomeController < ::Rails::ApplicationController
  # source://railties/6.1.7/lib/rails/welcome_controller.rb#8
  def index; end

  private

  # source://actionview/6.1.7/lib/action_view/layouts.rb#325
  def _layout(lookup_context, formats); end

  class << self
    # source://actionview/6.1.7/lib/action_view/layouts.rb#209
    def _layout; end

    # source://actionview/6.1.7/lib/action_view/layouts.rb#210
    def _layout_conditions; end

    # source://actionpack/6.1.7/lib/action_controller/metal.rb#212
    def middleware_stack; end
  end
end
